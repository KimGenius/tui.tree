tui.util.defineNamespace("fedoc.lnb",{"classes":[{"comment":"/**\n * Set the checkbox-api\n * @class Checkbox\n * @constructor\n * @param {Tree} tree - Tree\n * @param {Object} option - Option\n *  @param {string} option.checkboxClassName - Classname of checkbox element\n */","meta":{"range":[703,15500],"filename":"checkbox.js","lineno":35,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100000184","name":"Checkbox","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Set the checkbox-api</p>","kind":"class","classdesc":"<p>Checkbox</p>","params":[{"type":{"names":["Tree"]},"description":"<p>Tree</p>","name":"tree"},{"type":{"names":["Object"]},"description":"<p>Option</p>","name":"option"},{"type":{"names":["string"]},"description":"<p>Classname of checkbox element</p>","name":"option.checkboxClassName"}],"name":"Checkbox","longname":"Checkbox","scope":"global","___id":"T000002R000038","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Checkbox","signature":"<span class=\"signature\">(tree, option)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n         * @static\n         * @memberOf Checkbox\n         * @returns {Array.<string>} API list of checkbox\n         */","meta":{"range":[941,1012],"filename":"checkbox.js","lineno":42,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100000195","name":"getAPIList","type":"FunctionExpression"},"shortpath":"file"},"scope":"static","memberof":"Checkbox","returns":[{"type":{"names":["Array.<string>"]},"description":"<p>API list of checkbox</p>"}],"name":"getAPIList","longname":"Checkbox.getAPIList","kind":"function","___id":"T000002R000040","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getAPIList","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Checkbox.html\">Checkbox</a>."]},{"comment":"/**\n     * Disable this module\n     */","meta":{"range":[1452,1626],"filename":"checkbox.js","lineno":62,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100000267","name":"destroy","type":"FunctionExpression"},"vars":{"tree":"Checkbox#destroy~tree","":null},"shortpath":"file"},"description":"<p>Disable this module</p>","name":"destroy","longname":"Checkbox#destroy","kind":"function","memberof":"Checkbox","scope":"instance","___id":"T000002R000048","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"destroy","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Checkbox.html\">Checkbox</a>#"]}]},{"comment":"/**\n * Set context-menu feature on tree\n * @class ContextMenu\n * @constructor\n * @param {Tree} tree - Tree\n * @param {object} options - Options\n *     @param {Array.<object>} options.menuData - Context menu data\n */","meta":{"range":[503,4756],"filename":"contextMenu.js","lineno":17,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001284","name":"ContextMenu","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Set context-menu feature on tree</p>","kind":"class","classdesc":"<p>ContextMenu</p>","params":[{"type":{"names":["Tree"]},"description":"<p>Tree</p>","name":"tree"},{"type":{"names":["object"]},"description":"<p>Options</p>","name":"options"},{"type":{"names":["Array.<object>"]},"description":"<p>Context menu data</p>","name":"options.menuData"}],"name":"ContextMenu","longname":"ContextMenu","scope":"global","___id":"T000002R000140","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"ContextMenu","signature":"<span class=\"signature\">(tree, options)</span><span class=\"type-signature\"></span>","ancestors":[],"members":[{"comment":"/**\n         * Floating layer element\n         * @type {HTMLElement}\n         */","meta":{"range":[1363,1414],"filename":"contextMenu.js","lineno":51,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001338","name":"this.flElement","type":"CallExpression","value":"","paramnames":[]},"shortpath":"file"},"description":"<p>Floating layer element</p>","type":{"names":["HTMLElement"]},"name":"flElement","longname":"ContextMenu#flElement","kind":"member","memberof":"ContextMenu","scope":"instance","___id":"T000002R000147","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"flElement","ancestors":["<a href=\"ContextMenu.html\">ContextMenu</a>#"],"signature":"<span class=\"type-signature\"> :HTMLElement</span>"},{"comment":"/**\n         * Id of floating layer in tree\n         * @type {string}\n         */","meta":{"range":[1079,1123],"filename":"contextMenu.js","lineno":39,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001315","name":"this.flId","type":"BinaryExpression","value":"","paramnames":[]},"shortpath":"file"},"description":"<p>Id of floating layer in tree</p>","type":{"names":["string"]},"name":"flId","longname":"ContextMenu#flId","kind":"member","memberof":"ContextMenu","scope":"instance","___id":"T000002R000145","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"flId","ancestors":["<a href=\"ContextMenu.html\">ContextMenu</a>#"],"signature":"<span class=\"type-signature\"> :string</span>"},{"comment":"/**\n         * Info of context menu in tree\n         * @type {object}\n         */","meta":{"range":[1224,1263],"filename":"contextMenu.js","lineno":45,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001329","name":"this.menu","type":"CallExpression","value":"","paramnames":[]},"shortpath":"file"},"description":"<p>Info of context menu in tree</p>","type":{"names":["object"]},"name":"menu","longname":"ContextMenu#menu","kind":"member","memberof":"ContextMenu","scope":"instance","___id":"T000002R000146","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"menu","ancestors":["<a href=\"ContextMenu.html\">ContextMenu</a>#"],"signature":"<span class=\"type-signature\"> :object</span>"},{"comment":"/**\n         * Id of selected tree item\n         * @type {string}\n         */","meta":{"range":[1511,1537],"filename":"contextMenu.js","lineno":57,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001350","name":"this.selectedNodeId","type":"Literal","value":null,"paramnames":[]},"shortpath":"file"},"description":"<p>Id of selected tree item</p>","type":{"names":["string"]},"name":"selectedNodeId","longname":"ContextMenu#selectedNodeId","kind":"member","memberof":"ContextMenu","scope":"instance","___id":"T000002R000148","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"selectedNodeId","ancestors":["<a href=\"ContextMenu.html\">ContextMenu</a>#"],"signature":"<span class=\"type-signature\"> :string</span>"},{"comment":"/**\n         * Tree data\n         * @type {Tree}\n         */","meta":{"range":[962,978],"filename":"contextMenu.js","lineno":33,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001309","name":"this.tree","type":"Identifier","value":"tree","paramnames":[]},"shortpath":"file"},"description":"<p>Tree data</p>","type":{"names":["Tree"]},"name":"tree","longname":"ContextMenu#tree","kind":"member","memberof":"ContextMenu","scope":"instance","___id":"T000002R000144","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"tree","ancestors":["<a href=\"ContextMenu.html\">ContextMenu</a>#"],"signature":"<span class=\"type-signature\"> :<a target=\"body\" href=\"Tree.html\">Tree</a></span>"}],"methods":[{"comment":"/**\n         * @static\n         * @memberOf ContextMenu\n         * @returns {Array.<string>} API list of ContextMenu\n         */","meta":{"range":[752,823],"filename":"contextMenu.js","lineno":24,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001295","name":"getAPIList","type":"FunctionExpression"},"shortpath":"file"},"scope":"static","memberof":"ContextMenu","returns":[{"type":{"names":["Array.<string>"]},"description":"<p>API list of ContextMenu</p>"}],"name":"getAPIList","longname":"ContextMenu.getAPIList","kind":"function","___id":"T000002R000142","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getAPIList","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"ContextMenu.html\">ContextMenu</a>."]},{"comment":"/**\n     * Event handler on tree item\n     * @param {MouseEvent} e - Mouse event\n     */","meta":{"range":[4608,4753],"filename":"contextMenu.js","lineno":180,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001589","name":"_onMouseClick","type":"FunctionExpression"},"vars":{"target":"ContextMenu#_onMouseClick~target","this.selectedNodeId":"ContextMenu#selectedNodeId"},"shortpath":"file"},"description":"<p>Event handler on tree item</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"e"}],"name":"_onMouseClick","longname":"ContextMenu#_onMouseClick","kind":"function","memberof":"ContextMenu","scope":"instance","___id":"T000002R000168","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_onMouseClick","signature":"<span class=\"signature\">(e)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"ContextMenu.html\">ContextMenu</a>#"]},{"comment":"/**\n     * Disable context-menu feature\n     */","meta":{"range":[1694,1923],"filename":"contextMenu.js","lineno":67,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001370","name":"destroy","type":"FunctionExpression"},"vars":{"treeSelector":"ContextMenu#destroy~treeSelector"},"shortpath":"file"},"description":"<p>Disable context-menu feature</p>","name":"destroy","longname":"ContextMenu#destroy","kind":"function","memberof":"ContextMenu","scope":"instance","___id":"T000002R000149","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"destroy","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"ContextMenu.html\">ContextMenu</a>#"]}]},{"comment":"/**\n * Set the tree draggable\n * @class Draggable\n * @constructor\n * @param {Tree} tree - Tree\n * @param {Object} options - Options\n *  @param {boolean} options.useHelper - Using helper flag\n *  @param {{x: number, y:number}} options.helperPos - Helper position\n *  @param {Array.<string>} options.rejectedTagNames - No draggable tag names\n *  @param {Array.<string>} options.rejectedClassNames - No draggable class names\n *  @param {number} options.autoOpenDelay - Delay time while dragging to be opened\n *  @param {boolean} options.isSortable - Flag of whether using sortable dragging\n *  @param {string} options.hoverClassName - Class name for hovered node\n *  @param {string} options.lineClassName - Class name for moving position line\n *  @param {{top: number, bottom: number}} options.lineBoundary - Boundary value for visible moving line\n */","meta":{"range":[1369,12216],"filename":"draggable.js","lineno":43,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001671","name":"Draggable","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Set the tree draggable</p>","kind":"class","classdesc":"<p>Draggable</p>","params":[{"type":{"names":["Tree"]},"description":"<p>Tree</p>","name":"tree"},{"type":{"names":["Object"]},"description":"<p>Options</p>","name":"options"},{"type":{"names":["boolean"]},"description":"<p>Using helper flag</p>","name":"options.useHelper"},{"type":{"names":["Object"]},"description":"<p>Helper position</p>","name":"options.helperPos"},{"type":{"names":["Array.<string>"]},"description":"<p>No draggable tag names</p>","name":"options.rejectedTagNames"},{"type":{"names":["Array.<string>"]},"description":"<p>No draggable class names</p>","name":"options.rejectedClassNames"},{"type":{"names":["number"]},"description":"<p>Delay time while dragging to be opened</p>","name":"options.autoOpenDelay"},{"type":{"names":["boolean"]},"description":"<p>Flag of whether using sortable dragging</p>","name":"options.isSortable"},{"type":{"names":["string"]},"description":"<p>Class name for hovered node</p>","name":"options.hoverClassName"},{"type":{"names":["string"]},"description":"<p>Class name for moving position line</p>","name":"options.lineClassName"},{"type":{"names":["Object"]},"description":"<p>Boundary value for visible moving line</p>","name":"options.lineBoundary"}],"name":"Draggable","longname":"Draggable","scope":"global","___id":"T000002R000188","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Draggable","signature":"<span class=\"signature\">(tree, options)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n         * @static\n         * @memberOf Draggable\n         * @returns {Array.<string>} API list of Draggable\n         */","meta":{"range":[1610,1681],"filename":"draggable.js","lineno":50,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001682","name":"getAPIList","type":"FunctionExpression"},"shortpath":"file"},"scope":"static","memberof":"Draggable","returns":[{"type":{"names":["Array.<string>"]},"description":"<p>API list of Draggable</p>"}],"name":"getAPIList","longname":"Draggable.getAPIList","kind":"function","___id":"T000002R000190","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getAPIList","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>."]},{"comment":"/**\n     * Apply move action that are delay effect and sortable moving node\n     * @param {strig} nodeId - Selected tree node id\n     * @param {object} mousePos - Current mouse position\n     */","meta":{"range":[8307,9004],"filename":"draggable.js","lineno":280,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002502","name":"_applyMoveAction","type":"FunctionExpression"},"vars":{"currentElement":"Draggable#_applyMoveAction~currentElement","targetPos":"Draggable#_applyMoveAction~targetPos","hasClass":"Draggable#_applyMoveAction~hasClass","isContain":"Draggable#_applyMoveAction~isContain","boundaryType":"Draggable#_applyMoveAction~boundaryType"},"shortpath":"file"},"description":"<p>Apply move action that are delay effect and sortable moving node</p>","params":[{"type":{"names":["strig"]},"description":"<p>Selected tree node id</p>","name":"nodeId"},{"type":{"names":["object"]},"description":"<p>Current mouse position</p>","name":"mousePos"}],"name":"_applyMoveAction","longname":"Draggable#_applyMoveAction","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000272","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_applyMoveAction","signature":"<span class=\"signature\">(nodeId, mousePos)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Draw boundary line on tree\n     * @param {object} targetPos - Position of tree item\n     * @param {string} boundaryType - Position type in boundary\n     */","meta":{"range":[11212,11852],"filename":"draggable.js","lineno":378,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002813","name":"_drawBoundaryLine","type":"FunctionExpression"},"vars":{"style":"Draggable#_drawBoundaryLine~style","lineHeight":"Draggable#_drawBoundaryLine~lineHeight","scrollTop":"Draggable#_drawBoundaryLine~scrollTop","style.top":"Draggable#_drawBoundaryLine~style.top","style.visibility":"Draggable#_drawBoundaryLine~style.visibility","this.movingLineType":"Draggable#movingLineType"},"shortpath":"file"},"description":"<p>Draw boundary line on tree</p>","params":[{"type":{"names":["object"]},"description":"<p>Position of tree item</p>","name":"targetPos"},{"type":{"names":["string"]},"description":"<p>Position type in boundary</p>","name":"boundaryType"}],"name":"_drawBoundaryLine","longname":"Draggable#_drawBoundaryLine","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000296","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_drawBoundaryLine","signature":"<span class=\"signature\">(targetPos, boundaryType)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Get boundary type by mouse position\n     * @param {object} targetPos - Position of tree item\n     * @param {object} mousePos - Position of moved mouse\n     * @returns {string} Position type in boundary\n     */","meta":{"range":[10728,11034],"filename":"draggable.js","lineno":361,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002765","name":"_getBoundaryType","type":"FunctionExpression"},"vars":{"type":"Draggable#_getBoundaryType~type"},"shortpath":"file"},"description":"<p>Get boundary type by mouse position</p>","params":[{"type":{"names":["object"]},"description":"<p>Position of tree item</p>","name":"targetPos"},{"type":{"names":["object"]},"description":"<p>Position of moved mouse</p>","name":"mousePos"}],"returns":[{"type":{"names":["string"]},"description":"<p>Position type in boundary</p>"}],"name":"_getBoundaryType","longname":"Draggable#_getBoundaryType","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000292","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_getBoundaryType","signature":"<span class=\"signature\">(targetPos, mousePos)</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Get index for inserting\n     * @param {string} nodeId - Current selected helper node id\n     * @returns {number} Index number\n     */","meta":{"range":[12008,12213],"filename":"draggable.js","lineno":401,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002909","name":"_getIndexForInserting","type":"FunctionExpression"},"vars":{"index":"Draggable#_getIndexForInserting~index"},"shortpath":"file"},"description":"<p>Get index for inserting</p>","params":[{"type":{"names":["string"]},"description":"<p>Current selected helper node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["number"]},"description":"<p>Index number</p>"}],"name":"_getIndexForInserting","longname":"Draggable#_getIndexForInserting","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000307","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_getIndexForInserting","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Act to hover on tree item\n     * @param {string} nodeId - Tree node id\n     */","meta":{"range":[9105,9574],"filename":"draggable.js","lineno":303,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002594","name":"_hover","type":"FunctionExpression"},"vars":{"tree":"Draggable#_hover~tree","hoverEl":"Draggable#_hover~hoverEl","this.hoveredElement":"Draggable#hoveredElement","this.timer":"Draggable#timer","":null},"shortpath":"file"},"description":"<p>Act to hover on tree item</p>","params":[{"type":{"names":["string"]},"description":"<p>Tree node id</p>","name":"nodeId"}],"name":"_hover","longname":"Draggable#_hover","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000279","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_hover","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Check contained state of current target\n     * @param {object} targetPos - Position of tree item\n     * @param {object} mousePos - Position of moved mouse\n     * @returns {boolean} Contained state\n     */","meta":{"range":[10054,10496],"filename":"draggable.js","lineno":338,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002694","name":"_isContain","type":"FunctionExpression"},"vars":{"top":"Draggable#_isContain~top","bottom":"Draggable#_isContain~bottom"},"shortpath":"file"},"description":"<p>Check contained state of current target</p>","params":[{"type":{"names":["object"]},"description":"<p>Position of tree item</p>","name":"targetPos"},{"type":{"names":["object"]},"description":"<p>Position of moved mouse</p>","name":"mousePos"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Contained state</p>"}],"name":"_isContain","longname":"Draggable#_isContain","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000287","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_isContain","signature":"<span class=\"signature\">(targetPos, mousePos)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Set moving line element\n     */","meta":{"range":[7723,8102],"filename":"draggable.js","lineno":261,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002447","name":"_setMovingLine","type":"FunctionExpression"},"vars":{"lineElement":"Draggable#_setMovingLine~lineElement","lineStyle":"Draggable#_setMovingLine~lineStyle","lineStyle.position":"Draggable#_setMovingLine~lineStyle.position","lineStyle.visibility":"Draggable#_setMovingLine~lineStyle.visibility","lineElement.className":"Draggable#_setMovingLine~lineElement.className","this.lineElement":"Draggable#lineElement"},"shortpath":"file"},"description":"<p>Set moving line element</p>","name":"_setMovingLine","longname":"Draggable#_setMovingLine","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000265","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_setMovingLine","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Act to unhover on tree item\n     */","meta":{"range":[9632,9827],"filename":"draggable.js","lineno":323,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002662","name":"_unhover","type":"FunctionExpression"},"vars":{"this.hoveredElement":"Draggable#hoveredElement","this.timer":"Draggable#timer"},"shortpath":"file"},"description":"<p>Act to unhover on tree item</p>","name":"_unhover","longname":"Draggable#_unhover","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000284","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_unhover","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Attach mouse down event\n     */","meta":{"range":[3182,3313],"filename":"draggable.js","lineno":99,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001897","name":"attachMousedown","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Attach mouse down event</p>","name":"attachMousedown","longname":"Draggable#attachMousedown","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000215","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"attachMousedown","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Disable this module\n     */","meta":{"range":[7573,7669],"filename":"draggable.js","lineno":253,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002434","name":"destroy","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Disable this module</p>","name":"destroy","longname":"Draggable#destroy","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000264","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"destroy","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Detach mousedown event\n     */","meta":{"range":[7459,7523],"filename":"draggable.js","lineno":246,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002423","name":"detachMousedown","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Detach mousedown event</p>","name":"detachMousedown","longname":"Draggable#detachMousedown","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000263","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"detachMousedown","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Return whether the target element is in rejectedTagNames or in rejectedClassNames\n     * @param {HTMLElement} target - Target element\n     * @returns {boolean} Whether the target is not draggable or draggable\n     */","meta":{"range":[4099,4574],"filename":"draggable.js","lineno":126,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001977","name":"isNotDraggable","type":"FunctionExpression"},"vars":{"tagName":"Draggable#isNotDraggable~tagName","classNames":"Draggable#isNotDraggable~classNames","result":"Draggable#isNotDraggable~result","":null},"shortpath":"file"},"description":"<p>Return whether the target element is in rejectedTagNames or in rejectedClassNames</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>Target element</p>","name":"target"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether the target is not draggable or draggable</p>"}],"name":"isNotDraggable","longname":"Draggable#isNotDraggable","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000223","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isNotDraggable","signature":"<span class=\"signature\">(target)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Event handler - mousedown\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[4677,5298],"filename":"draggable.js","lineno":148,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002045","name":"onMousedown","type":"FunctionExpression"},"vars":{"target":"Draggable#onMousedown~target","tree":"Draggable#onMousedown~tree","nodeId":"Draggable#onMousedown~nodeId","this.currentNodeId":"Draggable#currentNodeId"},"shortpath":"file"},"description":"<p>Event handler - mousedown</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onMousedown","longname":"Draggable#onMousedown","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000228","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onMousedown","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Event handler - mousemove\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[5401,6060],"filename":"draggable.js","lineno":175,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002138","name":"onMousemove","type":"FunctionExpression"},"vars":{"tree":"Draggable#onMousemove~tree","helperEl":"Draggable#onMousemove~helperEl","mousePos":"Draggable#onMousemove~mousePos","target":"Draggable#onMousemove~target","nodeId":"Draggable#onMousemove~nodeId","pos":"Draggable#onMousemove~pos","helperEl.style.top":"Draggable#onMousemove~helperEl.style.top","helperEl.style.left":"Draggable#onMousemove~helperEl.style.left","helperEl.style.display":"Draggable#onMousemove~helperEl.style.display"},"shortpath":"file"},"description":"<p>Event handler - mousemove</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onMousemove","longname":"Draggable#onMousemove","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000237","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onMousemove","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Event handler - mouseup\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[6161,6874],"filename":"draggable.js","lineno":200,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002256","name":"onMouseup","type":"FunctionExpression"},"vars":{"tree":"Draggable#onMouseup~tree","target":"Draggable#onMouseup~target","nodeId":"Draggable#onMouseup~nodeId","index":"Draggable#onMouseup~index","this.lineElement.style.visibility":"Draggable#lineElement.style.visibility","this.helperElement.style.display":"Draggable#helperElement.style.display","this.currentNodeId":"Draggable#currentNodeId","this.movingLineType":"Draggable#movingLineType"},"shortpath":"file"},"description":"<p>Event handler - mouseup</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onMouseup","longname":"Draggable#onMouseup","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000247","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onMouseup","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Prevent text-selection\n     */","meta":{"range":[3366,3860],"filename":"draggable.js","lineno":107,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001917","name":"preventTextSelection","type":"FunctionExpression"},"vars":{"tree":"Draggable#preventTextSelection~tree","style":"Draggable#preventTextSelection~style","selectKey":"Draggable#preventTextSelection~selectKey","this.userSelectPropertyKey":"Draggable#userSelectPropertyKey","this.userSelectPropertyValue":"Draggable#userSelectPropertyValue","style[undefined]":"Draggable#preventTextSelection~style.undefined]"},"shortpath":"file"},"description":"<p>Prevent text-selection</p>","name":"preventTextSelection","longname":"Draggable#preventTextSelection","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000216","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"preventTextSelection","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Restore text-selection\n     */","meta":{"range":[6927,7232],"filename":"draggable.js","lineno":227,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002371","name":"restoreTextSelection","type":"FunctionExpression"},"vars":{"tree":"Draggable#restoreTextSelection~tree","tree.rootElement.style[undefined]":"Draggable#restoreTextSelection~tree.rootElement.style[undefined]"},"shortpath":"file"},"description":"<p>Restore text-selection</p>","name":"restoreTextSelection","longname":"Draggable#restoreTextSelection","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000258","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"restoreTextSelection","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Set helper contents\n     * @param {string} text - Helper contents\n     */","meta":{"range":[7328,7406],"filename":"draggable.js","lineno":239,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002411","name":"setHelper","type":"FunctionExpression"},"vars":{"this.helperElement.innerHTML":"Draggable#helperElement.innerHTML"},"shortpath":"file"},"description":"<p>Set helper contents</p>","params":[{"type":{"names":["string"]},"description":"<p>Helper contents</p>","name":"text"}],"name":"setHelper","longname":"Draggable#setHelper","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000261","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setHelper","signature":"<span class=\"signature\">(text)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Set members of this module\n     * @param {Object} options - input options\n     */","meta":{"range":[1945,3128],"filename":"draggable.js","lineno":65,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001712","name":"setMembers","type":"FunctionExpression"},"vars":{"helperElement":"Draggable#setMembers~helperElement","style":"Draggable#setMembers~style","options":"Draggable#setMembers~options","this.useHelper":"Draggable#useHelper","this.helperPos":"Draggable#helperPos","this.rejectedTagNames":"Draggable#rejectedTagNames","this.rejectedClassNames":"Draggable#rejectedClassNames","this.helperElement":"Draggable#helperElement","this.userSelectPropertyKey":"Draggable#userSelectPropertyKey","this.userSelectPropertyValue":"Draggable#userSelectPropertyValue","this.currentNodeId":"Draggable#currentNodeId","this.autoOpenDelay":"Draggable#autoOpenDelay","this.isSortable":"Draggable#isSortable","this.hoverClassName":"Draggable#hoverClassName","this.lineClassName":"Draggable#lineClassName","this.lineBoundary":"Draggable#lineBoundary","this.hoveredElement":"Draggable#hoveredElement","this.movingLineType":"Draggable#movingLineType","this.timer":"Draggable#timer","style.position":"Draggable#setMembers~style.position","style.display":"Draggable#setMembers~style.display"},"shortpath":"file"},"description":"<p>Set members of this module</p>","params":[{"type":{"names":["Object"]},"description":"<p>input options</p>","name":"options"}],"name":"setMembers","longname":"Draggable#setMembers","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000193","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setMembers","signature":"<span class=\"signature\">(options)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]}]},{"comment":"/**\n * Set the tree selectable\n * @class Editable\n * @constructor\n * @param {Tree} tree - Tree\n * @param {Object} options - Options\n *  @param {string} options.editableClassName - Classname of editable element\n *  @param {string} options.dataKey - Key of node data to set value\n *  @param {string} options.inputClassName - Classname of input element\n */","meta":{"range":[427,3808],"filename":"editable.js","lineno":17,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002956","name":"Editable","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Set the tree selectable</p>","kind":"class","classdesc":"<p>Editable</p>","params":[{"type":{"names":["Tree"]},"description":"<p>Tree</p>","name":"tree"},{"type":{"names":["Object"]},"description":"<p>Options</p>","name":"options"},{"type":{"names":["string"]},"description":"<p>Classname of editable element</p>","name":"options.editableClassName"},{"type":{"names":["string"]},"description":"<p>Key of node data to set value</p>","name":"options.dataKey"},{"type":{"names":["string"]},"description":"<p>Classname of input element</p>","name":"options.inputClassName"}],"name":"Editable","longname":"Editable","scope":"global","___id":"T000002R000313","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Editable","signature":"<span class=\"signature\">(tree, options)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n     * Create input element\n     * @param {string} inputClassName - Classname of input element\n     * @returns {HTMLElement} Input element\n     */","meta":{"range":[2137,2383],"filename":"editable.js","lineno":70,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003152","name":"createInputElement","type":"FunctionExpression"},"vars":{"el":"Editable#createInputElement~el","el.className":"Editable#createInputElement~el.className"},"shortpath":"file"},"description":"<p>Create input element</p>","params":[{"type":{"names":["string"]},"description":"<p>Classname of input element</p>","name":"inputClassName"}],"returns":[{"type":{"names":["HTMLElement"]},"description":"<p>Input element</p>"}],"name":"createInputElement","longname":"Editable#createInputElement","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000328","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"createInputElement","signature":"<span class=\"signature\">(inputClassName)</span><span class=\"type-signature\"> &rarr; {HTMLElement}</span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Disable this module\n     */","meta":{"range":[1719,1975],"filename":"editable.js","lineno":58,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003112","name":"destroy","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Disable this module</p>","name":"destroy","longname":"Editable#destroy","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000327","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"destroy","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Detach input element from document\n     */","meta":{"range":[1458,1669],"filename":"editable.js","lineno":46,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003089","name":"detachInputFromDocument","type":"FunctionExpression"},"vars":{"inputEl":"Editable#detachInputFromDocument~inputEl","parentNode":"Editable#detachInputFromDocument~parentNode"},"shortpath":"file"},"description":"<p>Detach input element from document</p>","name":"detachInputFromDocument","longname":"Editable#detachInputFromDocument","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000324","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"detachInputFromDocument","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Event handler: blur - input element\n     */","meta":{"range":[3334,3384],"filename":"editable.js","lineno":113,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003281","name":"onBlur","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Event handler: blur - input element</p>","name":"onBlur","longname":"Editable#onBlur","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000341","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onBlur","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Custom event handler \"doubleClick\"\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[2495,3038],"filename":"editable.js","lineno":84,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003182","name":"onDoubleClick","type":"FunctionExpression"},"vars":{"tree":"Editable#onDoubleClick~tree","target":"Editable#onDoubleClick~target","inputElement":"Editable#onDoubleClick~inputElement","nodeId":"Editable#onDoubleClick~nodeId","inputElement.value":"Editable#onDoubleClick~inputElement.value","target.style.display":"Editable#onDoubleClick~target.style.display"},"shortpath":"file"},"description":"<p>Custom event handler &quot;doubleClick&quot;</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onDoubleClick","longname":"Editable#onDoubleClick","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000331","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onDoubleClick","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Event handler: keyup - input element\n     * @param {Event} event - Key event\n     */","meta":{"range":[3145,3268],"filename":"editable.js","lineno":104,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003265","name":"onKeyup","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Event handler: keyup - input element</p>","params":[{"type":{"names":["Event"]},"description":"<p>Key event</p>","name":"event"}],"name":"onKeyup","longname":"Editable#onKeyup","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000340","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onKeyup","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Set data of input element to node and detach input element from doc.\n     */","meta":{"range":[3483,3805],"filename":"editable.js","lineno":120,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003289","name":"setData","type":"FunctionExpression"},"vars":{"tree":"Editable#setData~tree","nodeId":"Editable#setData~nodeId","data":"Editable#setData~data","data[undefined]":"Editable#setData~data.undefined]"},"shortpath":"file"},"description":"<p>Set data of input element to node and detach input element from doc.</p>","name":"setData","longname":"Editable#setData","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000342","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setData","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]}]},{"comment":"/**\n * Set the tree selectable\n * @class Selectable\n * @constructor\n * @param {Tree} tree - Tree\n * @param {Object} options\n *  @param {string} options.selectedClassName - Classname for selected node.\n */","meta":{"range":[400,5197],"filename":"selectable.js","lineno":21,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003364","name":"Selectable","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Set the tree selectable</p>","kind":"class","classdesc":"<p>Selectable</p>","params":[{"type":{"names":["Tree"]},"description":"<p>Tree</p>","name":"tree"},{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["string"]},"description":"<p>Classname for selected node.</p>","name":"options.selectedClassName"}],"name":"Selectable","longname":"Selectable","scope":"global","___id":"T000002R000352","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Selectable","signature":"<span class=\"signature\">(tree, options)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n         * @static\n         * @memberOf Selectable\n         * @returns {Array.<string>} API list of Editable\n         */","meta":{"range":[666,737],"filename":"editable.js","lineno":24,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100002967","name":"getAPIList","type":"FunctionExpression"},"shortpath":"file"},"scope":"static","memberof":"Selectable","returns":[{"type":{"names":["Array.<string>"]},"description":"<p>API list of Editable</p>"}],"name":"getAPIList","longname":"Selectable.getAPIList","kind":"function","___id":"T000002R000315","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getAPIList","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>."]},{"comment":"/**\n         * @static\n         * @memberOf Selectable\n         * @returns {Array.<string>} API list of Selectable\n         */","meta":{"range":[645,716],"filename":"selectable.js","lineno":28,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003375","name":"getAPIList","type":"FunctionExpression"},"shortpath":"file"},"scope":"static","memberof":"Selectable","returns":[{"type":{"names":["Array.<string>"]},"description":"<p>API list of Selectable</p>"}],"name":"getAPIList","longname":"Selectable.getAPIList","kind":"function","___id":"T000002R000354","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getAPIList","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>."]},{"comment":"/**\n     * Disable this module\n     */","meta":{"range":[1456,1751],"filename":"selectable.js","lineno":62,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003479","name":"destroy","type":"FunctionExpression"},"vars":{"tree":"Selectable#destroy~tree","nodeElement":"Selectable#destroy~nodeElement","":null},"shortpath":"file"},"description":"<p>Disable this module</p>","name":"destroy","longname":"Selectable#destroy","kind":"function","memberof":"Selectable","scope":"instance","___id":"T000002R000366","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"destroy","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>#"]},{"comment":"/**\n     * Get previous selected node element\n     * @returns {HTMLElement} Node element\n     */","meta":{"range":[4642,4737],"filename":"selectable.js","lineno":157,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003646","name":"getPrevElement","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get previous selected node element</p>","returns":[{"type":{"names":["HTMLElement"]},"description":"<p>Node element</p>"}],"name":"getPrevElement","longname":"Selectable#getPrevElement","kind":"function","memberof":"Selectable","scope":"instance","___id":"T000002R000386","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getPrevElement","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {HTMLElement}</span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>#"]},{"comment":"/**\n     * Custom event handler - \"afterDraw\"\n     */","meta":{"range":[5012,5194],"filename":"selectable.js","lineno":174,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003664","name":"onAfterDraw","type":"FunctionExpression"},"vars":{"nodeElement":"Selectable#onAfterDraw~nodeElement"},"shortpath":"file"},"description":"<p>Custom event handler - &quot;afterDraw&quot;</p>","name":"onAfterDraw","longname":"Selectable#onAfterDraw","kind":"function","memberof":"Selectable","scope":"instance","___id":"T000002R000388","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onAfterDraw","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>#"]},{"comment":"/**\n     * Custom event handler \"singleClick\"\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[1863,2044],"filename":"selectable.js","lineno":77,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003525","name":"onSingleClick","type":"FunctionExpression"},"vars":{"target":"Selectable#onSingleClick~target","nodeId":"Selectable#onSingleClick~nodeId"},"shortpath":"file"},"description":"<p>Custom event handler &quot;singleClick&quot;</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onSingleClick","longname":"Selectable#onSingleClick","kind":"function","memberof":"Selectable","scope":"instance","___id":"T000002R000369","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onSingleClick","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>#"]}]},{"comment":"/**\n * Create tree model and inject data to model\n * @class Tree\n * @constructor\n * @mixes tui.util.CustomEvents\n * @param {Object} data A data to be used on tree\n * @param {Object} options The options\n *     @param {HTMLElement} [options.rootElement] Root element (It should be 'UL' element)\n *     @param {string} [options.nodeIdPrefix] A default prefix of a node\n *     @param {Object} [options.nodeDefaultState] A default state of a node\n *     @param {Object} [options.template] A markup set to make element\n *         @param {string} [options.template.internalNode] HTML template\n *         @param {string} [options.template.leafNode] HTML template\n *     @param {Object} [options.stateLabels] Toggle button state label\n *         @param {string} [options.stateLabels.opened] State-OPENED label (Text or HTML)\n *         @param {string} [options.stateLabels.closed] State-CLOSED label (Text or HTML)\n *     @param {Object} [options.classNames] Class names for tree\n *         @param {string} [options.classNames.nodeClass] A class name for node\n *         @param {string} [options.classNames.leafClass] A class name for leaf node\n *         @param {string} [options.classNames.openedClass] A class name for opened node\n *         @param {string} [options.classNames.closedClass] A class name for closed node\n *         @param {string} [options.classNames.textClass] A class name that for textElement in node\n *         @param {string} [options.classNames.subtreeClass] A class name for subtree in internal node\n *         @param {string} [options.classNames.toggleBtnClass] A class name for toggle button in internal node\n *     @param {Function} [options.renderTemplate] Function for rendering template\n * @example\n * //Default options:\n * // {\n * //     nodeIdPrefix: 'tui-tree-node-'\n * //     nodeDefaultState: 'closed',\n * //     stateLabels: {\n * //         opened: '-',\n * //         closed: '+'\n * //     },\n * //     classNames: {\n * //         nodeClass: 'tui-tree-node',\n * //         leafClass: 'tui-tree-leaf',\n * //         openedClass: 'tui-tree-opened',\n * //         closedClass: 'tui-tree-closed',\n * //         subtreeClass: 'tui-tree-subtree',\n * //         toggleBtnClass: 'tui-tree-toggleBtn',\n * //         textClass: 'tui-tree-text',\n * //     },\n * //     template: {\n * //         internalNode:\n * //             '<button type=\"button\" class=\"{{toggleBtnClass}}\">{{stateLabel}}</button>' +\n * //             '<span class=\"{{textClass}}\">{{text}}</span>' +\n * //             '<ul class=\"{{subtreeClass}}\">{{children}}</ul>'\n * //         leafNode:\n * //             '<span class=\"{{textClass}}\">{{text}}</span>' +\n * //     }\n * // }\n * //\n *\n * var data = [\n *     {text: 'rootA', children: [\n *         {text: 'root-1A'},\n *         {text: 'root-1B'},\n *         {text: 'root-1C'},\n *         {text: 'root-1D'},\n *         {text: 'root-2A', children: [\n *             {text:'sub_1A', children:[\n *                 {text:'sub_sub_1A'}\n *             ]},\n *             {text:'sub_2A'}\n *         ]},\n *         {text: 'root-2B'},\n *         {text: 'root-2C'},\n *         {text: 'root-2D'},\n *         {text: 'root-3A', children: [\n *             {text:'sub3_a'},\n *             {text:'sub3_b'}\n *         ]},\n *         {text: 'root-3B'},\n *         {text: 'root-3C'},\n *         {text: 'root-3D'}\n *     ]},\n *     {text: 'rootB', children: [\n *         {text:'B_sub1'},\n *         {text:'B_sub2'},\n *         {text:'b'}\n *     ]}\n * ];\n *\n * var tree1 = new tui.component.Tree(data, {\n *     rootElement: 'treeRoot', // or document.getElementById('treeRoot')\n *     nodeDefaultState: 'opened',\n *\n *     // ========= Option: Override template renderer ===========\n *\n *     template: { // template for Mustache engine\n *         internalNode:\n *             '<button type=\"button\" class=\"{{toggleBtnClass}}\">{{{stateLabel}}}</button>' +\n *             '<span class=\"{{textClass}}\">{{{text}}}</span>' +\n *             '<ul class=\"{{subtreeClass}}\">{{{children}}}</ul>'\n *         leafNode:\n *             '<span class=\"{{textClass}}\">{{{text}}}</span>' +\n *     },\n *     renderTemplate: function(source, props) {\n *         // Mustache template engine\n *         return Mustache.render(template, props);\n *     }\n * });\n **/","meta":{"range":[5251,34876],"filename":"tree.js","lineno":136,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003787","name":"Tree","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Create tree model and inject data to model</p>","kind":"class","classdesc":"<p>Tree</p>","mixes":["tui.util.CustomEvents"],"params":[{"type":{"names":["Object"]},"description":"<p>A data to be used on tree</p>","name":"data"},{"type":{"names":["Object"]},"description":"<p>The options</p>","name":"options"},{"type":{"names":["HTMLElement"]},"optional":true,"description":"<p>Root element (It should be 'UL' element)</p>","name":"options.rootElement"},{"type":{"names":["string"]},"optional":true,"description":"<p>A default prefix of a node</p>","name":"options.nodeIdPrefix"},{"type":{"names":["Object"]},"optional":true,"description":"<p>A default state of a node</p>","name":"options.nodeDefaultState"},{"type":{"names":["Object"]},"optional":true,"description":"<p>A markup set to make element</p>","name":"options.template"},{"type":{"names":["string"]},"optional":true,"description":"<p>HTML template</p>","name":"options.template.internalNode"},{"type":{"names":["string"]},"optional":true,"description":"<p>HTML template</p>","name":"options.template.leafNode"},{"type":{"names":["Object"]},"optional":true,"description":"<p>Toggle button state label</p>","name":"options.stateLabels"},{"type":{"names":["string"]},"optional":true,"description":"<p>State-OPENED label (Text or HTML)</p>","name":"options.stateLabels.opened"},{"type":{"names":["string"]},"optional":true,"description":"<p>State-CLOSED label (Text or HTML)</p>","name":"options.stateLabels.closed"},{"type":{"names":["Object"]},"optional":true,"description":"<p>Class names for tree</p>","name":"options.classNames"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for node</p>","name":"options.classNames.nodeClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for leaf node</p>","name":"options.classNames.leafClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for opened node</p>","name":"options.classNames.openedClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for closed node</p>","name":"options.classNames.closedClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name that for textElement in node</p>","name":"options.classNames.textClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for subtree in internal node</p>","name":"options.classNames.subtreeClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for toggle button in internal node</p>","name":"options.classNames.toggleBtnClass"},{"type":{"names":["function"]},"optional":true,"description":"<p>Function for rendering template</p>","name":"options.renderTemplate"}],"examples":[{"caption":"","code":"//Default options:\n// {\n//     nodeIdPrefix: 'tui-tree-node-'\n//     nodeDefaultState: 'closed',\n//     stateLabels: {\n//         opened: '-',\n//         closed: '+'\n//     },\n//     classNames: {\n//         nodeClass: 'tui-tree-node',\n//         leafClass: 'tui-tree-leaf',\n//         openedClass: 'tui-tree-opened',\n//         closedClass: 'tui-tree-closed',\n//         subtreeClass: 'tui-tree-subtree',\n//         toggleBtnClass: 'tui-tree-toggleBtn',\n//         textClass: 'tui-tree-text',\n//     },\n//     template: {\n//         internalNode:\n//             '<button type=\"button\" class=\"{{toggleBtnClass}}\">{{stateLabel}}</button>' +\n//             '<span class=\"{{textClass}}\">{{text}}</span>' +\n//             '<ul class=\"{{subtreeClass}}\">{{children}}</ul>'\n//         leafNode:\n//             '<span class=\"{{textClass}}\">{{text}}</span>' +\n//     }\n// }\n//\n\nvar data = [\n    {text: 'rootA', children: [\n        {text: 'root-1A'},\n        {text: 'root-1B'},\n        {text: 'root-1C'},\n        {text: 'root-1D'},\n        {text: 'root-2A', children: [\n            {text:'sub_1A', children:[\n                {text:'sub_sub_1A'}\n            ]},\n            {text:'sub_2A'}\n        ]},\n        {text: 'root-2B'},\n        {text: 'root-2C'},\n        {text: 'root-2D'},\n        {text: 'root-3A', children: [\n            {text:'sub3_a'},\n            {text:'sub3_b'}\n        ]},\n        {text: 'root-3B'},\n        {text: 'root-3C'},\n        {text: 'root-3D'}\n    ]},\n    {text: 'rootB', children: [\n        {text:'B_sub1'},\n        {text:'B_sub2'},\n        {text:'b'}\n    ]}\n];\n\nvar tree1 = new tui.component.Tree(data, {\n    rootElement: 'treeRoot', // or document.getElementById('treeRoot')\n    nodeDefaultState: 'opened',\n\n    // ========= Option: Override template renderer ===========\n\n    template: { // template for Mustache engine\n        internalNode:\n            '<button type=\"button\" class=\"{{toggleBtnClass}}\">{{{stateLabel}}}</button>' +\n            '<span class=\"{{textClass}}\">{{{text}}}</span>' +\n            '<ul class=\"{{subtreeClass}}\">{{{children}}}</ul>'\n        leafNode:\n            '<span class=\"{{textClass}}\">{{{text}}}</span>' +\n    },\n    renderTemplate: function(source, props) {\n        // Mustache template engine\n        return Mustache.render(template, props);\n    }\n});"}],"name":"Tree","longname":"Tree","scope":"global","___id":"T000002R000414","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Tree","signature":"<span class=\"signature\">(data, options)</span><span class=\"type-signature\"></span>","ancestors":[],"members":[{"comment":"/**\n         * To prevent click event if mouse moved before mouseup.\n         * @type {number}\n         */","meta":{"range":[6639,6668],"filename":"tree.js","lineno":186,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003873","name":"this._mouseMovingFlag","type":"Literal","value":false,"paramnames":[]},"shortpath":"file"},"description":"<p>To prevent click event if mouse moved before mouseup.</p>","type":{"names":["number"]},"name":"_mouseMovingFlag","longname":"Tree#_mouseMovingFlag","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000424","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_mouseMovingFlag","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :number</span>"},{"comment":"/**\n         * Default class names\n         * @type {object.<string, string>}\n         */","meta":{"range":[5542,5616],"filename":"tree.js","lineno":144,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003808","name":"this.classNames","type":"CallExpression","value":"","paramnames":[]},"shortpath":"file"},"description":"<p>Default class names</p>","type":{"names":["object.<string, string>"]},"name":"classNames","longname":"Tree#classNames","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000417","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"classNames","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :object.&lt;string, string></span>"},{"comment":"/**\n         * Click timer to prevent click-duplication with double click\n         * @type {number}\n         */","meta":{"range":[6491,6513],"filename":"tree.js","lineno":180,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003867","name":"this.clickTimer","type":"Literal","value":null,"paramnames":[]},"shortpath":"file"},"description":"<p>Click timer to prevent click-duplication with double click</p>","type":{"names":["number"]},"name":"clickTimer","longname":"Tree#clickTimer","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000423","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"clickTimer","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :number</span>"},{"comment":"/**\n         * Enabled features\n         * @type {Object.<string, object>}\n         */","meta":{"range":[6335,6360],"filename":"tree.js","lineno":174,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003861","name":"this.enabledFeatures","type":"ObjectExpression","value":"{}","paramnames":[]},"shortpath":"file"},"description":"<p>Enabled features</p>","type":{"names":["Object.<string, object>"]},"name":"enabledFeatures","longname":"Tree#enabledFeatures","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000422","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"enabledFeatures","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :Object.&lt;string, object></span>"},{"comment":"/**\n         * True when a node is moving\n         * @api\n         * @type {boolean}\n         * @example\n         * tree.on({\n         *     beforeDraw: function(nodeId) {\n         *         if (tree.isMovingNode) {\n         *             return;\n         *         }\n         *         //..\n         *     },\n         *     //....\n         * });\n         * tree.move('tui-tree-node-1', 'tui-tree-node-2');\n         */","meta":{"range":[7341,7366],"filename":"tree.js","lineno":212,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003891","name":"this.isMovingNode","type":"Literal","value":false,"paramnames":[]},"shortpath":"file"},"description":"<p>True when a node is moving</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"type":{"names":["boolean"]},"examples":[{"caption":"","code":"tree.on({\n    beforeDraw: function(nodeId) {\n        if (tree.isMovingNode) {\n            return;\n        }\n        //..\n    },\n    //....\n});\ntree.move('tui-tree-node-1', 'tui-tree-node-2');"}],"name":"isMovingNode","longname":"Tree#isMovingNode","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000426","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isMovingNode","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :boolean</span>"},{"comment":"/**\n         * Make tree model\n         * @type {TreeModel}\n         */","meta":{"range":[6188,6229],"filename":"tree.js","lineno":168,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003852","name":"this.model","type":"NewExpression","value":"","paramnames":[]},"shortpath":"file"},"description":"<p>Make tree model</p>","type":{"names":["TreeModel"]},"name":"model","longname":"Tree#model","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000421","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"model","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :<a target=\"body\" href=\"TreeModel.html\">TreeModel</a></span>"},{"comment":"/**\n         * Root element\n         * @type {HTMLElement}\n         */","meta":{"range":[5897,5935],"filename":"tree.js","lineno":156,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003836","name":"this.rootElement","type":"MemberExpression","value":"options.rootElement","paramnames":[]},"shortpath":"file"},"description":"<p>Root element</p>","type":{"names":["HTMLElement"]},"name":"rootElement","longname":"Tree#rootElement","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000419","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"rootElement","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :HTMLElement</span>"},{"comment":"/**\n         * Toggle button state label\n         * @type {{opened: string, closed: string}}\n         */","meta":{"range":[6059,6097],"filename":"tree.js","lineno":162,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003844","name":"this.stateLabels","type":"MemberExpression","value":"options.stateLabels","paramnames":[]},"shortpath":"file"},"description":"<p>Toggle button state label</p>","type":{"names":["Object"]},"name":"stateLabels","longname":"Tree#stateLabels","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000420","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stateLabels","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :Object</span>"},{"comment":"/**\n         * Default template\n         * @type {{internalNode: string, leafNode: string}}\n         */","meta":{"range":[5739,5807],"filename":"tree.js","lineno":150,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100003822","name":"this.template","type":"CallExpression","value":"","paramnames":[]},"shortpath":"file"},"description":"<p>Default template</p>","type":{"names":["Object"]},"name":"template","longname":"Tree#template","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000418","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"template","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :Object</span>"}],"methods":[{"comment":"/**\n     * Add node(s).\n     * - If the parentId is falsy, the node will be appended to rootNode.\n     * - If 'isSilent' is not true, it redraws the tree\n     * @api\n     * @param {Array|object} data - Raw-data\n     * @param {*} [parentId] - Parent id\n     * @param {boolean} [isSilent] - If true, it doesn't redraw children\n     * @returns {Array.<string>} Added node ids\n     * @example\n     * // add node with redrawing\n     * var firstAddedIds = tree.add({text:'FE development team1'}, parentId);\n     * console.log(firstAddedIds); // [\"tui-tree-node-10\"]\n     *\n     * // add node without redrawing\n     * var secondAddedIds = tree.add([\n     *    {text: 'FE development team2'},\n     *    {text: 'FE development team3'}\n     * ], parentId, true);\n     * console.log(secondAddedIds); // [\"tui-tree-node-11\", \"tui-tree-node-12\"]\n     */","meta":{"range":[26848,26952],"filename":"tree.js","lineno":896,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005349","name":"add","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Add node(s).</p>\n<ul>\n<li>If the parentId is falsy, the node will be appended to rootNode.</li>\n<li>If 'isSilent' is not true, it redraws the tree</li>\n</ul>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["Array","object"]},"description":"<p>Raw-data</p>","name":"data"},{"type":{"names":["*"]},"optional":true,"description":"<p>Parent id</p>","name":"parentId"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't redraw children</p>","name":"isSilent"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Added node ids</p>"}],"examples":[{"caption":"","code":"// add node with redrawing\nvar firstAddedIds = tree.add({text:'FE development team1'}, parentId);\nconsole.log(firstAddedIds); // [\"tui-tree-node-10\"]\n\n// add node without redrawing\nvar secondAddedIds = tree.add([\n   {text: 'FE development team2'},\n   {text: 'FE development team3'}\n], parentId, true);\nconsole.log(secondAddedIds); // [\"tui-tree-node-11\", \"tui-tree-node-12\"]"}],"name":"add","longname":"Tree#add","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000564","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"add","signature":"<span class=\"signature\">(data, parentId<span class=\"signature-attributes\">opt</span>, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Check node\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.check(nodeId);\n     */","meta":{"range":[10268,10399],"filename":"checkbox.js","lineno":370,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100000963","name":"check","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Check node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.check(nodeId);"}],"name":"check","longname":"Tree#check","kind":"function","scope":"instance","___id":"T000002R000111","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"check","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Close node\n     * @api\n     * @param {string} nodeId - Node id\n     */","meta":{"range":[23191,23449],"filename":"tree.js","lineno":774,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005193","name":"close","type":"FunctionExpression"},"vars":{"node":"Tree#close~node","state":"Tree#close~state"},"shortpath":"file"},"description":"<p>Close node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"name":"close","longname":"Tree#close","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000552","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"close","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Whether a node is a ancestor of another node.\n     * @api\n     * @param {string} containerNodeId - Id of a node that may contain the other node\n     * @param {string} containedNodeId - Id of a node that may be contained by the other node\n     * @returns {boolean} Whether a node contains another node\n     */","meta":{"range":[31973,32103],"filename":"tree.js","lineno":1066,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005608","name":"contains","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Whether a node is a ancestor of another node.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Id of a node that may contain the other node</p>","name":"containerNodeId"},{"type":{"names":["string"]},"description":"<p>Id of a node that may be contained by the other node</p>","name":"containedNodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether a node contains another node</p>"}],"name":"contains","longname":"Tree#contains","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000581","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"contains","signature":"<span class=\"signature\">(containerNodeId, containedNodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Disable facility of tree\n     * @api\n     * @param {string} featureName - 'Selectable', 'Draggable', 'Editable'\n     * @returns {Tree} this\n     * @example\n     * tree\n     *  .disableFeature('Selectable')\n     *  .disableFeature('Draggable')\n     *  .disableFeature('Editable')\n     *  .disableFeature('Checkbox')\n     *  .disableFeature('ContextMenu');\n     */","meta":{"range":[34286,34529],"filename":"tree.js","lineno":1142,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005655","name":"disableFeature","type":"FunctionExpression"},"vars":{"feature":"Tree#disableFeature~feature"},"shortpath":"file"},"description":"<p>Disable facility of tree</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>'Selectable', 'Draggable', 'Editable'</p>","name":"featureName"}],"returns":[{"type":{"names":["Tree"]},"description":"<p>this</p>"}],"examples":[{"caption":"","code":"tree\n .disableFeature('Selectable')\n .disableFeature('Draggable')\n .disableFeature('Editable')\n .disableFeature('Checkbox')\n .disableFeature('ContextMenu');"}],"name":"disableFeature","longname":"Tree#disableFeature","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000585","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"disableFeature","signature":"<span class=\"signature\">(featureName)</span><span class=\"type-signature\"> &rarr; {<a target=\"body\" href=\"Tree.html\">Tree</a>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Traverse this tree iterating over all descendants of a node.\n     * @api\n     * @param {Function} iteratee - Iteratee function\n     * @param {string} parentId - Parent node id\n     * @param {object} [context] - Context of iteratee\n     * @example\n     * tree.each(function(node, nodeId) {\n     *     console.log(node.getId() === nodeId); // true\n     * }, parentId);\n     *\n     */","meta":{"range":[25891,25996],"filename":"tree.js","lineno":871,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005333","name":"each","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Traverse this tree iterating over all descendants of a node.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["function"]},"description":"<p>Iteratee function</p>","name":"iteratee"},{"type":{"names":["string"]},"description":"<p>Parent node id</p>","name":"parentId"},{"type":{"names":["object"]},"optional":true,"description":"<p>Context of iteratee</p>","name":"context"}],"examples":[{"caption":"","code":"tree.each(function(node, nodeId) {\n    console.log(node.getId() === nodeId); // true\n}, parentId);"}],"name":"each","longname":"Tree#each","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000563","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"each","signature":"<span class=\"signature\">(iteratee, parentId, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Traverse this tree iterating over all nodes.\n     * @api\n     * @param {Function} iteratee - Iteratee function\n     * @param {object} [context] - Context of iteratee\n     * @example\n     * tree.eachAll(function(node, nodeId) {\n     *     console.log(node.getId() === nodeId); // true\n     * });\n     */","meta":{"range":[25396,25487],"filename":"tree.js","lineno":855,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005319","name":"eachAll","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Traverse this tree iterating over all nodes.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["function"]},"description":"<p>Iteratee function</p>","name":"iteratee"},{"type":{"names":["object"]},"optional":true,"description":"<p>Context of iteratee</p>","name":"context"}],"examples":[{"caption":"","code":"tree.eachAll(function(node, nodeId) {\n    console.log(node.getId() === nodeId); // true\n});"}],"name":"eachAll","longname":"Tree#eachAll","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000562","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"eachAll","signature":"<span class=\"signature\">(iteratee, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Enable facility of tree\n     * @api\n     * @param {string} featureName - 'Selectable', 'Draggable', 'Editable', 'ContextMenu'\n     * @param {object} [options] - Feature options\n     * @returns {Tree} this\n     * @example\n     * tree\n     *  .enableFeature('Selectable', {\n     *      selectedClassName: 'tui-tree-selected'\n     *  })\n     *  .enableFeature('Editable', {\n     *      enableClassName: tree.classNames.textClass,\n     *      dataKey: 'text',\n     *      inputClassName: 'myInput'\n     *  })\n     *  .enableFeature('Draggable', {\n     *      useHelper: true,\n     *      helperPos: {x: 5, y: 2},\n     *      rejectedTagNames: ['UL', 'INPUT', 'BUTTON'],\n     *      rejectedClassNames: ['notDraggable', 'notDraggable-2'],\n     *      autoOpenDelay: 1500,\n     *      isSortable: true,\n     *      hoverClassName: 'tui-tree-hover'\n     *      lineClassName: 'tui-tree-line',\n     *      lineBoundary: {\n     *      \ttop: 10,\n     *       \tbottom: 10\n     *      }\n     *  })\n     *  .enableFeature('Checkbox', {\n     *      checkboxClassName: 'tui-tree-checkbox'\n     *  })\n     *  .enableFeature('ContextMenu, {\n     *  \tmenuData: [\n     *   \t\t{title: 'menu1', command: 'copy'},\n     *     \t\t{title: 'menu2', command: 'paste'},\n     *       \t{separator: true},\n     *        \t{\n     *         \t\ttitle: 'menu3',\n     *           \tmenu: [\n     *            \t\t{title: 'submenu1'},\n     *              \t{title: 'submenu2'}\n     *              ]\n     *          }\n     *      }\n     *  })\n     */","meta":{"range":[33629,33901],"filename":"tree.js","lineno":1118,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005622","name":"enableFeature","type":"FunctionExpression"},"vars":{"Feature":"Tree#enableFeature~Feature","this.enabledFeatures[undefined]":"Tree#enabledFeatures[undefined]"},"shortpath":"file"},"description":"<p>Enable facility of tree</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>'Selectable', 'Draggable', 'Editable', 'ContextMenu'</p>","name":"featureName"},{"type":{"names":["object"]},"optional":true,"description":"<p>Feature options</p>","name":"options"}],"returns":[{"type":{"names":["Tree"]},"description":"<p>this</p>"}],"examples":[{"caption":"","code":"tree\n .enableFeature('Selectable', {\n     selectedClassName: 'tui-tree-selected'\n })\n .enableFeature('Editable', {\n     enableClassName: tree.classNames.textClass,\n     dataKey: 'text',\n     inputClassName: 'myInput'\n })\n .enableFeature('Draggable', {\n     useHelper: true,\n     helperPos: {x: 5, y: 2},\n     rejectedTagNames: ['UL', 'INPUT', 'BUTTON'],\n     rejectedClassNames: ['notDraggable', 'notDraggable-2'],\n     autoOpenDelay: 1500,\n     isSortable: true,\n     hoverClassName: 'tui-tree-hover'\n     lineClassName: 'tui-tree-line',\n     lineBoundary: {\n     \ttop: 10,\n      \tbottom: 10\n     }\n })\n .enableFeature('Checkbox', {\n     checkboxClassName: 'tui-tree-checkbox'\n })\n .enableFeature('ContextMenu, {\n \tmenuData: [\n  \t\t{title: 'menu1', command: 'copy'},\n    \t\t{title: 'menu2', command: 'paste'},\n      \t{separator: true},\n       \t{\n        \t\ttitle: 'menu3',\n          \tmenu: [\n           \t\t{title: 'submenu1'},\n             \t{title: 'submenu2'}\n             ]\n         }\n     }\n })"}],"name":"enableFeature","longname":"Tree#enableFeature","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000582","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"enableFeature","signature":"<span class=\"signature\">(featureName, options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {<a target=\"body\" href=\"Tree.html\">Tree</a>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get bottom checked list\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} [parentId] - Node id (default: rootNode id)\n     * @returns {Array.<string>} Checked node ids\n     * @example\n     * //\n     * // node1(v)\n     * //   node2(v)\n     * //   node3(v)\n     * // node4\n     * //   node5(v)\n     * // node6\n     * //   node7(v)\n     * //     node8(v)\n     * //   node9\n     *\n     * var allBottomCheckedList = tree.getBottomCheckedList(); // ['node2', 'node3', 'node5', 'node8']\n     * var descendantsBottomCheckedList = tree.getBottomCheekedList('node6'); // ['node8']\n     */","meta":{"range":[15180,15497],"filename":"checkbox.js","lineno":548,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001181","name":"getBottomCheckedList","type":"FunctionExpression"},"vars":{"tree":"Tree#getBottomCheckedList~tree","checkedList":"Tree#getBottomCheckedList~checkedList","parentId":"Tree#getBottomCheckedList~parentId","":null},"shortpath":"file"},"description":"<p>Get bottom checked list</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Node id (default: rootNode id)</p>","name":"parentId"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Checked node ids</p>"}],"examples":[{"caption":"","code":"//\n// node1(v)\n//   node2(v)\n//   node3(v)\n// node4\n//   node5(v)\n// node6\n//   node7(v)\n//     node8(v)\n//   node9\n\nvar allBottomCheckedList = tree.getBottomCheckedList(); // ['node2', 'node3', 'node5', 'node8']\nvar descendantsBottomCheckedList = tree.getBottomCheekedList('node6'); // ['node8']"}],"name":"getBottomCheckedList","longname":"Tree#getBottomCheckedList","kind":"function","scope":"instance","___id":"T000002R000129","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getBottomCheckedList","signature":"<span class=\"signature\">(parentId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get checked list\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} [parentId] - Node id (default: rootNode id)\n     * @returns {Array.<string>} Checked node ids\n     * @example\n     * //\n     * // node1(v)\n     * //   node2(v)\n     * //   node3(v)\n     * // node4\n     * //   node5(v)\n     * // node6\n     * //   node7(v)\n     * //     node8(v)\n     * //   node9\n     *\n     * var allCheckedList = tree.getCheckedList(); // ['node1', 'node2', 'node3' ,....]\n     * var descendantsCheckedList = tree.getCheekedList('node6'); // ['node7', 'node8']\n     */","meta":{"range":[13043,13354],"filename":"checkbox.js","lineno":474,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001062","name":"getCheckedList","type":"FunctionExpression"},"vars":{"tree":"Tree#getCheckedList~tree","checkedList":"Tree#getCheckedList~checkedList","":null},"shortpath":"file"},"description":"<p>Get checked list</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Node id (default: rootNode id)</p>","name":"parentId"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Checked node ids</p>"}],"examples":[{"caption":"","code":"//\n// node1(v)\n//   node2(v)\n//   node3(v)\n// node4\n//   node5(v)\n// node6\n//   node7(v)\n//     node8(v)\n//   node9\n\nvar allCheckedList = tree.getCheckedList(); // ['node1', 'node2', 'node3' ,....]\nvar descendantsCheckedList = tree.getCheekedList('node6'); // ['node7', 'node8']"}],"name":"getCheckedList","longname":"Tree#getCheckedList","kind":"function","scope":"instance","___id":"T000002R000117","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getCheckedList","signature":"<span class=\"signature\">(parentId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Return child ids\n     * @api\n     * @param {string} nodeId - Node id\n     * @returns {Array.<string>|undefined} Child ids\n     */","meta":{"range":[19840,19924],"filename":"tree.js","lineno":646,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100004994","name":"getChildIds","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return child ids</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["Array.<string>","undefined"]},"description":"<p>Child ids</p>"}],"name":"getChildIds","longname":"Tree#getChildIds","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000536","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getChildIds","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>|undefined}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Return the depth of node\n     * @api\n     * @param {string} nodeId - Node id\n     * @returns {number|undefined} Depth\n     */","meta":{"range":[19251,19329],"filename":"tree.js","lineno":618,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100004960","name":"getDepth","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return the depth of node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["number","undefined"]},"description":"<p>Depth</p>"}],"name":"getDepth","longname":"Tree#getDepth","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000533","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getDepth","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {number|undefined}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Return the last depth of tree\n     * @api\n     * @returns {number} Last depth\n     */","meta":{"range":[19437,19511],"filename":"tree.js","lineno":627,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100004972","name":"getLastDepth","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return the last depth of tree</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["number"]},"description":"<p>Last depth</p>"}],"name":"getLastDepth","longname":"Tree#getLastDepth","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000534","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getLastDepth","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get node data\n     * @api\n     * @param {string} nodeId - Node id\n     * @returns {object|undefined} Node data\n     */","meta":{"range":[21206,21290],"filename":"tree.js","lineno":703,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005083","name":"getNodeData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get node data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["object","undefined"]},"description":"<p>Node data</p>"}],"name":"getNodeData","longname":"Tree#getNodeData","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000544","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeData","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {object|undefined}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get node id from element\n     * @api\n     * @param {HTMLElement} element - Element\n     * @returns {string} Node id\n     * @example\n     * tree.getNodeIdFromElement(elementInNode); // 'tui-tree-node-3'\n     */","meta":{"range":[20553,20811],"filename":"tree.js","lineno":676,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005035","name":"getNodeIdFromElement","type":"FunctionExpression"},"vars":{"idPrefix":"Tree#getNodeIdFromElement~idPrefix","element":"Tree#getNodeIdFromElement~element"},"shortpath":"file"},"description":"<p>Get node id from element</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["HTMLElement"]},"description":"<p>Element</p>","name":"element"}],"returns":[{"type":{"names":["string"]},"description":"<p>Node id</p>"}],"examples":[{"caption":"","code":"tree.getNodeIdFromElement(elementInNode); // 'tui-tree-node-3'"}],"name":"getNodeIdFromElement","longname":"Tree#getNodeIdFromElement","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000540","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeIdFromElement","signature":"<span class=\"signature\">(element)</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get prefix of node id\n     * @api\n     * @returns {string} Prefix of node id\n     * @example\n     * tree.getNodeIdPrefix(); // 'tui-tree-node-'\n     */","meta":{"range":[20985,21065],"filename":"tree.js","lineno":693,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005073","name":"getNodeIdPrefix","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get prefix of node id</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>Prefix of node id</p>"}],"examples":[{"caption":"","code":"tree.getNodeIdPrefix(); // 'tui-tree-node-'"}],"name":"getNodeIdPrefix","longname":"Tree#getNodeIdPrefix","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000543","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeIdPrefix","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get index number of selected node\n     * @api\n     * @param {string} nodeId - Id of selected node\n     * @returns {number} Index number of attached node\n     */","meta":{"range":[34712,34873],"filename":"tree.js","lineno":1159,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005684","name":"getNodeIndex","type":"FunctionExpression"},"vars":{"parentId":"Tree#getNodeIndex~parentId"},"shortpath":"file"},"description":"<p>Get index number of selected node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Id of selected node</p>","name":"nodeId"}],"returns":[{"type":{"names":["number"]},"description":"<p>Index number of attached node</p>"}],"name":"getNodeIndex","longname":"Tree#getNodeIndex","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000587","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeIndex","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Return parent id of node\n     * @api\n     * @param {string} nodeId - Node id\n     * @returns {string|undefined} Parent id\n     */","meta":{"range":[20076,20160],"filename":"tree.js","lineno":656,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005006","name":"getParentId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return parent id of node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["string","undefined"]},"description":"<p>Parent id</p>"}],"name":"getParentId","longname":"Tree#getParentId","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000537","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getParentId","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {string|undefined}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Return root node id\n     * @api\n     * @returns {string} Root node id\n     */","meta":{"range":[19611,19688],"filename":"tree.js","lineno":636,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100004982","name":"getRootNodeId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return root node id</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>Root node id</p>"}],"name":"getRootNodeId","longname":"Tree#getRootNodeId","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000535","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getRootNodeId","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get selected node id\n     * @api\n     * @memberOf Tree.prototype\n     * @returns {string} selected node id\n     */","meta":{"range":[4874,4947],"filename":"selectable.js","lineno":167,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003657","name":"getSelectedNodeId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get selected node id</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","returns":[{"type":{"names":["string"]},"description":"<p>selected node id</p>"}],"name":"getSelectedNodeId","longname":"Tree#getSelectedNodeId","kind":"function","scope":"instance","___id":"T000002R000387","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getSelectedNodeId","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get node state.\n     * @api\n     * @param {string} nodeId - Node id\n     * @returns {string|null} Node state(('opened', 'closed', null)\n     * @example\n     * tree.getState(nodeId); // 'opened', 'closed',\n     *                        // undefined if the node is nonexistent\n     */","meta":{"range":[22578,22749],"filename":"tree.js","lineno":744,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005127","name":"getState","type":"FunctionExpression"},"vars":{"node":"Tree#getState~node"},"shortpath":"file"},"description":"<p>Get node state.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["string","null"]},"description":"<p>Node state(('opened', 'closed', null)</p>"}],"examples":[{"caption":"","code":"tree.getState(nodeId); // 'opened', 'closed',\n                       // undefined if the node is nonexistent"}],"name":"getState","longname":"Tree#getState","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000547","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getState","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {string|null}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get top checked list\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} [parentId] - Node id (default: rootNode id)\n     * @returns {Array.<string>} Checked node ids\n     * @example\n     * //\n     * // node1(v)\n     * //   node2(v)\n     * //   node3(v)\n     * // node4\n     * //   node5(v)\n     * // node6\n     * //   node7(v)\n     * //     node8(v)\n     * //   node9\n     *\n     * var allTopCheckedList = tree.getTopCheckedList(); // ['node1', 'node5', 'node7']\n     * var descendantsTopCheckedList = tree.getTopCheekedList('node6'); // ['node7']\n     */","meta":{"range":[13948,14562],"filename":"checkbox.js","lineno":508,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001100","name":"getTopCheckedList","type":"FunctionExpression"},"vars":{"tree":"Tree#getTopCheckedList~tree","checkedList":"Tree#getTopCheckedList~checkedList","state":"Tree#getTopCheckedList~state","parentId":"Tree#getTopCheckedList~parentId","":null},"shortpath":"file"},"description":"<p>Get top checked list</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Node id (default: rootNode id)</p>","name":"parentId"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Checked node ids</p>"}],"examples":[{"caption":"","code":"//\n// node1(v)\n//   node2(v)\n//   node3(v)\n// node4\n//   node5(v)\n// node6\n//   node7(v)\n//     node8(v)\n//   node9\n\nvar allTopCheckedList = tree.getTopCheckedList(); // ['node1', 'node5', 'node7']\nvar descendantsTopCheckedList = tree.getTopCheekedList('node6'); // ['node7']"}],"name":"getTopCheckedList","longname":"Tree#getTopCheckedList","kind":"function","scope":"instance","___id":"T000002R000120","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getTopCheckedList","signature":"<span class=\"signature\">(parentId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Whether the node is checked\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @returns {boolean} True if node is indeterminate\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.check(nodeId);\n     * console.log(tree.isChecked(nodeId)); // true\n     */","meta":{"range":[11471,11563],"filename":"checkbox.js","lineno":419,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001026","name":"isChecked","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Whether the node is checked</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>True if node is indeterminate</p>"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.check(nodeId);\nconsole.log(tree.isChecked(nodeId)); // true"}],"name":"isChecked","longname":"Tree#isChecked","kind":"function","scope":"instance","___id":"T000002R000114","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isChecked","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Whether the node is indeterminate\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @returns {boolean} True if node is indeterminate\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.check(nodeId);\n     * console.log(tree.isIndeterminate(nodeId)); // false\n     */","meta":{"range":[11908,12012],"filename":"checkbox.js","lineno":434,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001038","name":"isIndeterminate","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Whether the node is indeterminate</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>True if node is indeterminate</p>"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.check(nodeId);\nconsole.log(tree.isIndeterminate(nodeId)); // false"}],"name":"isIndeterminate","longname":"Tree#isIndeterminate","kind":"function","scope":"instance","___id":"T000002R000115","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isIndeterminate","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Whether the node is leaf\n     * @api\n     * @param {string} nodeId - Node id\n     * @returns {boolean} True if the node is leaf.\n     */","meta":{"range":[31524,31642],"filename":"tree.js","lineno":1053,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005587","name":"isLeaf","type":"FunctionExpression"},"vars":{"node":"Tree#isLeaf~node"},"shortpath":"file"},"description":"<p>Whether the node is leaf</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>True if the node is leaf.</p>"}],"name":"isLeaf","longname":"Tree#isLeaf","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000579","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isLeaf","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Whether the node is unchecked or not\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @returns {boolean} True if node is unchecked.\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.uncheck(nodeId);\n     * console.log(tree.isUnchecked(nodeId)); // true\n     */","meta":{"range":[12354,12450],"filename":"checkbox.js","lineno":449,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001050","name":"isUnchecked","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Whether the node is unchecked or not</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>True if node is unchecked.</p>"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.uncheck(nodeId);\nconsole.log(tree.isUnchecked(nodeId)); // true"}],"name":"isUnchecked","longname":"Tree#isUnchecked","kind":"function","scope":"instance","___id":"T000002R000116","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isUnchecked","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Move a node to new parent\n     * - If 'isSilent' is not true, it redraws the tree\n     * @api\n     * @param {string} nodeId - Node id\n     * @param {string} newParentId - New parent id\n     * @param {number} index - Index number of selected node\n     * @param {boolean} [isSilent] - If true, it doesn't redraw children\n     * @example\n     * tree.move(myNodeId, newParentId); // mode node with redrawing\n     * tree.move(myNodeId, newParentId, true); // move node without redrawing\n     */","meta":{"range":[29029,29221],"filename":"tree.js","lineno":967,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005441","name":"move","type":"FunctionExpression"},"vars":{"this.isMovingNode":"Tree#isMovingNode"},"shortpath":"file"},"description":"<p>Move a node to new parent</p>\n<ul>\n<li>If 'isSilent' is not true, it redraws the tree</li>\n</ul>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"},{"type":{"names":["string"]},"description":"<p>New parent id</p>","name":"newParentId"},{"type":{"names":["number"]},"description":"<p>Index number of selected node</p>","name":"index"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't redraw children</p>","name":"isSilent"}],"examples":[{"caption":"","code":"tree.move(myNodeId, newParentId); // mode node with redrawing\ntree.move(myNodeId, newParentId, true); // move node without redrawing"}],"name":"move","longname":"Tree#move","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000569","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"move","signature":"<span class=\"signature\">(nodeId, newParentId, index, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Open node\n     * @api\n     * @param {string} nodeId - Node id\n     */","meta":{"range":[22841,23098],"filename":"tree.js","lineno":759,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005152","name":"open","type":"FunctionExpression"},"vars":{"node":"Tree#open~node","state":"Tree#open~state"},"shortpath":"file"},"description":"<p>Open node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"name":"open","longname":"Tree#open","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000549","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"open","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Refresh tree or node's children\n     * @api\n     * @param {string} [nodeId] - TreeNode id to refresh\n     */","meta":{"range":[24961,25071],"filename":"tree.js","lineno":840,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005300","name":"refresh","type":"FunctionExpression"},"vars":{"nodeId":"Tree#refresh~nodeId"},"shortpath":"file"},"description":"<p>Refresh tree or node's children</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"optional":true,"description":"<p>TreeNode id to refresh</p>","name":"nodeId"}],"name":"refresh","longname":"Tree#refresh","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000560","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"refresh","signature":"<span class=\"signature\">(nodeId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Remove a node with children.\n     * - If 'isSilent' is not true, it redraws the tree\n     * @api\n     * @param {string} nodeId - Node id to remove\n     * @param {boolean} [isSilent] - If true, it doesn't redraw children\n     * @example\n     * tree.remove(myNodeId); // remove node with redrawing\n     * tree.remove(myNodeId, true); // remove node without redrawing\n     */","meta":{"range":[28430,28517],"filename":"tree.js","lineno":951,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005427","name":"remove","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Remove a node with children.</p>\n<ul>\n<li>If 'isSilent' is not true, it redraws the tree</li>\n</ul>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id to remove</p>","name":"nodeId"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't redraw children</p>","name":"isSilent"}],"examples":[{"caption":"","code":"tree.remove(myNodeId); // remove node with redrawing\ntree.remove(myNodeId, true); // remove node without redrawing"}],"name":"remove","longname":"Tree#remove","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000568","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"remove","signature":"<span class=\"signature\">(nodeId, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Remove all children\n     * @api\n     * @param {string} nodeId - Parent node id\n     * @param {boolean} [isSilent] - If true, it doesn't redraw the node\n     * @example\n     * tree.removeAllChildren(nodeId); // Redraws the node\n     * tree.removeAllChildren(nodId, true); // Doesn't redraw the node\n     */","meta":{"range":[27751,28035],"filename":"tree.js","lineno":929,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005385","name":"removeAllChildren","type":"FunctionExpression"},"vars":{"children":"Tree#removeAllChildren~children","":null},"shortpath":"file"},"description":"<p>Remove all children</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Parent node id</p>","name":"nodeId"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't redraw the node</p>","name":"isSilent"}],"examples":[{"caption":"","code":"tree.removeAllChildren(nodeId); // Redraws the node\ntree.removeAllChildren(nodId, true); // Doesn't redraw the node"}],"name":"removeAllChildren","longname":"Tree#removeAllChildren","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000566","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"removeAllChildren","signature":"<span class=\"signature\">(nodeId, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Remove node data\n     * @api\n     * @param {string} nodeId - Node id\n     * @param {string|Array} names - Names of properties\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\n     * @example\n     * tree.setNodeData(nodeId, 'foo'); // auto refresh\n     * tree.setNodeData(nodeId, 'foo', true); // not refresh\n     */","meta":{"range":[22156,22273],"filename":"tree.js","lineno":731,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005111","name":"removeNodeData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Remove node data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"},{"type":{"names":["string","Array"]},"description":"<p>Names of properties</p>","name":"names"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"examples":[{"caption":"","code":"tree.setNodeData(nodeId, 'foo'); // auto refresh\ntree.setNodeData(nodeId, 'foo', true); // not refresh"}],"name":"removeNodeData","longname":"Tree#removeNodeData","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000546","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"removeNodeData","signature":"<span class=\"signature\">(nodeId, names, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Reset all data\n     * @api\n     * @param {Array|object} data - Raw data for all nodes\n     * @returns {Array.<string>} Added node ids\n     * @example\n     * tree.resetAllData([\n     *  {text: 'hello', children: [\n     *      {text: 'foo'},\n     *      {text: 'bar'}\n     *  ]},\n     *  {text: 'wolrd'}\n     * ]);\n     */","meta":{"range":[27295,27423],"filename":"tree.js","lineno":914,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005365","name":"resetAllData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Reset all data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["Array","object"]},"description":"<p>Raw data for all nodes</p>","name":"data"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Added node ids</p>"}],"examples":[{"caption":"","code":"tree.resetAllData([\n {text: 'hello', children: [\n     {text: 'foo'},\n     {text: 'bar'}\n ]},\n {text: 'wolrd'}\n]);"}],"name":"resetAllData","longname":"Tree#resetAllData","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000565","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"resetAllData","signature":"<span class=\"signature\">(data)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Reset click timer\n     */","meta":{"range":[20208,20321],"filename":"tree.js","lineno":663,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005018","name":"resetClickTimer","type":"FunctionExpression"},"vars":{"this.clickTimer":"Tree#clickTimer"},"shortpath":"file"},"description":"<p>Reset click timer</p>","name":"resetClickTimer","longname":"Tree#resetClickTimer","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000538","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"resetClickTimer","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Search node ids by passing the predicate check or matching data\n     * @api\n     * @param {Function|Object} predicate - Predicate or data\n     * @param {Object} [context] - Context of predicate\n     * @returns {Array.<string>} Node ids\n     * @example\n     * // search from predicate\n     * var leafNodeIds = tree.search(function(node, nodeId) {\n     *     return node.isLeaf();\n     * });\n     * console.log(leafNodeIds); // ['tui-tree-node-3', 'tui-tree-node-5']\n     *\n     * // search from data\n     * var specialNodeIds = tree.search({\n     *     isSpecial: true,\n     *     foo: 'bar'\n     * });\n     * console.log(specialNodeIds); // ['tui-tree-node-5', 'tui-tree-node-10']\n     * console.log(tree.getNodeData('tui-tree-node-5').isSpecial); // true\n     * console.log(tree.getNodeData('tui-tree-node-5').foo); // 'bar'\n     */","meta":{"range":[30077,30347],"filename":"tree.js","lineno":995,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005471","name":"search","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Search node ids by passing the predicate check or matching data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["function","Object"]},"description":"<p>Predicate or data</p>","name":"predicate"},{"type":{"names":["Object"]},"optional":true,"description":"<p>Context of predicate</p>","name":"context"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Node ids</p>"}],"examples":[{"caption":"","code":"// search from predicate\nvar leafNodeIds = tree.search(function(node, nodeId) {\n    return node.isLeaf();\n});\nconsole.log(leafNodeIds); // ['tui-tree-node-3', 'tui-tree-node-5']\n\n// search from data\nvar specialNodeIds = tree.search({\n    isSpecial: true,\n    foo: 'bar'\n});\nconsole.log(specialNodeIds); // ['tui-tree-node-5', 'tui-tree-node-10']\nconsole.log(tree.getNodeData('tui-tree-node-5').isSpecial); // true\nconsole.log(tree.getNodeData('tui-tree-node-5').foo); // 'bar'"}],"name":"search","longname":"Tree#search","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000572","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"search","signature":"<span class=\"signature\">(predicate, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Select node if the feature-\"Selectable\" is enabled.\n     * @api\n     * @memberOf Tree.prototype\n     * @requires Selectable\n     * @param {string} nodeId - Node id\n     * @example\n     * tree.select('tui-tree-node-3');\n     */","meta":{"range":[2459,4534],"filename":"selectable.js","lineno":98,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100003553","name":"select","type":"FunctionExpression"},"vars":{"tree":"Tree#select~tree","prevElement":"Tree#select~prevElement","nodeElement":"Tree#select~nodeElement","selectedClassName":"Tree#select~selectedClassName","prevNodeId":"Tree#select~prevNodeId","this.selectedNodeId":"Tree#select#selectedNodeId"},"shortpath":"file"},"description":"<p>Select node if the feature-&quot;Selectable&quot; is enabled.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","requires":["module:Selectable"],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.select('tui-tree-node-3');"}],"name":"select","longname":"Tree#select","kind":"function","scope":"instance","___id":"T000002R000372","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"select","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Set data properties of a node\n     * @api\n     * @param {string} nodeId - Node id\n     * @param {object} data - Properties\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\n     * @exmaple\n     * tree.setNodeData(nodeId, {foo: 'bar'}); // auto refresh\n     * tree.setNodeData(nodeId, {foo: 'bar'}, true); // not refresh\n     */","meta":{"range":[21674,21783],"filename":"tree.js","lineno":717,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005095","name":"setNodeData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Set data properties of a node</p>","tags":[{"originalTitle":"api","title":"api","text":""},{"originalTitle":"exmaple","title":"exmaple","text":"tree.setNodeData(nodeId, {foo: 'bar'}); // auto refresh\ntree.setNodeData(nodeId, {foo: 'bar'}, true); // not refresh","value":"tree.setNodeData(nodeId, {foo: 'bar'}); // auto refresh\ntree.setNodeData(nodeId, {foo: 'bar'}, true); // not refresh"}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"},{"type":{"names":["object"]},"description":"<p>Properties</p>","name":"data"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"setNodeData","longname":"Tree#setNodeData","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000545","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setNodeData","signature":"<span class=\"signature\">(nodeId, data, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Sort all nodes\n     * @api\n     * @param {Function} comparator - Comparator for sorting\n     * @param {boolean} [isSilent] - If true, it doesn't redraw tree\n     * @example\n     * // Sort with redrawing tree\n     * tree.sort(function(nodeA, nodeB) {\n     *     var aValue = nodeA.getData('text'),\n     *         bValue = nodeB.getData('text');\n     *\n     *     if (!bValue || !bValue.localeCompare) {\n     *         return 0;\n     *     }\n     *     return bValue.localeCompare(aValue);\n     * });\n     *\n     * // Sort, but not redraw tree\n     * tree.sort(function(nodeA, nodeB) {\n     *     var aValue = nodeA.getData('text'),\n     *         bValue = nodeB.getData('text');\n     *\n     *     if (!bValue || !bValue.localeCompare) {\n     *         return 0;\n     *     }\n     *     return bValue.localeCompare(aValue);\n     * }, true);\n     */","meta":{"range":[24686,24830],"filename":"tree.js","lineno":828,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005278","name":"sort","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Sort all nodes</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["function"]},"description":"<p>Comparator for sorting</p>","name":"comparator"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't redraw tree</p>","name":"isSilent"}],"examples":[{"caption":"","code":"// Sort with redrawing tree\ntree.sort(function(nodeA, nodeB) {\n    var aValue = nodeA.getData('text'),\n        bValue = nodeB.getData('text');\n\n    if (!bValue || !bValue.localeCompare) {\n        return 0;\n    }\n    return bValue.localeCompare(aValue);\n});\n\n// Sort, but not redraw tree\ntree.sort(function(nodeA, nodeB) {\n    var aValue = nodeA.getData('text'),\n        bValue = nodeB.getData('text');\n\n    if (!bValue || !bValue.localeCompare) {\n        return 0;\n    }\n    return bValue.localeCompare(aValue);\n}, true);"}],"name":"sort","longname":"Tree#sort","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000559","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"sort","signature":"<span class=\"signature\">(comparator, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Toggle node\n     * @api\n     * @param {string} nodeId - Node id\n     */","meta":{"range":[23543,23817],"filename":"tree.js","lineno":789,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005234","name":"toggle","type":"FunctionExpression"},"vars":{"node":"Tree#toggle~node","state":"Tree#toggle~state"},"shortpath":"file"},"description":"<p>Toggle node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"name":"toggle","longname":"Tree#toggle","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000555","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"toggle","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Toggle node checking\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.toggleCheck(nodeId);\n     */","meta":{"range":[10970,11139],"filename":"checkbox.js","lineno":400,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100001001","name":"toggleCheck","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Toggle node checking</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.toggleCheck(nodeId);"}],"name":"toggleCheck","longname":"Tree#toggleCheck","kind":"function","scope":"instance","___id":"T000002R000113","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"toggleCheck","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Uncheck node\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.uncheck(nodeId);\n     */","meta":{"range":[10610,10747],"filename":"checkbox.js","lineno":385,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100000982","name":"uncheck","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Uncheck node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.uncheck(nodeId);"}],"name":"uncheck","longname":"Tree#uncheck","kind":"function","scope":"instance","___id":"T000002R000112","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"uncheck","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]}]},{"comment":"/**\n * Tree model\n * @constructor TreeModel\n * @param {Array} data - Data\n * @param {Object} options - Options for defaultState and nodeIdPrefix\n **/","meta":{"range":[285,434],"filename":"treeModel.js","lineno":14,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{},"shortpath":"file"},"description":"<p>Tree model</p>","kind":"class","name":"TreeModel","params":[{"type":{"names":["Array"]},"description":"<p>Data</p>","name":"data"},{"type":{"names":["Object"]},"description":"<p>Options for defaultState and nodeIdPrefix</p>","name":"options"}],"longname":"TreeModel","scope":"global","___id":"T000002R000600","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"TreeModel","signature":"<span class=\"signature\">(data, options)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n     * Create node\n     * @param {object} nodeData - Datum of node\n     * @param {string} parentId - Parent id\n     * @returns {TreeNode} TreeNode\n     */","meta":{"range":[2421,2611],"filename":"treeModel.js","lineno":98,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005994","name":"_createNode","type":"FunctionExpression"},"vars":{"nodeData":"TreeModel#_createNode~nodeData"},"shortpath":"file"},"description":"<p>Create node</p>","params":[{"type":{"names":["object"]},"description":"<p>Datum of node</p>","name":"nodeData"},{"type":{"names":["string"]},"description":"<p>Parent id</p>","name":"parentId"}],"returns":[{"type":{"names":["TreeNode"]},"description":"<p>TreeNode</p>"}],"name":"_createNode","longname":"TreeModel#_createNode","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000619","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_createNode","signature":"<span class=\"signature\">(nodeData, parentId)</span><span class=\"type-signature\"> &rarr; {<a target=\"body\" href=\"TreeNode.html\">TreeNode</a>}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Set model with tree data\n     * @param {Array} data - Tree data\n     */","meta":{"range":[1355,1535],"filename":"treeModel.js","lineno":59,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005891","name":"_setData","type":"FunctionExpression"},"vars":{"root":"TreeModel#_setData~root","rootId":"TreeModel#_setData~rootId","this.treeHash[undefined]":"TreeModel#_setData#treeHash[undefined]"},"shortpath":"file"},"description":"<p>Set model with tree data</p>","params":[{"type":{"names":["Array"]},"description":"<p>Tree data</p>","name":"data"}],"name":"_setData","longname":"TreeModel#_setData","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000608","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_setData","signature":"<span class=\"signature\">(data)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Add node(s).\n     * - If the parentId is falsy, the node will be appended to rootNode.\n     * - The update event will be fired with parent node.\n     * @param {Array|object} data - Raw-data\n     * @param {string} parentId - Parent id\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\n     * @returns {Array.<string>} New added node ids\n     */","meta":{"range":[5827,6140],"filename":"treeModel.js","lineno":242,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006277","name":"add","type":"FunctionExpression"},"vars":{"parent":"TreeModel#add~parent","ids":"TreeModel#add~ids","data":"TreeModel#add~data"},"shortpath":"file"},"description":"<p>Add node(s).</p>\n<ul>\n<li>If the parentId is falsy, the node will be appended to rootNode.</li>\n<li>The update event will be fired with parent node.</li>\n</ul>","params":[{"type":{"names":["Array","object"]},"description":"<p>Raw-data</p>","name":"data"},{"type":{"names":["string"]},"description":"<p>Parent id</p>","name":"parentId"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>New added node ids</p>"}],"name":"add","longname":"TreeModel#add","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000643","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"add","signature":"<span class=\"signature\">(data, parentId, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Whether a node is a ancestor of another node.\n     * @param {string} containerId - Id of a node that may contain the other node\n     * @param {string} containedId - Id of a node that may be contained by the other node\n     * @returns {boolean} Whether a node contains another node\n     */","meta":{"range":[8967,9294],"filename":"treeModel.js","lineno":350,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006580","name":"contains","type":"FunctionExpression"},"vars":{"parentId":"TreeModel#contains~parentId","isContained":"TreeModel#contains~isContained"},"shortpath":"file"},"description":"<p>Whether a node is a ancestor of another node.</p>","params":[{"type":{"names":["string"]},"description":"<p>Id of a node that may contain the other node</p>","name":"containerId"},{"type":{"names":["string"]},"description":"<p>Id of a node that may be contained by the other node</p>","name":"containedId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether a node contains another node</p>"}],"name":"contains","longname":"TreeModel#contains","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000662","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"contains","signature":"<span class=\"signature\">(containerId, containedId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Traverse this tree iterating over all descendants of a node.\n     * @param {Function} iteratee - Iteratee function\n     * @param {string} parentId - Parent node id\n     * @param {object} [context] - Context of iteratee\n     */","meta":{"range":[10744,11226],"filename":"treeModel.js","lineno":416,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006723","name":"each","type":"FunctionExpression"},"vars":{"stack":"TreeModel#each~stack","nodeId":"TreeModel#each~nodeId","node":"TreeModel#each~node","context":"TreeModel#each~context"},"shortpath":"file"},"description":"<p>Traverse this tree iterating over all descendants of a node.</p>","params":[{"type":{"names":["function"]},"description":"<p>Iteratee function</p>","name":"iteratee"},{"type":{"names":["string"]},"description":"<p>Parent node id</p>","name":"parentId"},{"type":{"names":["object"]},"optional":true,"description":"<p>Context of iteratee</p>","name":"context"}],"name":"each","longname":"TreeModel#each","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000675","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"each","signature":"<span class=\"signature\">(iteratee, parentId, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Traverse this tree iterating over all nodes.\n     * @param {Function} iteratee - Iteratee function\n     * @param {object} [context] - Context of iteratee\n     */","meta":{"range":[10311,10495],"filename":"treeModel.js","lineno":402,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006697","name":"eachAll","type":"FunctionExpression"},"vars":{"context":"TreeModel#eachAll~context","":null},"shortpath":"file"},"description":"<p>Traverse this tree iterating over all nodes.</p>","params":[{"type":{"names":["function"]},"description":"<p>Iteratee function</p>","name":"iteratee"},{"type":{"names":["object"]},"optional":true,"description":"<p>Context of iteratee</p>","name":"context"}],"name":"eachAll","longname":"TreeModel#eachAll","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000673","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"eachAll","signature":"<span class=\"signature\">(iteratee, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Get child ids\n     * @param {string} nodeId - Node id\n     * @returns {?Array.<string>} Child ids\n     */","meta":{"range":[3124,3295],"filename":"treeModel.js","lineno":128,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006047","name":"getChildIds","type":"FunctionExpression"},"vars":{"node":"TreeModel#getChildIds~node"},"shortpath":"file"},"description":"<p>Get child ids</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["Array.<string>"]},"nullable":true,"description":"<p>Child ids</p>"}],"name":"getChildIds","longname":"TreeModel#getChildIds","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000624","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getChildIds","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; <span class=\"icon green\">nullable</span> {Array.&lt;string>}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Get children\n     * @param {string} nodeId - Node id\n     * @returns {?Array.<TreeNode>} children\n     */","meta":{"range":[2739,2996],"filename":"treeModel.js","lineno":111,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006015","name":"getChildren","type":"FunctionExpression"},"vars":{"childIds":"TreeModel#getChildren~childIds","":null},"shortpath":"file"},"description":"<p>Get children</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["Array.<TreeNode>"]},"nullable":true,"description":"<p>children</p>"}],"name":"getChildren","longname":"TreeModel#getChildren","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000622","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getChildren","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; <span class=\"icon green\">nullable</span> {Array.&lt;<a target=\"body\" href=\"TreeNode.html\">TreeNode</a>>}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Get the number of nodes\n     * @returns {number} The number of nodes\n     */","meta":{"range":[3394,3465],"filename":"treeModel.js","lineno":142,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006070","name":"getCount","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get the number of nodes</p>","returns":[{"type":{"names":["number"]},"description":"<p>The number of nodes</p>"}],"name":"getCount","longname":"TreeModel#getCount","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000626","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getCount","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Get depth from node id\n     * @param {string} id - A node id to find\n     * @returns {?number} Depth\n     */","meta":{"range":[4064,4422],"filename":"treeModel.js","lineno":172,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006124","name":"getDepth","type":"FunctionExpression"},"vars":{"node":"TreeModel#getDepth~node","depth":"TreeModel#getDepth~depth","parent":"TreeModel#getDepth~parent"},"shortpath":"file"},"description":"<p>Get depth from node id</p>","params":[{"type":{"names":["string"]},"description":"<p>A node id to find</p>","name":"id"}],"returns":[{"type":{"names":["number"]},"nullable":true,"description":"<p>Depth</p>"}],"name":"getDepth","longname":"TreeModel#getDepth","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000630","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getDepth","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"> &rarr; <span class=\"icon green\">nullable</span> {number}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Get last depth\n     * @returns {number} The last depth\n     */","meta":{"range":[3550,3751],"filename":"treeModel.js","lineno":150,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006081","name":"getLastDepth","type":"FunctionExpression"},"vars":{"depths":"TreeModel#getLastDepth~depths","":null},"shortpath":"file"},"description":"<p>Get last depth</p>","returns":[{"type":{"names":["number"]},"description":"<p>The last depth</p>"}],"name":"getLastDepth","longname":"TreeModel#getLastDepth","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000627","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getLastDepth","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Find node\n     * @param {string} id - A node id to find\n     * @returns {?TreeNode} Node\n     */","meta":{"range":[3870,3933],"filename":"treeModel.js","lineno":163,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006114","name":"getNode","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Find node</p>","params":[{"type":{"names":["string"]},"description":"<p>A node id to find</p>","name":"id"}],"returns":[{"type":{"names":["TreeNode"]},"nullable":true,"description":"<p>Node</p>"}],"name":"getNode","longname":"TreeModel#getNode","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000629","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNode","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"> &rarr; <span class=\"icon green\">nullable</span> {<a target=\"body\" href=\"TreeNode.html\">TreeNode</a>}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Get node data (all)\n     * @param {string} nodeId - Node id\n     * @returns {?object} Node data\n     */","meta":{"range":[9957,10127],"filename":"treeModel.js","lineno":387,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006674","name":"getNodeData","type":"FunctionExpression"},"vars":{"node":"TreeModel#getNodeData~node"},"shortpath":"file"},"description":"<p>Get node data (all)</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["object"]},"nullable":true,"description":"<p>Node data</p>"}],"name":"getNodeData","longname":"TreeModel#getNodeData","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000671","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeData","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; <span class=\"icon green\">nullable</span> {object}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Return prefix of node id\n     * @returns {string} Prefix\n     */","meta":{"range":[1192,1261],"filename":"treeModel.js","lineno":51,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005884","name":"getNodeIdPrefix","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return prefix of node id</p>","returns":[{"type":{"names":["string"]},"description":"<p>Prefix</p>"}],"name":"getNodeIdPrefix","longname":"TreeModel#getNodeIdPrefix","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000607","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeIdPrefix","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Return parent id of node\n     * @param {string} id - Node id\n     * @returns {?string} Parent id\n     */","meta":{"range":[4549,4712],"filename":"treeModel.js","lineno":195,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006178","name":"getParentId","type":"FunctionExpression"},"vars":{"node":"TreeModel#getParentId~node"},"shortpath":"file"},"description":"<p>Return parent id of node</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"id"}],"returns":[{"type":{"names":["string"]},"nullable":true,"description":"<p>Parent id</p>"}],"name":"getParentId","longname":"TreeModel#getParentId","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000637","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getParentId","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"> &rarr; <span class=\"icon green\">nullable</span> {string}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Move a node to new parent's child\n     * @param {string} nodeId - Node id\n     * @param {string} newParentId - New parent id\n     * @param {number} [index] - Start index number for inserting\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\n     */","meta":{"range":[7519,8656],"filename":"treeModel.js","lineno":307,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006427","name":"move","type":"FunctionExpression"},"vars":{"node":"TreeModel#move~node","originalParent":"TreeModel#move~originalParent","originalParentId":"TreeModel#move~originalParentId","newParent":"TreeModel#move~newParent","newParentId":"TreeModel#move~newParentId","index":"TreeModel#move~index"},"shortpath":"file"},"description":"<p>Move a node to new parent's child</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"},{"type":{"names":["string"]},"description":"<p>New parent id</p>","name":"newParentId"},{"type":{"names":["number"]},"optional":true,"description":"<p>Start index number for inserting</p>","name":"index"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"move","longname":"TreeModel#move","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000652","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"move","signature":"<span class=\"signature\">(nodeId, newParentId, index<span class=\"signature-attributes\">opt</span>, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Remove a node with children.\n     * - The update event will be fired with parent node.\n     * @param {string} id - Node id to remove\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\n     */","meta":{"range":[4959,5427],"filename":"treeModel.js","lineno":211,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006201","name":"remove","type":"FunctionExpression"},"vars":{"node":"TreeModel#remove~node","parent":"TreeModel#remove~parent","":null},"shortpath":"file"},"description":"<p>Remove a node with children.</p>\n<ul>\n<li>The update event will be fired with parent node.</li>\n</ul>","params":[{"type":{"names":["string"]},"description":"<p>Node id to remove</p>","name":"id"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"remove","longname":"TreeModel#remove","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000639","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"remove","signature":"<span class=\"signature\">(id, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Remove node data\n     * @param {string} id - Node id\n     * @param {string|Array} names - Names of properties\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\n     */","meta":{"range":[6838,7214],"filename":"treeModel.js","lineno":282,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006369","name":"removeNodeData","type":"FunctionExpression"},"vars":{"node":"TreeModel#removeNodeData~node"},"shortpath":"file"},"description":"<p>Remove node data</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"id"},{"type":{"names":["string","Array"]},"description":"<p>Names of properties</p>","name":"names"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"removeNodeData","longname":"TreeModel#removeNodeData","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000650","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"removeNodeData","signature":"<span class=\"signature\">(id, names, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Set data properties of a node\n     * @param {string} id - Node id\n     * @param {object} props - Properties\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\n     */","meta":{"range":[6362,6614],"filename":"treeModel.js","lineno":262,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006330","name":"setNodeData","type":"FunctionExpression"},"vars":{"node":"TreeModel#setNodeData~node"},"shortpath":"file"},"description":"<p>Set data properties of a node</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"id"},{"type":{"names":["object"]},"description":"<p>Properties</p>","name":"props"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"setNodeData","longname":"TreeModel#setNodeData","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000648","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setNodeData","signature":"<span class=\"signature\">(id, props, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\n     * Sort nodes\n     * @param {Function} comparator - Comparator function\n     */","meta":{"range":[9393,9831],"filename":"treeModel.js","lineno":366,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006618","name":"sort","type":"FunctionExpression"},"vars":{"":null},"shortpath":"file"},"description":"<p>Sort nodes</p>","params":[{"type":{"names":["function"]},"description":"<p>Comparator function</p>","name":"comparator"}],"name":"sort","longname":"TreeModel#sort","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000667","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"sort","signature":"<span class=\"signature\">(comparator)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]}]},{"comment":"/**\n * TreeNode\n * @Constructor TreeNode\n * @param {Object} nodeData - Node data\n * @param {string} [parentId] - Parent node id\n */","meta":{"range":[360,491],"filename":"treeNode.js","lineno":20,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{},"shortpath":"file"},"description":"<p>TreeNode</p>","kind":"class","name":"TreeNode","params":[{"type":{"names":["Object"]},"description":"<p>Node data</p>","name":"nodeData"},{"type":{"names":["string"]},"optional":true,"description":"<p>Parent node id</p>","name":"parentId"}],"longname":"TreeNode","scope":"global","___id":"T000002R000697","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"TreeNode","signature":"<span class=\"signature\">(nodeData, parentId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n     * Add child id\n     * @param {string} id - Child node id\n     */","meta":{"range":[3717,3883],"filename":"treeNode.js","lineno":178,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007091","name":"addChildId","type":"FunctionExpression"},"vars":{"childIds":"TreeNode#addChildId~childIds"},"shortpath":"file"},"description":"<p>Add child id</p>","params":[{"type":{"names":["string"]},"description":"<p>Child node id</p>","name":"id"}],"name":"addChildId","longname":"TreeNode#addChildId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000725","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"addChildId","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get all data\n     * @api\n     * @returns {Object} Data\n     */","meta":{"range":[4337,4415],"filename":"treeNode.js","lineno":209,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007143","name":"getAllData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get all data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["Object"]},"description":"<p>Data</p>"}],"name":"getAllData","longname":"TreeNode#getAllData","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000729","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getAllData","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Object}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get id list of children\n     * @api\n     * @returns {Array.<number>} Id list of children\n     */","meta":{"range":[3562,3632],"filename":"treeNode.js","lineno":170,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007081","name":"getChildIds","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get id list of children</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["Array.<number>"]},"description":"<p>Id list of children</p>"}],"name":"getChildIds","longname":"TreeNode#getChildIds","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000724","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getChildIds","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;number>}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get index of child\n     * @api\n     * @param {string} id - Node id\n     * @returns {number} Index of child in children list\n     */","meta":{"range":[5706,5785],"filename":"treeNode.js","lineno":268,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007240","name":"getChildIndex","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get index of child</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"id"}],"returns":[{"type":{"names":["number"]},"description":"<p>Index of child in children list</p>"}],"name":"getChildIndex","longname":"TreeNode#getChildIndex","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000736","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getChildIndex","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get data\n     * @api\n     * @param {string} name - Property name of data\n     * @returns {*} Data\n     */","meta":{"range":[4188,4252],"filename":"treeNode.js","lineno":200,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007133","name":"getData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Property name of data</p>","name":"name"}],"returns":[{"type":{"names":["*"]},"description":"<p>Data</p>"}],"name":"getData","longname":"TreeNode#getData","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000728","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getData","signature":"<span class=\"signature\">(name)</span><span class=\"type-signature\"> &rarr; {*}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get id\n     * @api\n     * @returns {string} Node id\n     */","meta":{"range":[2881,2931],"filename":"treeNode.js","lineno":136,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007047","name":"getId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get id</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>Node id</p>"}],"name":"getId","longname":"TreeNode#getId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000718","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getId","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get parent id\n     * @api\n     * @returns {string} Parent node id\n     */","meta":{"range":[3027,3089],"filename":"treeNode.js","lineno":145,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007054","name":"getParentId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get parent id</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>Parent node id</p>"}],"name":"getParentId","longname":"TreeNode#getParentId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000719","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getParentId","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get state\n     * @api\n     * @returns {string} state ('opened' or 'closed')\n     */","meta":{"range":[2743,2799],"filename":"treeNode.js","lineno":127,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007040","name":"getState","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get state</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>state ('opened' or 'closed')</p>"}],"name":"getState","longname":"TreeNode#getState","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000717","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getState","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Return true if this node has a provided child id.\n     * @api\n     * @param {string} id - Node id\n     * @returns {boolean} - Whether this node has a provided child id.\n     */","meta":{"range":[5080,5161],"filename":"treeNode.js","lineno":240,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007202","name":"hasChild","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return true if this node has a provided child id.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"id"}],"returns":[{"type":{"names":["boolean"]},"description":"<ul>\n<li>Whether this node has a provided child id.</li>\n</ul>"}],"name":"hasChild","longname":"TreeNode#hasChild","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000733","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"hasChild","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Insert child id\n     * @param {string} id - Child node id\n     * @param {number} index - Index number of insert position\n     */","meta":{"range":[5936,6115],"filename":"treeNode.js","lineno":277,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007251","name":"insertChildId","type":"FunctionExpression"},"vars":{"childIds":"TreeNode#insertChildId~childIds"},"shortpath":"file"},"description":"<p>Insert child id</p>","params":[{"type":{"names":["string"]},"description":"<p>Child node id</p>","name":"id"},{"type":{"names":["number"]},"description":"<p>Index number of insert position</p>","name":"index"}],"name":"insertChildId","longname":"TreeNode#insertChildId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000737","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"insertChildId","signature":"<span class=\"signature\">(id, index)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Return whether this node is leaf.\n     * @api\n     * @returns {boolean} Node is leaf or not.\n     */","meta":{"range":[5284,5354],"filename":"treeNode.js","lineno":249,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007216","name":"isLeaf","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return whether this node is leaf.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Node is leaf or not.</p>"}],"name":"isLeaf","longname":"TreeNode#isLeaf","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000734","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isLeaf","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Return whether this node is root.\n     * @api\n     * @returns {boolean} Node is root or not.\n     */","meta":{"range":[5477,5552],"filename":"treeNode.js","lineno":258,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007227","name":"isRoot","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return whether this node is root.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Node is root or not.</p>"}],"name":"isRoot","longname":"TreeNode#isRoot","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000735","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isRoot","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Move child id\n     * @param {string} id - Child node id\n     * @param {number} index - Index number of insert position\n     */","meta":{"range":[6264,6599],"filename":"treeNode.js","lineno":290,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007279","name":"moveChildId","type":"FunctionExpression"},"vars":{"childIds":"TreeNode#moveChildId~childIds","originIdx":"TreeNode#moveChildId~originIdx","index":"TreeNode#moveChildId~index"},"shortpath":"file"},"description":"<p>Move child id</p>","params":[{"type":{"names":["string"]},"description":"<p>Child node id</p>","name":"id"},{"type":{"names":["number"]},"description":"<p>Index number of insert position</p>","name":"index"}],"name":"moveChildId","longname":"TreeNode#moveChildId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000739","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"moveChildId","signature":"<span class=\"signature\">(id, index)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Remove child id\n     * @param {string} id - Child node id\n     */","meta":{"range":[3971,4060],"filename":"treeNode.js","lineno":190,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007120","name":"removeChildId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Remove child id</p>","params":[{"type":{"names":["string"]},"description":"<p>Child node id</p>","name":"id"}],"name":"removeChildId","longname":"TreeNode#removeChildId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000727","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"removeChildId","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Remove data\n     * @api\n     * @param {...string} names - Names of data\n     */","meta":{"range":[4738,4881],"filename":"treeNode.js","lineno":228,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007180","name":"removeData","type":"FunctionExpression"},"vars":{"":null},"shortpath":"file"},"description":"<p>Remove data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"variable":true,"description":"<p>Names of data</p>","name":"names"}],"name":"removeData","longname":"TreeNode#removeData","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000732","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"removeData","signature":"<span class=\"signature\">(&hellip;names)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Replace childIds\n     * @param {Array.<number>} childIds - Id list of children\n     */","meta":{"range":[3365,3443],"filename":"treeNode.js","lineno":161,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007071","name":"replaceChildIds","type":"FunctionExpression"},"vars":{"this._childIds":"TreeNode#replaceChildIds#_childIds"},"shortpath":"file"},"description":"<p>Replace childIds</p>","params":[{"type":{"names":["Array.<number>"]},"description":"<p>Id list of children</p>","name":"childIds"}],"name":"replaceChildIds","longname":"TreeNode#replaceChildIds","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000722","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"replaceChildIds","signature":"<span class=\"signature\">(childIds)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Set data\n     * @api\n     * @param {Object} data - Data for adding\n     */","meta":{"range":[4512,4636],"filename":"treeNode.js","lineno":218,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007157","name":"setData","type":"FunctionExpression"},"vars":{"data":"TreeNode#setData~data"},"shortpath":"file"},"description":"<p>Set data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["Object"]},"description":"<p>Data for adding</p>","name":"data"}],"name":"setData","longname":"TreeNode#setData","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000730","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setData","signature":"<span class=\"signature\">(data)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Set parent id\n     * @param {string} parentId - Parent node id\n     */","meta":{"range":[3182,3256],"filename":"treeNode.js","lineno":153,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007061","name":"setParentId","type":"FunctionExpression"},"vars":{"this._parentId":"TreeNode#setParentId#_parentId"},"shortpath":"file"},"description":"<p>Set parent id</p>","params":[{"type":{"names":["string"]},"description":"<p>Parent node id</p>","name":"parentId"}],"name":"setParentId","longname":"TreeNode#setParentId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000720","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setParentId","signature":"<span class=\"signature\">(parentId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Set state\n     * @api\n     * @param {string} state - State of node ('closed', 'opened')\n     */","meta":{"range":[2507,2637],"filename":"treeNode.js","lineno":117,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100007015","name":"setState","type":"FunctionExpression"},"vars":{"state":"TreeNode#setState~state","this._state":"TreeNode#setState#_state"},"shortpath":"file"},"description":"<p>Set state</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>State of node ('closed', 'opened')</p>","name":"state"}],"name":"setState","longname":"TreeNode#setState","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000714","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setState","signature":"<span class=\"signature\">(state)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Toggle state\n     * @api\n     */","meta":{"range":[2204,2389],"filename":"treeNode.js","lineno":104,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100006986","name":"toggleState","type":"FunctionExpression"},"vars":{"this._state":"TreeNode#toggleState#_state"},"shortpath":"file"},"description":"<p>Toggle state</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"name":"toggleState","longname":"TreeNode#toggleState","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000711","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"toggleState","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]}]}],"externals":[],"events":[{"comment":"/**\n         * @api\n         * @event Tree#afterDraw\n         * @param {string} nodeId - Node id\n         * @example\n         * tree.on('afterDraw', function(nodeId) {\n         *     if (tree.isMovingNode) {\n         *         console.log('isMovingNode');\n         *     }\n         *     console.log('afterDraw: ' + nodeId);\n         * });\n         */","meta":{"range":[17319,17670],"filename":"tree.js","lineno":551,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"afterDraw","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.on('afterDraw', function(nodeId) {\n    if (tree.isMovingNode) {\n        console.log('isMovingNode');\n    }\n    console.log('afterDraw: ' + nodeId);\n});"}],"memberof":"Tree","longname":"Tree#event_afterDraw","scope":"instance","___id":"T000002R000522","___s":true,"attribs":"","id":"event_afterDraw","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n         * @api\n         * @event Tree#beforeDraw\n         * @param {string} nodeId - Node id\n         * @example\n         * tree.on('beforeDraw', function(nodeId) {\n         *     if (tree.isMovingNode) {\n         *         console.log('isMovingNode');\n         *     }\n         *     console.log('beforeDraw: ' + nodeId);\n         * });\n         */","meta":{"range":[16586,16940],"filename":"tree.js","lineno":527,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"beforeDraw","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.on('beforeDraw', function(nodeId) {\n    if (tree.isMovingNode) {\n        console.log('isMovingNode');\n    }\n    console.log('beforeDraw: ' + nodeId);\n});"}],"memberof":"Tree","longname":"Tree#event_beforeDraw","scope":"instance","___id":"T000002R000516","___s":true,"attribs":"","id":"event_beforeDraw","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n         * @api\n         * @event Tree#beforeSelect\n         * @param {string} nodeId - Selected node id\n         * @param {string} prevNodeId - Previous selected node id\n         * @param {Element|undefined} target - Target element\n         * @example\n         * tree\n         *  .enableFeature('Selectable')\n         *  .on('beforeSelect', function(nodeId, prevNodeId, target) {\n         *      console.log('selected node: ' + nodeId);\n         *      console.log('previous selected node: ' + prevNodeId);\n         *      console.log('target element: ' + target);\n         *      return false; // It cancels \"select\"\n         *      // return true; // It fires \"select\"\n         *  });\n         */","meta":{"range":[2865,3568],"filename":"selectable.js","lineno":112,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"beforeSelect","params":[{"type":{"names":["string"]},"description":"<p>Selected node id</p>","name":"nodeId"},{"type":{"names":["string"]},"description":"<p>Previous selected node id</p>","name":"prevNodeId"},{"type":{"names":["Element","undefined"]},"description":"<p>Target element</p>","name":"target"}],"examples":[{"caption":"","code":"tree\n .enableFeature('Selectable')\n .on('beforeSelect', function(nodeId, prevNodeId, target) {\n     console.log('selected node: ' + nodeId);\n     console.log('previous selected node: ' + prevNodeId);\n     console.log('target element: ' + target);\n     return false; // It cancels \"select\"\n     // return true; // It fires \"select\"\n });"}],"memberof":"Tree","longname":"Tree#event_beforeSelect","scope":"instance","___id":"T000002R000383","___s":true,"attribs":"","id":"event_beforeSelect","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n             * @api\n             * @event Tree#check\n             * @param {string} nodeId - Checked node id\n             * @example\n             * tree.on('check', function(nodeId) {\n             *     console.log('checked: ' + nodeId);\n             * });\n             */","meta":{"range":[6326,6602],"filename":"checkbox.js","lineno":230,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"check","params":[{"type":{"names":["string"]},"description":"<p>Checked node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.on('check', function(nodeId) {\n    console.log('checked: ' + nodeId);\n});"}],"memberof":"Tree","longname":"Tree#event_check","scope":"instance","___id":"T000002R000084","___s":true,"attribs":"","id":"event_check","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n         * @api\n         * @event Tree#move\n         * @param {{nodeId: string, originalParentId: string, newParentId: string, index: number}} treeEvent - Event\n         * @example\n         * tree.on('move', function(treeEvent) {\n         *     var nodeId = treeEvent.nodeId,\n         *         originalParentId = treeEvent.originalParentId,\n         *         newParentId = treeEvent.newParentId,\n         *         index = treeEvent.index;\n         *\n         *     console.log(nodeId, originalParentId, newParentId, index);\n         * });\n         */","meta":{"range":[8283,8840],"filename":"tree.js","lineno":247,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"move","params":[{"type":{"names":["Object"]},"description":"<p>Event</p>","name":"treeEvent"}],"examples":[{"caption":"","code":"tree.on('move', function(treeEvent) {\n    var nodeId = treeEvent.nodeId,\n        originalParentId = treeEvent.originalParentId,\n        newParentId = treeEvent.newParentId,\n        index = treeEvent.index;\n\n    console.log(nodeId, originalParentId, newParentId, index);\n});"}],"memberof":"Tree","longname":"Tree#event_move","scope":"instance","___id":"T000002R000432","___s":true,"attribs":"","id":"event_move","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n             * @api\n             * @event Tree#select\n             * @param {string} nodeId - Selected node id\n             * @param {string} prevNodeId - Previous selected node id\n             * @param {Element|undefined} target - Target element\n             * @example\n             * tree\n             *  .enableFeature('Selectable')\n             *  .on('select', function(nodeId, prevNodeId, target) {\n             *      console.log('selected node: ' + nodeId);\n             *      console.log('previous selected node: ' + prevNodeId);\n             *      console.log('target element: ' + target);\n             *  });\n             */","meta":{"range":[3774,4415],"filename":"selectable.js","lineno":133,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"select","params":[{"type":{"names":["string"]},"description":"<p>Selected node id</p>","name":"nodeId"},{"type":{"names":["string"]},"description":"<p>Previous selected node id</p>","name":"prevNodeId"},{"type":{"names":["Element","undefined"]},"description":"<p>Target element</p>","name":"target"}],"examples":[{"caption":"","code":"tree\n .enableFeature('Selectable')\n .on('select', function(nodeId, prevNodeId, target) {\n     console.log('selected node: ' + nodeId);\n     console.log('previous selected node: ' + prevNodeId);\n     console.log('target element: ' + target);\n });"}],"memberof":"Tree","longname":"Tree#event_select","scope":"instance","___id":"T000002R000384","___s":true,"attribs":"","id":"event_select","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n         * @api\n         * @event Tree#selectContextMenu\n         * @param {{cmd: string, nodeId: string}} treeEvent - Tree event\n         * @example\n         * tree.on('selectContextMenu', function(treeEvent) {\n         *     var cmd = treeEvent.cmd,\n         *     var nodeId = treeEvent.nodeId;\n         *\n         *     console.log(cmd, nodeId);\n         * });\n         */","meta":{"range":[4002,4382],"filename":"contextMenu.js","lineno":158,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"selectContextMenu","params":[{"type":{"names":["Object"]},"description":"<p>Tree event</p>","name":"treeEvent"}],"examples":[{"caption":"","code":"tree.on('selectContextMenu', function(treeEvent) {\n    var cmd = treeEvent.cmd,\n    var nodeId = treeEvent.nodeId;\n\n    console.log(cmd, nodeId);\n});"}],"memberof":"Tree","longname":"Tree#event_selectContextMenu","scope":"instance","___id":"T000002R000165","___s":true,"attribs":"","id":"event_selectContextMenu","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n             * @api\n             * @event Tree#uncheck\n             * @param {string} nodeId - Unchecked node id\n             * @example\n             * tree.on('uncheck', function(nodeId) {\n             *     console.log('unchecked: ' + nodeId);\n             * });\n             */","meta":{"range":[6696,6980],"filename":"checkbox.js","lineno":241,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"uncheck","params":[{"type":{"names":["string"]},"description":"<p>Unchecked node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.on('uncheck', function(nodeId) {\n    console.log('unchecked: ' + nodeId);\n});"}],"memberof":"Tree","longname":"Tree#event_uncheck","scope":"instance","___id":"T000002R000086","___s":true,"attribs":"","id":"event_uncheck","ancestors":["<a href=\"Tree.html\">Tree</a>#"]}],"globals":[{"comment":"/**\n * Make class names\n * @param {string} prefix - Prefix of class name\n * @param {Array.<string>} keys - Keys of class names\n * @returns {object.<string, string>} Class names map\n */","meta":{"range":[200,370],"filename":"defaultOption.js","lineno":9,"path":"/Users/nhnent/Sites/component-tree/src/js/consts","code":{"id":"astnode100000003","name":"makeClassNames","type":"FunctionDeclaration","paramnames":["prefix","keys"]},"vars":{"obj":"makeClassNames~obj","":null},"shortpath":"file"},"description":"<p>Make class names</p>","params":[{"type":{"names":["string"]},"description":"<p>Prefix of class name</p>","name":"prefix"},{"type":{"names":["Array.<string>"]},"description":"<p>Keys of class names</p>","name":"keys"}],"returns":[{"type":{"names":["object.<string, string>"]},"description":"<p>Class names map</p>"}],"name":"makeClassNames","longname":"makeClassNames","kind":"function","scope":"global","___id":"T000002R000002","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"makeClassNames","signature":"<span class=\"signature\">(prefix, keys)</span><span class=\"type-signature\"> &rarr; {object.&lt;string, string>}</span>","ancestors":[]},{"comment":"/**\n * Set abstract apis to tree prototype\n * @param {string} featureName - Feature name\n * @param {object} feature - Feature\n */","meta":{"range":[35009,35375],"filename":"tree.js","lineno":1171,"path":"/Users/nhnent/Sites/component-tree/src/js","code":{"id":"astnode100005710","name":"setAbstractAPIs","type":"FunctionDeclaration","paramnames":["featureName","feature"]},"vars":{"messageName":"setAbstractAPIs~messageName","apiList":"setAbstractAPIs~apiList","":null},"shortpath":"file"},"description":"<p>Set abstract apis to tree prototype</p>","params":[{"type":{"names":["string"]},"description":"<p>Feature name</p>","name":"featureName"},{"type":{"names":["object"]},"description":"<p>Feature</p>","name":"feature"}],"name":"setAbstractAPIs","longname":"setAbstractAPIs","kind":"function","scope":"global","___id":"T000002R000589","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setAbstractAPIs","signature":"<span class=\"signature\">(featureName, feature)</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n * Checkbox tri-states\n */","meta":{"range":[285,302],"filename":"checkbox.js","lineno":19,"path":"/Users/nhnent/Sites/component-tree/src/js/features","code":{"id":"astnode100000153","name":"STATE_CHECKED","type":"Literal","value":1},"shortpath":"file"},"description":"<p>Checkbox tri-states</p>","name":"STATE_CHECKED","longname":"STATE_CHECKED","kind":"member","scope":"global","___id":"T000002R000031","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"STATE_CHECKED","ancestors":[],"signature":"<span class=\"type-signature\"></span>"}],"mixins":[],"modules":[],"namespaces":[],"interfaces":[],"tutorials":[{"name":"check","longname":"check","title":"Checkbox","exp":"Checkbox"},{"name":"ctxMenu","longname":"ctxMenu","title":"Context Menu","exp":"Context Menu"},{"name":"default","longname":"default","title":"Default, Draggable, Selectable","exp":"Default, Draggable, Selectable"},{"name":"depthLabel","longname":"depthLabel","title":"Custom_DepthLabel","exp":"Custom_DepthLabel"},{"name":"selectableNodes","longname":"selectableNodes","title":"Selectable, Editable","exp":"Selectable, Editable"}]})