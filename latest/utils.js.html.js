tui.util.defineNamespace("fedoc.content", {});
fedoc.content["utils.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Helper object to make easy tree elements\n * @author NHN Ent. FE dev team.&lt;dl_javascript@nhnent.com>\n */\n\n/**\n * @namespace util\n */\nvar util = {\n    /**\n     * Add event to element\n     * @param {Object} element A target element\n     * @param {String} eventName A name of event \n     * @param {Function} handler A callback function to add\n     */\n    addEventListener: function(element, eventName, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(eventName, handler, false);\n        } else {\n            element.attachEvent('on' + eventName, handler);\n        }\n    },\n\n    /**\n     * Remove event from element\n     * @param {Object} element A target element\n     * @param {String} eventName A name of event\n     * @param {Function} handler A callback function to remove\n     */\n    removeEventListener: function(element, eventName, handler) {\n        if (element.removeEventListener) {\n            element.removeEventListener(eventName, handler, false);\n        } else {\n            element.detachEvent('on' + eventName, handler);\n        }\n    },\n\n    /**\n     * Get target element\n     * @param {event} e Event object\n     * @return {HTMLElement} \n     */\n    getTarget: function(e) {\n        e = e || window.event;\n        var target = e.target || e.srcElement;\n        return target;\n    },\n\n    /**\n     * Check the element has specific class or not\n     * @param {HTMLElement} element A target element\n     * @param {string} className A name of class to find\n     * @return {boolean}\n     */\n    hasClass: function(element, className) {\n        if (!element || !className) {\n            throw new Error('#util.hasClass(element, className) 엘리먼트가 입력되지 않았습니다. \\n__element' + element + ',__className' + className);\n        }\n\n        var cls = element.className;\n\n        if (cls.indexOf(className) !== -1) {\n            return true;\n        }\n\n        return false;\n    },\n\n    /**\n     * Find element by class name\n     * @param {HTMLElement} target A target element\n     * @param {string} className A name of class\n     * @return {array}\n     */\n    getElementsByClass: function(target, className) {\n        if (target.querySelectorAll) {\n            return target.querySelectorAll('.' + className);\n        }\n        var all = target.getElementsByTagName('*'),\n            filter = [];\n\n        all = tui.util.toArray(all);\n\n        tui.util.forEach(all, function(el) {\n            var cls = el.className || '';\n            if (cls.indexOf(className) !== -1) {\n                filter.push(el);\n            }\n        });\n\n        return filter;\n    },\n\n    /**\n     * Check whether the click event by right button or not\n     * @param {event} e Event object\n     * @return {boolean} \n     */\n    isRightButton: function(e) {\n        var isRight = util._getButton(e) === 2;\n        return isRight;\n    },\n\n    /**\n     * Whether the property exist or not\n     * @param {array} props A property \n     * @return {boolean}\n     */\n    testProp: function(props) {\n        var style = document.documentElement.style,\n            i = 0;\n\n        for (; i &lt; props.length; i++) {\n            if (props[i] in style) {\n                return props[i];\n            }\n        }\n        return false;\n    },\n\n    /**\n     * Prevent default event \n     * @param {event} e Event object\n     */\n    preventDefault: function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    },\n\n    /**\n     * Normalization for event button property \n     * 0: First mouse button, 2: Second mouse button, 1: Center button\n     * @param {MouseEvent} event Event object\n     * @return {number|undefined} \n     * @private\n     */\n    _getButton: function(e) {\n        var button,\n            primary = '0,1,3,5,7',\n            secondary = '2,6',\n            wheel = '4';\n\n        if (document.implementation.hasFeature('MouseEvents', '2.0')) {\n            return e.button;\n        } else {\n            button = e.button + '';\n            if (primary.indexOf(button) > -1) {\n                return 0;\n            } else if (secondary.indexOf(button) > -1) {\n                return 2;\n            } else if (wheel.indexOf(button) > -1) {\n                return 1;\n            }\n        }\n    }\n};\n\nmodule.exports = util;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"