tui.util.defineNamespace("fedoc.content", {});
fedoc.content["consts_defaultOption.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>'use strict';\n\n/**\n * Make class names\n * @param {string} prefix - Prefix of class name\n * @param {Array.&lt;string>} keys - Keys of class names\n * @returns {object.&lt;string, string>} Class names map\n */\nfunction makeClassNames(prefix, keys) {\n    var obj = {};\n    tui.util.forEach(keys, function(key) {\n        obj[key + 'Class'] = prefix + key;\n    });\n    return obj;\n}\n\n/**\n * A default values for tree\n * @const\n * @type {Object}\n * @property {string} nodeDefaultState - Node state\n * @property {string} nodeIdPrefix - Node id prefix\n * @property {object} stateLabel - State label in node\n *  @property {string} stateLabel.opened - '-'\n *  @property {string} stateLabel.closed - '+'\n * @property {object} template - Template html for the nodes.\n *  @property {string} template.internalNode - Template html for internal node.\n *  @property {string} template.leafNode - Template html for leaf node.\n * @property {object} classNames - Class names of elements in tree\n *  @property {string} openedClass - Class name for opened node\n *  @property {string} closedClass - Class name for closed node\n *  @property {string} nodeClass - Class name for node\n *  @property {string} leafClass - Class name for leaf node\n *  @property {string} subtreeClass  - Class name for subtree in internal node\n *  @property {string} toggleBtnClass - Class name for toggle button in internal node\n *  @property {string} textClass - Class name for text element in a node\n */\nmodule.exports = {\n    nodeDefaultState: 'closed',\n    stateLabels: {\n        opened: '-',\n        closed: '+'\n    },\n    nodeIdPrefix: 'tui-tree-node-',\n    classNames: makeClassNames('tui-tree-', [\n        'node',\n        'leaf',\n        'opened',\n        'closed',\n        'subtree',\n        'toggleBtn',\n        'text'\n    ]),\n    template: {\n        internalNode:\n            '&lt;button type=\"button\" class=\"{{toggleBtnClass}}\">{{stateLabel}}&lt;/button>' +\n            '&lt;span class=\"{{textClass}}\">{{text}}&lt;/span>' +\n            '&lt;ul class=\"{{subtreeClass}}\">{{children}}&lt;/ul>',\n        leafNode:\n            '&lt;span class=\"{{textClass}}\">{{text}}&lt;/span>'\n    }\n};\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"