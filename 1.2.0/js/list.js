tui.util.defineNamespace("fedoc.lnb",{"classes":[{"comment":"/**\n * Set the checkbox-api\n * @class Checkbox\n * @constructor\n * @param {Tree} tree - Tree\n * @param {Object} option - Option\n *  @param {string} option.checkboxClassName - Classname of checkbox element\n */","meta":{"range":[703,15502],"filename":"checkbox.js","lineno":35,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100000184","name":"Checkbox","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Set the checkbox-api</p>","kind":"class","classdesc":"<p>Checkbox</p>","params":[{"type":{"names":["Tree"]},"description":"<p>Tree</p>","name":"tree"},{"type":{"names":["Object"]},"description":"<p>Option</p>","name":"option"},{"type":{"names":["string"]},"description":"<p>Classname of checkbox element</p>","name":"option.checkboxClassName"}],"name":"Checkbox","longname":"Checkbox","scope":"global","___id":"T000002R000038","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Checkbox","signature":"<span class=\"signature\">(tree, option)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n         * @static\n         * @memberOf Checkbox\n         * @returns {Array.<string>} API list of checkbox\n         */","meta":{"range":[941,1012],"filename":"checkbox.js","lineno":42,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100000195","name":"getAPIList","type":"FunctionExpression"},"shortpath":"file"},"scope":"static","memberof":"Checkbox","returns":[{"type":{"names":["Array.<string>"]},"description":"<p>API list of checkbox</p>"}],"name":"getAPIList","longname":"Checkbox.getAPIList","kind":"function","___id":"T000002R000040","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getAPIList","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Checkbox.html\">Checkbox</a>."]},{"comment":"/**\n     * Disable this module\n     */","meta":{"range":[1452,1626],"filename":"checkbox.js","lineno":62,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100000267","name":"destroy","type":"FunctionExpression"},"vars":{"tree":"Checkbox#destroy~tree","":null},"shortpath":"file"},"description":"<p>Disable this module</p>","name":"destroy","longname":"Checkbox#destroy","kind":"function","memberof":"Checkbox","scope":"instance","___id":"T000002R000048","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"destroy","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Checkbox.html\">Checkbox</a>#"]}]},{"comment":"/**\n * Set the tree draggable\n * @class Draggable\n * @constructor\n * @param {Tree} tree - Tree\n * @param {Object} options - Options\n *  @param {boolean} options.useHelper - Using helper flag\n *  @param {{x: number, y:number}} options.helperPos - Helper position\n *  @param {Array.<string>} options.rejectedTagNames - No draggable tag names\n *  @param {Array.<string>} options.rejectedClassNames - No draggable class names\n */","meta":{"range":[731,5911],"filename":"draggable.js","lineno":30,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001275","name":"Draggable","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Set the tree draggable</p>","kind":"class","classdesc":"<p>Draggable</p>","params":[{"type":{"names":["Tree"]},"description":"<p>Tree</p>","name":"tree"},{"type":{"names":["Object"]},"description":"<p>Options</p>","name":"options"},{"type":{"names":["boolean"]},"description":"<p>Using helper flag</p>","name":"options.useHelper"},{"type":{"names":["Object"]},"description":"<p>Helper position</p>","name":"options.helperPos"},{"type":{"names":["Array.<string>"]},"description":"<p>No draggable tag names</p>","name":"options.rejectedTagNames"},{"type":{"names":["Array.<string>"]},"description":"<p>No draggable class names</p>","name":"options.rejectedClassNames"}],"name":"Draggable","longname":"Draggable","scope":"global","___id":"T000002R000144","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Draggable","signature":"<span class=\"signature\">(tree, options)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n     * Attach mouse down event\n     */","meta":{"range":[2115,2246],"filename":"draggable.js","lineno":74,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001433","name":"attachMousedown","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Attach mouse down event</p>","name":"attachMousedown","longname":"Draggable#attachMousedown","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000163","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"attachMousedown","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Disable this module\n     */","meta":{"range":[5812,5908],"filename":"draggable.js","lineno":203,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001866","name":"destroy","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Disable this module</p>","name":"destroy","longname":"Draggable#destroy","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000201","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"destroy","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Detach mousedown event\n     */","meta":{"range":[5698,5762],"filename":"draggable.js","lineno":196,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001855","name":"detachMousedown","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Detach mousedown event</p>","name":"detachMousedown","longname":"Draggable#detachMousedown","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000200","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"detachMousedown","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Return whether the target element is in rejectedTagNames or in rejectedClassNames\n     * @param {HTMLElement} target - Target element\n     * @returns {boolean} Whether the target is not draggable or draggable\n     */","meta":{"range":[3002,3474],"filename":"draggable.js","lineno":99,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001513","name":"isNotDraggable","type":"FunctionExpression"},"vars":{"tagName":"Draggable#isNotDraggable~tagName","classNames":"Draggable#isNotDraggable~classNames","result":"Draggable#isNotDraggable~result","":null},"shortpath":"file"},"description":"<p>Return whether the target element is in rejectedTagNames or in rejectedClassNames</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>Target element</p>","name":"target"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether the target is not draggable or draggable</p>"}],"name":"isNotDraggable","longname":"Draggable#isNotDraggable","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000171","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isNotDraggable","signature":"<span class=\"signature\">(target)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Event handler - mousedown\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[3577,4168],"filename":"draggable.js","lineno":120,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001581","name":"onMousedown","type":"FunctionExpression"},"vars":{"target":"Draggable#onMousedown~target","nodeId":"Draggable#onMousedown~nodeId","this.currentNodeId":"Draggable#currentNodeId"},"shortpath":"file"},"description":"<p>Event handler - mousedown</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onMousedown","longname":"Draggable#onMousedown","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000176","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onMousedown","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Event handler - mousemove\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[4271,4671],"filename":"draggable.js","lineno":146,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001669","name":"onMousemove","type":"FunctionExpression"},"vars":{"helperEl":"Draggable#onMousemove~helperEl","pos":"Draggable#onMousemove~pos","helperEl.style.top":"Draggable#onMousemove~helperEl.style.top","helperEl.style.left":"Draggable#onMousemove~helperEl.style.left","helperEl.style.display":"Draggable#onMousemove~helperEl.style.display"},"shortpath":"file"},"description":"<p>Event handler - mousemove</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onMousemove","longname":"Draggable#onMousemove","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000184","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onMousemove","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Event handler - mouseup\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[4772,5143],"filename":"draggable.js","lineno":162,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001746","name":"onMouseup","type":"FunctionExpression"},"vars":{"tree":"Draggable#onMouseup~tree","target":"Draggable#onMouseup~target","nodeId":"Draggable#onMouseup~nodeId","this.helperElement.style.display":"Draggable#helperElement.style.display","this.currentNodeId":"Draggable#currentNodeId"},"shortpath":"file"},"description":"<p>Event handler - mouseup</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onMouseup","longname":"Draggable#onMouseup","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000190","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onMouseup","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Prevent text-selection\n     */","meta":{"range":[2299,2763],"filename":"draggable.js","lineno":82,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001453","name":"preventTextSelection","type":"FunctionExpression"},"vars":{"tree":"Draggable#preventTextSelection~tree","selectKey":"Draggable#preventTextSelection~selectKey","style":"Draggable#preventTextSelection~style","this.userSelectPropertyKey":"Draggable#userSelectPropertyKey","this.userSelectPropertyValue":"Draggable#userSelectPropertyValue","style[undefined]":"Draggable#preventTextSelection~style.undefined]"},"shortpath":"file"},"description":"<p>Prevent text-selection</p>","name":"preventTextSelection","longname":"Draggable#preventTextSelection","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000164","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"preventTextSelection","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Restore text-selection\n     */","meta":{"range":[5196,5471],"filename":"draggable.js","lineno":178,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001809","name":"restoreTextSelection","type":"FunctionExpression"},"vars":{"tree.rootElement.style[undefined]":"tree.rootElement.style[undefined]"},"shortpath":"file"},"description":"<p>Restore text-selection</p>","name":"restoreTextSelection","longname":"Draggable#restoreTextSelection","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000196","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"restoreTextSelection","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Set helper contents\n     * @param {string} text - Helper contents\n     */","meta":{"range":[5567,5645],"filename":"draggable.js","lineno":189,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001843","name":"setHelper","type":"FunctionExpression"},"vars":{"this.helperElement.innerHTML":"Draggable#helperElement.innerHTML"},"shortpath":"file"},"description":"<p>Set helper contents</p>","params":[{"type":{"names":["string"]},"description":"<p>Helper contents</p>","name":"text"}],"name":"setHelper","longname":"Draggable#setHelper","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000198","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setHelper","signature":"<span class=\"signature\">(text)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]},{"comment":"/**\n     * Set members of this module\n     * @param {Object} options - input options\n     */","meta":{"range":[1308,2061],"filename":"draggable.js","lineno":52,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001316","name":"setMembers","type":"FunctionExpression"},"vars":{"helperElement":"Draggable#setMembers~helperElement","style":"Draggable#setMembers~style","options":"Draggable#setMembers~options","this.useHelper":"Draggable#useHelper","this.helperPos":"Draggable#helperPos","this.rejectedTagNames":"Draggable#rejectedTagNames","this.rejectedClassNames":"Draggable#rejectedClassNames","this.helperElement":"Draggable#helperElement","this.userSelectPropertyKey":"Draggable#userSelectPropertyKey","this.userSelectPropertyValue":"Draggable#userSelectPropertyValue","this.currentNodeId":"Draggable#currentNodeId","style.position":"Draggable#setMembers~style.position","style.display":"Draggable#setMembers~style.display"},"shortpath":"file"},"description":"<p>Set members of this module</p>","params":[{"type":{"names":["Object"]},"description":"<p>input options</p>","name":"options"}],"name":"setMembers","longname":"Draggable#setMembers","kind":"function","memberof":"Draggable","scope":"instance","___id":"T000002R000149","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setMembers","signature":"<span class=\"signature\">(options)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Draggable.html\">Draggable</a>#"]}]},{"comment":"/**\n * Set the tree selectable\n * @class Editable\n * @constructor\n * @param {Tree} tree - Tree\n * @param {Object} options - Options\n *  @param {string} options.editableClassName - Classname of editable element\n *  @param {string} options.dataKey - Key of node data to set value\n *  @param {string} options.inputClassName - Classname of input element\n */","meta":{"range":[427,3778],"filename":"editable.js","lineno":17,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001899","name":"Editable","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Set the tree selectable</p>","kind":"class","classdesc":"<p>Editable</p>","params":[{"type":{"names":["Tree"]},"description":"<p>Tree</p>","name":"tree"},{"type":{"names":["Object"]},"description":"<p>Options</p>","name":"options"},{"type":{"names":["string"]},"description":"<p>Classname of editable element</p>","name":"options.editableClassName"},{"type":{"names":["string"]},"description":"<p>Key of node data to set value</p>","name":"options.dataKey"},{"type":{"names":["string"]},"description":"<p>Classname of input element</p>","name":"options.inputClassName"}],"name":"Editable","longname":"Editable","scope":"global","___id":"T000002R000205","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Editable","signature":"<span class=\"signature\">(tree, options)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n     * Create input element\n     * @param {string} inputClassName - Classname of input element\n     * @returns {HTMLElement} Input element\n     */","meta":{"range":[2137,2383],"filename":"editable.js","lineno":70,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002095","name":"createInputElement","type":"FunctionExpression"},"vars":{"el":"Editable#createInputElement~el","el.className":"Editable#createInputElement~el.className"},"shortpath":"file"},"description":"<p>Create input element</p>","params":[{"type":{"names":["string"]},"description":"<p>Classname of input element</p>","name":"inputClassName"}],"returns":[{"type":{"names":["HTMLElement"]},"description":"<p>Input element</p>"}],"name":"createInputElement","longname":"Editable#createInputElement","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000220","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"createInputElement","signature":"<span class=\"signature\">(inputClassName)</span><span class=\"type-signature\"> &rarr; {HTMLElement}</span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Disable this module\n     */","meta":{"range":[1719,1975],"filename":"editable.js","lineno":58,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002055","name":"destroy","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Disable this module</p>","name":"destroy","longname":"Editable#destroy","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000219","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"destroy","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Detach input element from document\n     */","meta":{"range":[1458,1669],"filename":"editable.js","lineno":46,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002032","name":"detachInputFromDocument","type":"FunctionExpression"},"vars":{"inputEl":"Editable#detachInputFromDocument~inputEl","parentNode":"Editable#detachInputFromDocument~parentNode"},"shortpath":"file"},"description":"<p>Detach input element from document</p>","name":"detachInputFromDocument","longname":"Editable#detachInputFromDocument","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000216","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"detachInputFromDocument","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Event handler: blur - input element\n     */","meta":{"range":[3334,3384],"filename":"editable.js","lineno":113,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002224","name":"onBlur","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Event handler: blur - input element</p>","name":"onBlur","longname":"Editable#onBlur","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000233","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onBlur","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Custom event handler \"doubleClick\"\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[2495,3038],"filename":"editable.js","lineno":84,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002125","name":"onDoubleClick","type":"FunctionExpression"},"vars":{"tree":"Editable#onDoubleClick~tree","target":"Editable#onDoubleClick~target","inputElement":"Editable#onDoubleClick~inputElement","nodeId":"Editable#onDoubleClick~nodeId","inputElement.value":"Editable#onDoubleClick~inputElement.value","target.style.display":"Editable#onDoubleClick~target.style.display"},"shortpath":"file"},"description":"<p>Custom event handler &quot;doubleClick&quot;</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onDoubleClick","longname":"Editable#onDoubleClick","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000223","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onDoubleClick","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Event handler: keyup - input element\n     * @param {Event} event - Key event\n     */","meta":{"range":[3145,3268],"filename":"editable.js","lineno":104,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002208","name":"onKeyup","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Event handler: keyup - input element</p>","params":[{"type":{"names":["Event"]},"description":"<p>Key event</p>","name":"event"}],"name":"onKeyup","longname":"Editable#onKeyup","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000232","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onKeyup","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]},{"comment":"/**\n     * Set data of input element to node and detach input element from doc.\n     */","meta":{"range":[3483,3775],"filename":"editable.js","lineno":120,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002232","name":"setData","type":"FunctionExpression"},"vars":{"nodeId":"Editable#setData~nodeId","data":"Editable#setData~data","data[undefined]":"Editable#setData~data.undefined]"},"shortpath":"file"},"description":"<p>Set data of input element to node and detach input element from doc.</p>","name":"setData","longname":"Editable#setData","kind":"function","memberof":"Editable","scope":"instance","___id":"T000002R000234","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setData","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Editable.html\">Editable</a>#"]}]},{"comment":"/**\n * Set the tree selectable\n * @class Selectable\n * @constructor\n * @param {Tree} tree - Tree\n * @param {Object} options\n *  @param {string} options.selectedClassName - Classname for selected node.\n */","meta":{"range":[371,4910],"filename":"selectable.js","lineno":20,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002301","name":"Selectable","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Set the tree selectable</p>","kind":"class","classdesc":"<p>Selectable</p>","params":[{"type":{"names":["Tree"]},"description":"<p>Tree</p>","name":"tree"},{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["string"]},"description":"<p>Classname for selected node.</p>","name":"options.selectedClassName"}],"name":"Selectable","longname":"Selectable","scope":"global","___id":"T000002R000243","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Selectable","signature":"<span class=\"signature\">(tree, options)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n         * @static\n         * @memberOf Selectable\n         * @returns {Array.<string>} API list of Draggable\n         */","meta":{"range":[973,1044],"filename":"draggable.js","lineno":37,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001286","name":"getAPIList","type":"FunctionExpression"},"shortpath":"file"},"scope":"static","memberof":"Selectable","returns":[{"type":{"names":["Array.<string>"]},"description":"<p>API list of Draggable</p>"}],"name":"getAPIList","longname":"Selectable.getAPIList","kind":"function","___id":"T000002R000146","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getAPIList","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>."]},{"comment":"/**\n         * @static\n         * @memberOf Selectable\n         * @returns {Array.<string>} API list of Selectable\n         */","meta":{"range":[616,687],"filename":"selectable.js","lineno":27,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002312","name":"getAPIList","type":"FunctionExpression"},"shortpath":"file"},"scope":"static","memberof":"Selectable","returns":[{"type":{"names":["Array.<string>"]},"description":"<p>API list of Selectable</p>"}],"name":"getAPIList","longname":"Selectable.getAPIList","kind":"function","___id":"T000002R000245","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getAPIList","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>."]},{"comment":"/**\n         * @static\n         * @memberOf Selectable\n         * @returns {Array.<string>} API list of Editable\n         */","meta":{"range":[666,737],"filename":"editable.js","lineno":24,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001910","name":"getAPIList","type":"FunctionExpression"},"shortpath":"file"},"scope":"static","memberof":"Selectable","returns":[{"type":{"names":["Array.<string>"]},"description":"<p>API list of Editable</p>"}],"name":"getAPIList","longname":"Selectable.getAPIList","kind":"function","___id":"T000002R000207","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getAPIList","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>."]},{"comment":"/**\n     * Disable this module\n     */","meta":{"range":[1391,1686],"filename":"selectable.js","lineno":60,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002410","name":"destroy","type":"FunctionExpression"},"vars":{"tree":"Selectable#destroy~tree","nodeElement":"Selectable#destroy~nodeElement","":null},"shortpath":"file"},"description":"<p>Disable this module</p>","name":"destroy","longname":"Selectable#destroy","kind":"function","memberof":"Selectable","scope":"instance","___id":"T000002R000256","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"destroy","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>#"]},{"comment":"/**\n     * Get previous selected node element\n     * @returns {HTMLElement} Node element\n     */","meta":{"range":[4569,4660],"filename":"selectable.js","lineno":155,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002577","name":"getPrevElement","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get previous selected node element</p>","returns":[{"type":{"names":["HTMLElement"]},"description":"<p>Node element</p>"}],"name":"getPrevElement","longname":"Selectable#getPrevElement","kind":"function","memberof":"Selectable","scope":"instance","___id":"T000002R000276","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getPrevElement","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {HTMLElement}</span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>#"]},{"comment":"/**\n     * Custom event handler - \"afterDraw\"\n     */","meta":{"range":[4725,4907],"filename":"selectable.js","lineno":162,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002588","name":"onAfterDraw","type":"FunctionExpression"},"vars":{"nodeElement":"Selectable#onAfterDraw~nodeElement"},"shortpath":"file"},"description":"<p>Custom event handler - &quot;afterDraw&quot;</p>","name":"onAfterDraw","longname":"Selectable#onAfterDraw","kind":"function","memberof":"Selectable","scope":"instance","___id":"T000002R000277","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onAfterDraw","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>#"]},{"comment":"/**\n     * Custom event handler \"singleClick\"\n     * @param {MouseEvent} event - Mouse event\n     */","meta":{"range":[1798,1979],"filename":"selectable.js","lineno":75,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002456","name":"onSingleClick","type":"FunctionExpression"},"vars":{"target":"Selectable#onSingleClick~target","nodeId":"Selectable#onSingleClick~nodeId"},"shortpath":"file"},"description":"<p>Custom event handler &quot;singleClick&quot;</p>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>Mouse event</p>","name":"event"}],"name":"onSingleClick","longname":"Selectable#onSingleClick","kind":"function","memberof":"Selectable","scope":"instance","___id":"T000002R000259","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"onSingleClick","signature":"<span class=\"signature\">(event)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Selectable.html\">Selectable</a>#"]}]},{"comment":"/**\r\n * Create tree model and inject data to model\r\n * @class Tree\r\n * @constructor\r\n * @mixes tui.util.CustomEvents\r\n * @param {Object} data A data to be used on tree\r\n * @param {Object} options The options\r\n *     @param {HTMLElement} [options.rootElement] Root element (It should be 'UL' element)\r\n *     @param {string} [options.nodeIdPrefix] A default prefix of a node\r\n *     @param {Object} [options.nodeDefaultState] A default state of a node\r\n *     @param {Object} [options.template] A markup set to make element\r\n *         @param {string} [options.template.internalNode] HTML template\r\n *         @param {string} [options.template.leafNode] HTML template\r\n *     @param {Object} [options.stateLabels] Toggle button state label\r\n *         @param {string} [options.stateLabels.opened] State-OPENED label (Text or HTML)\r\n *         @param {string} [options.stateLabels.closed] State-CLOSED label (Text or HTML)\r\n *     @param {Object} [options.classNames] Class names for tree\r\n *         @param {string} [options.classNames.nodeClass] A class name for node\r\n *         @param {string} [options.classNames.leafClass] A class name for leaf node\r\n *         @param {string} [options.classNames.openedClass] A class name for opened node\r\n *         @param {string} [options.classNames.closedClass] A class name for closed node\r\n *         @param {string} [options.classNames.textClass] A class name that for textElement in node\r\n *         @param {string} [options.classNames.subtreeClass] A class name for subtree in internal node\r\n *         @param {string} [options.classNames.toggleBtnClass] A class name for toggle button in internal node\r\n *     @param {Function} [options.renderTemplate] Function for rendering template\r\n * @example\r\n * //Default options:\r\n * // {\r\n * //     nodeIdPrefix: 'tui-tree-node-'\r\n * //     nodeDefaultState: 'closed',\r\n * //     stateLabels: {\r\n * //         opened: '-',\r\n * //         closed: '+'\r\n * //     },\r\n * //     classNames: {\r\n * //         nodeClass: 'tui-tree-node',\r\n * //         leafClass: 'tui-tree-leaf',\r\n * //         openedClass: 'tui-tree-opened',\r\n * //         closedClass: 'tui-tree-closed',\r\n * //         subtreeClass: 'tui-tree-subtree',\r\n * //         toggleBtnClass: 'tui-tree-toggleBtn',\r\n * //         textClass: 'tui-tree-text',\r\n * //     },\r\n * //     template: {\r\n * //         internalNode:\r\n * //             '<button type=\"button\" class=\"{{toggleBtnClass}}\">{{stateLabel}}</button>' +\r\n * //             '<span class=\"{{textClass}}\">{{text}}</span>' +\r\n * //             '<ul class=\"{{subtreeClass}}\">{{children}}</ul>'\r\n * //         leafNode:\r\n * //             '<span class=\"{{textClass}}\">{{text}}</span>' +\r\n * //     }\r\n * // }\r\n * //\r\n *\r\n * var data = [\r\n *     {text: 'rootA', children: [\r\n *         {text: 'root-1A'},\r\n *         {text: 'root-1B'},\r\n *         {text: 'root-1C'},\r\n *         {text: 'root-1D'},\r\n *         {text: 'root-2A', children: [\r\n *             {text:'sub_1A', children:[\r\n *                 {text:'sub_sub_1A'}\r\n *             ]},\r\n *             {text:'sub_2A'}\r\n *         ]},\r\n *         {text: 'root-2B'},\r\n *         {text: 'root-2C'},\r\n *         {text: 'root-2D'},\r\n *         {text: 'root-3A', children: [\r\n *             {text:'sub3_a'},\r\n *             {text:'sub3_b'}\r\n *         ]},\r\n *         {text: 'root-3B'},\r\n *         {text: 'root-3C'},\r\n *         {text: 'root-3D'}\r\n *     ]},\r\n *     {text: 'rootB', children: [\r\n *         {text:'B_sub1'},\r\n *         {text:'B_sub2'},\r\n *         {text:'b'}\r\n *     ]}\r\n * ];\r\n *\r\n * var tree1 = new tui.component.Tree(data, {\r\n *     rootElement: 'treeRoot', // or document.getElementById('treeRoot')\r\n *     nodeDefaultState: 'opened',\r\n *\r\n *     // ========= Option: Override template renderer ===========\r\n *\r\n *     template: { // template for Mustache engine\r\n *         internalNode:\r\n *             '<button type=\"button\" class=\"{{toggleBtnClass}}\">{{{stateLabel}}}</button>' +\r\n *             '<span class=\"{{textClass}}\">{{{text}}}</span>' +\r\n *             '<ul class=\"{{subtreeClass}}\">{{{children}}}</ul>'\r\n *         leafNode:\r\n *             '<span class=\"{{textClass}}\">{{{text}}}</span>' +\r\n *     },\r\n *     renderTemplate: function(source, props) {\r\n *         // Mustache template engine\r\n *         return Mustache.render(template, props);\r\n *     }\r\n * });\r\n **/","meta":{"range":[5297,33130],"filename":"tree.js","lineno":134,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002704","name":"Tree","type":"CallExpression","value":""},"shortpath":"file"},"description":"<p>Create tree model and inject data to model</p>","kind":"class","classdesc":"<p>Tree</p>","mixes":["tui.util.CustomEvents"],"params":[{"type":{"names":["Object"]},"description":"<p>A data to be used on tree</p>","name":"data"},{"type":{"names":["Object"]},"description":"<p>The options</p>","name":"options"},{"type":{"names":["HTMLElement"]},"optional":true,"description":"<p>Root element (It should be 'UL' element)</p>","name":"options.rootElement"},{"type":{"names":["string"]},"optional":true,"description":"<p>A default prefix of a node</p>","name":"options.nodeIdPrefix"},{"type":{"names":["Object"]},"optional":true,"description":"<p>A default state of a node</p>","name":"options.nodeDefaultState"},{"type":{"names":["Object"]},"optional":true,"description":"<p>A markup set to make element</p>","name":"options.template"},{"type":{"names":["string"]},"optional":true,"description":"<p>HTML template</p>","name":"options.template.internalNode"},{"type":{"names":["string"]},"optional":true,"description":"<p>HTML template</p>","name":"options.template.leafNode"},{"type":{"names":["Object"]},"optional":true,"description":"<p>Toggle button state label</p>","name":"options.stateLabels"},{"type":{"names":["string"]},"optional":true,"description":"<p>State-OPENED label (Text or HTML)</p>","name":"options.stateLabels.opened"},{"type":{"names":["string"]},"optional":true,"description":"<p>State-CLOSED label (Text or HTML)</p>","name":"options.stateLabels.closed"},{"type":{"names":["Object"]},"optional":true,"description":"<p>Class names for tree</p>","name":"options.classNames"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for node</p>","name":"options.classNames.nodeClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for leaf node</p>","name":"options.classNames.leafClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for opened node</p>","name":"options.classNames.openedClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for closed node</p>","name":"options.classNames.closedClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name that for textElement in node</p>","name":"options.classNames.textClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for subtree in internal node</p>","name":"options.classNames.subtreeClass"},{"type":{"names":["string"]},"optional":true,"description":"<p>A class name for toggle button in internal node</p>","name":"options.classNames.toggleBtnClass"},{"type":{"names":["function"]},"optional":true,"description":"<p>Function for rendering template</p>","name":"options.renderTemplate"}],"examples":[{"caption":"","code":"//Default options:\r// {\r//     nodeIdPrefix: 'tui-tree-node-'\r//     nodeDefaultState: 'closed',\r//     stateLabels: {\r//         opened: '-',\r//         closed: '+'\r//     },\r//     classNames: {\r//         nodeClass: 'tui-tree-node',\r//         leafClass: 'tui-tree-leaf',\r//         openedClass: 'tui-tree-opened',\r//         closedClass: 'tui-tree-closed',\r//         subtreeClass: 'tui-tree-subtree',\r//         toggleBtnClass: 'tui-tree-toggleBtn',\r//         textClass: 'tui-tree-text',\r//     },\r//     template: {\r//         internalNode:\r//             '<button type=\"button\" class=\"{{toggleBtnClass}}\">{{stateLabel}}</button>' +\r//             '<span class=\"{{textClass}}\">{{text}}</span>' +\r//             '<ul class=\"{{subtreeClass}}\">{{children}}</ul>'\r//         leafNode:\r//             '<span class=\"{{textClass}}\">{{text}}</span>' +\r//     }\r// }\r//\r\rvar data = [\r    {text: 'rootA', children: [\r        {text: 'root-1A'},\r        {text: 'root-1B'},\r        {text: 'root-1C'},\r        {text: 'root-1D'},\r        {text: 'root-2A', children: [\r            {text:'sub_1A', children:[\r                {text:'sub_sub_1A'}\r            ]},\r            {text:'sub_2A'}\r        ]},\r        {text: 'root-2B'},\r        {text: 'root-2C'},\r        {text: 'root-2D'},\r        {text: 'root-3A', children: [\r            {text:'sub3_a'},\r            {text:'sub3_b'}\r        ]},\r        {text: 'root-3B'},\r        {text: 'root-3C'},\r        {text: 'root-3D'}\r    ]},\r    {text: 'rootB', children: [\r        {text:'B_sub1'},\r        {text:'B_sub2'},\r        {text:'b'}\r    ]}\r];\r\rvar tree1 = new tui.component.Tree(data, {\r    rootElement: 'treeRoot', // or document.getElementById('treeRoot')\r    nodeDefaultState: 'opened',\r\r    // ========= Option: Override template renderer ===========\r\r    template: { // template for Mustache engine\r        internalNode:\r            '<button type=\"button\" class=\"{{toggleBtnClass}}\">{{{stateLabel}}}</button>' +\r            '<span class=\"{{textClass}}\">{{{text}}}</span>' +\r            '<ul class=\"{{subtreeClass}}\">{{{children}}}</ul>'\r        leafNode:\r            '<span class=\"{{textClass}}\">{{{text}}}</span>' +\r    },\r    renderTemplate: function(source, props) {\r        // Mustache template engine\r        return Mustache.render(template, props);\r    }\r});"}],"name":"Tree","longname":"Tree","scope":"global","___id":"T000002R000301","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"Tree","signature":"<span class=\"signature\">(data, options)</span><span class=\"type-signature\"></span>","ancestors":[],"members":[{"comment":"/**\r\n         * To prevent click event if mouse moved before mouseup.\r\n         * @type {number}\r\n         */","meta":{"range":[6735,6764],"filename":"tree.js","lineno":184,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002790","name":"this._mouseMovingFlag","type":"Literal","value":false,"paramnames":[]},"shortpath":"file"},"description":"<p>To prevent click event if mouse moved before mouseup.</p>","type":{"names":["number"]},"name":"_mouseMovingFlag","longname":"Tree#_mouseMovingFlag","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000311","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_mouseMovingFlag","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :number</span>"},{"comment":"/**\r\n         * Default class names\r\n         * @type {object.<string, string>}\r\n         */","meta":{"range":[5596,5670],"filename":"tree.js","lineno":142,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002725","name":"this.classNames","type":"CallExpression","value":"","paramnames":[]},"shortpath":"file"},"description":"<p>Default class names</p>","type":{"names":["object.<string, string>"]},"name":"classNames","longname":"Tree#classNames","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000304","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"classNames","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :object.&lt;string, string></span>"},{"comment":"/**\r\n         * Click timer to prevent click-duplication with double click\r\n         * @type {number}\r\n         */","meta":{"range":[6581,6603],"filename":"tree.js","lineno":178,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002784","name":"this.clickTimer","type":"Literal","value":null,"paramnames":[]},"shortpath":"file"},"description":"<p>Click timer to prevent click-duplication with double click</p>","type":{"names":["number"]},"name":"clickTimer","longname":"Tree#clickTimer","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000310","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"clickTimer","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :number</span>"},{"comment":"/**\r\n         * Enabled features\r\n         * @type {Object.<string, object>}\r\n         */","meta":{"range":[6419,6444],"filename":"tree.js","lineno":172,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002778","name":"this.enabledFeatures","type":"ObjectExpression","value":"{}","paramnames":[]},"shortpath":"file"},"description":"<p>Enabled features</p>","type":{"names":["Object.<string, object>"]},"name":"enabledFeatures","longname":"Tree#enabledFeatures","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000309","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"enabledFeatures","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :Object.&lt;string, object></span>"},{"comment":"/**\r\n         * True when a node is moving\r\n         * @api\r\n         * @type {boolean}\r\n         * @example\r\n         * tree.on({\r\n         *     beforeDraw: function(nodeId) {\r\n         *         if (tree.isMovingNode) {\r\n         *             return;\r\n         *         }\r\n         *         //..\r\n         *     },\r\n         *     //....\r\n         * });\r\n         * tree.move('tui-tree-node-1', 'tui-tree-node-2');\r\n         */","meta":{"range":[7463,7488],"filename":"tree.js","lineno":210,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002808","name":"this.isMovingNode","type":"Literal","value":false,"paramnames":[]},"shortpath":"file"},"description":"<p>True when a node is moving</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"type":{"names":["boolean"]},"examples":[{"caption":"","code":"tree.on({\r    beforeDraw: function(nodeId) {\r        if (tree.isMovingNode) {\r            return;\r        }\r        //..\r    },\r    //....\r});\rtree.move('tui-tree-node-1', 'tui-tree-node-2');"}],"name":"isMovingNode","longname":"Tree#isMovingNode","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000313","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isMovingNode","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :boolean</span>"},{"comment":"/**\r\n         * Make tree model\r\n         * @type {TreeModel}\r\n         */","meta":{"range":[6266,6307],"filename":"tree.js","lineno":166,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002769","name":"this.model","type":"NewExpression","value":"","paramnames":[]},"shortpath":"file"},"description":"<p>Make tree model</p>","type":{"names":["TreeModel"]},"name":"model","longname":"Tree#model","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000308","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"model","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :<a target=\"body\" href=\"TreeModel.html\">TreeModel</a></span>"},{"comment":"/**\r\n         * Root element\r\n         * @type {HTMLElement}\r\n         */","meta":{"range":[5963,6001],"filename":"tree.js","lineno":154,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002753","name":"this.rootElement","type":"MemberExpression","value":"options.rootElement","paramnames":[]},"shortpath":"file"},"description":"<p>Root element</p>","type":{"names":["HTMLElement"]},"name":"rootElement","longname":"Tree#rootElement","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000306","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"rootElement","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :HTMLElement</span>"},{"comment":"/**\r\n         * Toggle button state label\r\n         * @type {{opened: string, closed: string}}\r\n         */","meta":{"range":[6131,6169],"filename":"tree.js","lineno":160,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002761","name":"this.stateLabels","type":"MemberExpression","value":"options.stateLabels","paramnames":[]},"shortpath":"file"},"description":"<p>Toggle button state label</p>","type":{"names":["Object"]},"name":"stateLabels","longname":"Tree#stateLabels","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000307","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"stateLabels","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :Object</span>"},{"comment":"/**\r\n         * Default template\r\n         * @type {{internalNode: string, leafNode: string}}\r\n         */","meta":{"range":[5799,5867],"filename":"tree.js","lineno":148,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100002739","name":"this.template","type":"CallExpression","value":"","paramnames":[]},"shortpath":"file"},"description":"<p>Default template</p>","type":{"names":["Object"]},"name":"template","longname":"Tree#template","kind":"member","memberof":"Tree","scope":"instance","___id":"T000002R000305","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"template","ancestors":["<a href=\"Tree.html\">Tree</a>#"],"signature":"<span class=\"type-signature\"> :Object</span>"}],"methods":[{"comment":"/**\r\n     * Add node(s).\r\n     * - If the parentId is falsy, the node will be appended to rootNode.\r\n     * - If 'isSilent' is not true, it redraws the tree\r\n     * @api\r\n     * @param {Array|object} data - Raw-data\r\n     * @param {*} parentId - Parent id\r\n     * @param {boolean} [isSilent] - If true, it doesn't redraw children\r\n     * @returns {Array.<string>} Added node ids\r\n     * @example\r\n     * // add node with redrawing\r\n     * var firstAddedIds = tree.add({text:'FE development team1'}, parentId);\r\n     * console.log(firstAddedIds); // [\"tui-tree-node-10\"]\r\n     *\r\n     * // add node without redrawing\r\n     * var secondAddedIds = tree.add([\r\n     *    {text: 'FE development team2'},\r\n     *    {text: 'FE development team3'}\r\n     * ], parentId, true);\r\n     * console.log(secondAddedIds); // [\"tui-tree-node-11\", \"tui-tree-node-12\"]\r\n     */","meta":{"range":[27126,27232],"filename":"tree.js","lineno":875,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004234","name":"add","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Add node(s).</p>\n<ul>\n<li>If the parentId is falsy, the node will be appended to rootNode.</li>\n<li>If 'isSilent' is not true, it redraws the tree</li>\n</ul>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["Array","object"]},"description":"<p>Raw-data</p>","name":"data"},{"type":{"names":["*"]},"description":"<p>Parent id</p>","name":"parentId"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't redraw children</p>","name":"isSilent"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Added node ids</p>"}],"examples":[{"caption":"","code":"// add node with redrawing\rvar firstAddedIds = tree.add({text:'FE development team1'}, parentId);\rconsole.log(firstAddedIds); // [\"tui-tree-node-10\"]\r\r// add node without redrawing\rvar secondAddedIds = tree.add([\r   {text: 'FE development team2'},\r   {text: 'FE development team3'}\r], parentId, true);\rconsole.log(secondAddedIds); // [\"tui-tree-node-11\", \"tui-tree-node-12\"]"}],"name":"add","longname":"Tree#add","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000449","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"add","signature":"<span class=\"signature\">(data, parentId, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Check node\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.check(nodeId);\n     */","meta":{"range":[10271,10402],"filename":"checkbox.js","lineno":366,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100000961","name":"check","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Check node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.check(nodeId);"}],"name":"check","longname":"Tree#check","kind":"function","scope":"instance","___id":"T000002R000111","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"check","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Close node\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     */","meta":{"range":[23349,23615],"filename":"tree.js","lineno":753,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004078","name":"close","type":"FunctionExpression"},"vars":{"node":"Tree#close~node","state":"Tree#close~state"},"shortpath":"file"},"description":"<p>Close node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"name":"close","longname":"Tree#close","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000437","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"close","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Whether a node is a ancestor of another node.\r\n     * @api\r\n     * @param {string} containerNodeId - Id of a node that may contain the other node\r\n     * @param {string} containedNodeId - Id of a node that may be contained by the other node\r\n     * @returns {boolean} Whether a node contains another node\r\n     */","meta":{"range":[31219,31351],"filename":"tree.js","lineno":1002,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004429","name":"contains","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Whether a node is a ancestor of another node.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Id of a node that may contain the other node</p>","name":"containerNodeId"},{"type":{"names":["string"]},"description":"<p>Id of a node that may be contained by the other node</p>","name":"containedNodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether a node contains another node</p>"}],"name":"contains","longname":"Tree#contains","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000463","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"contains","signature":"<span class=\"signature\">(containerNodeId, containedNodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Disable facility of tree\r\n     * @api\r\n     * @param {string} featureName - 'Selectable', 'Draggable', 'Editable'\r\n     * @returns {Tree} this\r\n     * @example\r\n     * tree\r\n     *  .disableFeature('Selectable')\r\n     *  .disableFeature('Draggable')\r\n     *  .disableFeature('Editable')\r\n     *  .disableFeature('Checkbox');\r\n     */","meta":{"range":[32877,33126],"filename":"tree.js","lineno":1054,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004476","name":"disableFeature","type":"FunctionExpression"},"vars":{"feature":"Tree#disableFeature~feature"},"shortpath":"file"},"description":"<p>Disable facility of tree</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>'Selectable', 'Draggable', 'Editable'</p>","name":"featureName"}],"returns":[{"type":{"names":["Tree"]},"description":"<p>this</p>"}],"examples":[{"caption":"","code":"tree\r .disableFeature('Selectable')\r .disableFeature('Draggable')\r .disableFeature('Editable')\r .disableFeature('Checkbox');"}],"name":"disableFeature","longname":"Tree#disableFeature","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000467","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"disableFeature","signature":"<span class=\"signature\">(featureName)</span><span class=\"type-signature\"> &rarr; {<a target=\"body\" href=\"Tree.html\">Tree</a>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Traverse this tree iterating over all descendants of a node.\r\n     * @api\r\n     * @param {Function} iteratee - Iteratee function\r\n     * @param {string} parentId - Parent node id\r\n     * @param {object} [context] - Context of iteratee\r\n     * @example\r\n     * tree.each(function(node, nodeId) {\r\n     *     console.log(node.getId() === nodeId); // true\r\n     * }, parentId);\r\n     *\r\n     */","meta":{"range":[26146,26253],"filename":"tree.js","lineno":850,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004218","name":"each","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Traverse this tree iterating over all descendants of a node.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["function"]},"description":"<p>Iteratee function</p>","name":"iteratee"},{"type":{"names":["string"]},"description":"<p>Parent node id</p>","name":"parentId"},{"type":{"names":["object"]},"optional":true,"description":"<p>Context of iteratee</p>","name":"context"}],"examples":[{"caption":"","code":"tree.each(function(node, nodeId) {\r    console.log(node.getId() === nodeId); // true\r}, parentId);"}],"name":"each","longname":"Tree#each","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000448","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"each","signature":"<span class=\"signature\">(iteratee, parentId, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Traverse this tree iterating over all nodes.\r\n     * @api\r\n     * @param {Function} iteratee - Iteratee function\r\n     * @param {object} [context] - Context of iteratee\r\n     * @example\r\n     * tree.eachAll(function(node, nodeId) {\r\n     *     console.log(node.getId() === nodeId); // true\r\n     * });\r\n     */","meta":{"range":[25635,25728],"filename":"tree.js","lineno":834,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004204","name":"eachAll","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Traverse this tree iterating over all nodes.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["function"]},"description":"<p>Iteratee function</p>","name":"iteratee"},{"type":{"names":["object"]},"optional":true,"description":"<p>Context of iteratee</p>","name":"context"}],"examples":[{"caption":"","code":"tree.eachAll(function(node, nodeId) {\r    console.log(node.getId() === nodeId); // true\r});"}],"name":"eachAll","longname":"Tree#eachAll","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000447","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"eachAll","signature":"<span class=\"signature\">(iteratee, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Enable facility of tree\r\n     * @api\r\n     * @param {string} featureName - 'Selectable', 'Draggable', 'Editable'\r\n     * @param {object} [options] - Feature options\r\n     * @returns {Tree} this\r\n     * @example\r\n     * tree\r\n     *  .enableFeature('Selectable', {\r\n     *      selectedClassName: 'tui-tree-selected'\r\n     *  })\r\n     *  .enableFeature('Editable', {\r\n     *      enableClassName: tree.classNames.textClass,\r\n     *      dataKey: 'text',\r\n     *      inputClassName: 'myInput'\r\n     *  })\r\n     *  .enableFeature('Draggable', {\r\n     *      useHelper: true,\r\n     *      helperPos: {x: 5, y: 2},\r\n     *      rejectedTagNames: ['UL', 'INPUT', 'BUTTON'],\r\n     *      rejectedClassNames: ['notDraggable', 'notDraggable-2']\r\n     *  })\r\n     *  .enableFeature('Checkbox', {\r\n     *      checkboxClassName: 'tui-tree-checkbox'\r\n     *  });\r\n     */","meta":{"range":[32238,32517],"filename":"tree.js","lineno":1032,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004443","name":"enableFeature","type":"FunctionExpression"},"vars":{"Feature":"Tree#enableFeature~Feature","this.enabledFeatures[undefined]":"Tree#enabledFeatures[undefined]"},"shortpath":"file"},"description":"<p>Enable facility of tree</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>'Selectable', 'Draggable', 'Editable'</p>","name":"featureName"},{"type":{"names":["object"]},"optional":true,"description":"<p>Feature options</p>","name":"options"}],"returns":[{"type":{"names":["Tree"]},"description":"<p>this</p>"}],"examples":[{"caption":"","code":"tree\r .enableFeature('Selectable', {\r     selectedClassName: 'tui-tree-selected'\r })\r .enableFeature('Editable', {\r     enableClassName: tree.classNames.textClass,\r     dataKey: 'text',\r     inputClassName: 'myInput'\r })\r .enableFeature('Draggable', {\r     useHelper: true,\r     helperPos: {x: 5, y: 2},\r     rejectedTagNames: ['UL', 'INPUT', 'BUTTON'],\r     rejectedClassNames: ['notDraggable', 'notDraggable-2']\r })\r .enableFeature('Checkbox', {\r     checkboxClassName: 'tui-tree-checkbox'\r });"}],"name":"enableFeature","longname":"Tree#enableFeature","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000464","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"enableFeature","signature":"<span class=\"signature\">(featureName, options<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {<a target=\"body\" href=\"Tree.html\">Tree</a>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get bottom checked list\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} [parentId] - Node id (default: rootNode id)\n     * @returns {Array.<string>} Checked node ids\n     * @example\n     * //\n     * // node1(v)\n     * //   node2(v)\n     * //   node3(v)\n     * // node4\n     * //   node5(v)\n     * // node6\n     * //   node7(v)\n     * //     node8(v)\n     * //   node9\n     *\n     * var allBottomCheckedList = tree.getBottomCheckedList(); // ['node2', 'node3', 'node5', 'node8']\n     * var descendantsBottomCheckedList = tree.getBottomCheekedList('node6'); // ['node8']\n     */","meta":{"range":[15183,15499],"filename":"checkbox.js","lineno":544,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001179","name":"getBottomCheckedList","type":"FunctionExpression"},"vars":{"tree":"Tree#getBottomCheckedList~tree","checkedList":"Tree#getBottomCheckedList~checkedList","parentId":"Tree#getBottomCheckedList~parentId","":null},"shortpath":"file"},"description":"<p>Get bottom checked list</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Node id (default: rootNode id)</p>","name":"parentId"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Checked node ids</p>"}],"examples":[{"caption":"","code":"//\n// node1(v)\n//   node2(v)\n//   node3(v)\n// node4\n//   node5(v)\n// node6\n//   node7(v)\n//     node8(v)\n//   node9\n\nvar allBottomCheckedList = tree.getBottomCheckedList(); // ['node2', 'node3', 'node5', 'node8']\nvar descendantsBottomCheckedList = tree.getBottomCheekedList('node6'); // ['node8']"}],"name":"getBottomCheckedList","longname":"Tree#getBottomCheckedList","kind":"function","scope":"instance","___id":"T000002R000129","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getBottomCheckedList","signature":"<span class=\"signature\">(parentId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get checked list\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} [parentId] - Node id (default: rootNode id)\n     * @returns {Array.<string>} Checked node ids\n     * @example\n     * //\n     * // node1(v)\n     * //   node2(v)\n     * //   node3(v)\n     * // node4\n     * //   node5(v)\n     * // node6\n     * //   node7(v)\n     * //     node8(v)\n     * //   node9\n     *\n     * var allCheckedList = tree.getCheckedList(); // ['node1', 'node2', 'node3' ,....]\n     * var descendantsCheckedList = tree.getCheekedList('node6'); // ['node7', 'node8']\n     */","meta":{"range":[13046,13357],"filename":"checkbox.js","lineno":470,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001060","name":"getCheckedList","type":"FunctionExpression"},"vars":{"tree":"Tree#getCheckedList~tree","checkedList":"Tree#getCheckedList~checkedList","":null},"shortpath":"file"},"description":"<p>Get checked list</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Node id (default: rootNode id)</p>","name":"parentId"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Checked node ids</p>"}],"examples":[{"caption":"","code":"//\n// node1(v)\n//   node2(v)\n//   node3(v)\n// node4\n//   node5(v)\n// node6\n//   node7(v)\n//     node8(v)\n//   node9\n\nvar allCheckedList = tree.getCheckedList(); // ['node1', 'node2', 'node3' ,....]\nvar descendantsCheckedList = tree.getCheekedList('node6'); // ['node7', 'node8']"}],"name":"getCheckedList","longname":"Tree#getCheckedList","kind":"function","scope":"instance","___id":"T000002R000117","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getCheckedList","signature":"<span class=\"signature\">(parentId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Return child ids\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     * @returns {Array.<string>|undefined} Child ids\r\n     */","meta":{"range":[19882,19968],"filename":"tree.js","lineno":627,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003880","name":"getChildIds","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return child ids</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["Array.<string>","undefined"]},"description":"<p>Child ids</p>"}],"name":"getChildIds","longname":"Tree#getChildIds","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000421","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getChildIds","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>|undefined}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Return the depth of node\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     * @return {number|undefined} Depth\r\n     */","meta":{"range":[19266,19346],"filename":"tree.js","lineno":599,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003846","name":"getDepth","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return the depth of node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["number","undefined"]},"description":"<p>Depth</p>"}],"name":"getDepth","longname":"Tree#getDepth","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000418","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getDepth","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {number|undefined}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Return the last depth of tree\r\n     * @api\r\n     * @return {number} Last depth\r\n     */","meta":{"range":[19460,19536],"filename":"tree.js","lineno":608,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003858","name":"getLastDepth","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return the last depth of tree</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["number"]},"description":"<p>Last depth</p>"}],"name":"getLastDepth","longname":"Tree#getLastDepth","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000419","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getLastDepth","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Get node data\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     * @returns {object|undefined} Node data\r\n     */","meta":{"range":[21305,21391],"filename":"tree.js","lineno":684,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003969","name":"getNodeData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get node data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["object","undefined"]},"description":"<p>Node data</p>"}],"name":"getNodeData","longname":"Tree#getNodeData","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000429","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeData","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {object|undefined}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Get node id from element\r\n     * @api\r\n     * @param {HTMLElement} element - Element\r\n     * @returns {string} Node id\r\n     * @example\r\n     * tree.getNodeIdFromElement(elementInNode); // 'tui-tree-node-3'\r\n     */","meta":{"range":[20625,20891],"filename":"tree.js","lineno":657,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003921","name":"getNodeIdFromElement","type":"FunctionExpression"},"vars":{"idPrefix":"Tree#getNodeIdFromElement~idPrefix","element":"Tree#getNodeIdFromElement~element"},"shortpath":"file"},"description":"<p>Get node id from element</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["HTMLElement"]},"description":"<p>Element</p>","name":"element"}],"returns":[{"type":{"names":["string"]},"description":"<p>Node id</p>"}],"examples":[{"caption":"","code":"tree.getNodeIdFromElement(elementInNode); // 'tui-tree-node-3'"}],"name":"getNodeIdFromElement","longname":"Tree#getNodeIdFromElement","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000425","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeIdFromElement","signature":"<span class=\"signature\">(element)</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Get prefix of node id\r\n     * @api\r\n     * @returns {string} Prefix of node id\r\n     * @example\r\n     * tree.getNodeIdPrefix(); // 'tui-tree-node-'\r\n     */","meta":{"range":[21074,21156],"filename":"tree.js","lineno":674,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003959","name":"getNodeIdPrefix","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get prefix of node id</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>Prefix of node id</p>"}],"examples":[{"caption":"","code":"tree.getNodeIdPrefix(); // 'tui-tree-node-'"}],"name":"getNodeIdPrefix","longname":"Tree#getNodeIdPrefix","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000428","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeIdPrefix","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Return parent id of node\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     * @returns {string|undefined} Parent id\r\n     */","meta":{"range":[20128,20214],"filename":"tree.js","lineno":637,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003892","name":"getParentId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return parent id of node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["string","undefined"]},"description":"<p>Parent id</p>"}],"name":"getParentId","longname":"Tree#getParentId","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000422","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getParentId","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {string|undefined}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Return root node id\r\n     * @api\r\n     * @returns {string} Root node id\r\n     */","meta":{"range":[19643,19722],"filename":"tree.js","lineno":617,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003868","name":"getRootNodeId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return root node id</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>Root node id</p>"}],"name":"getRootNodeId","longname":"Tree#getRootNodeId","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000420","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getRootNodeId","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Get node state.\r\n     * @param {string} nodeId - Node id\r\n     * @return {string|undefined} Node state(('opened', 'closed', undefined)\r\n     * @example\r\n     * tree.getState(nodeId); // 'opened', 'closed',\r\n     *                        // undefined if the node is nonexistent\r\n     */","meta":{"range":[22713,22885],"filename":"tree.js","lineno":724,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004013","name":"getState","type":"FunctionExpression"},"vars":{"node":"Tree#getState~node"},"shortpath":"file"},"description":"<p>Get node state.</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["string","undefined"]},"description":"<p>Node state(('opened', 'closed', undefined)</p>"}],"examples":[{"caption":"","code":"tree.getState(nodeId); // 'opened', 'closed',\r                       // undefined if the node is nonexistent"}],"name":"getState","longname":"Tree#getState","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000432","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getState","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {string|undefined}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Get top checked list\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} [parentId] - Node id (default: rootNode id)\n     * @returns {Array.<string>} Checked node ids\n     * @example\n     * //\n     * // node1(v)\n     * //   node2(v)\n     * //   node3(v)\n     * // node4\n     * //   node5(v)\n     * // node6\n     * //   node7(v)\n     * //     node8(v)\n     * //   node9\n     *\n     * var allTopCheckedList = tree.getTopCheckedList(); // ['node1', 'node5', 'node7']\n     * var descendantsTopCheckedList = tree.getTopCheekedList('node6'); // ['node7']\n     */","meta":{"range":[13951,14565],"filename":"checkbox.js","lineno":504,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001098","name":"getTopCheckedList","type":"FunctionExpression"},"vars":{"tree":"Tree#getTopCheckedList~tree","checkedList":"Tree#getTopCheckedList~checkedList","state":"Tree#getTopCheckedList~state","parentId":"Tree#getTopCheckedList~parentId","":null},"shortpath":"file"},"description":"<p>Get top checked list</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Node id (default: rootNode id)</p>","name":"parentId"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Checked node ids</p>"}],"examples":[{"caption":"","code":"//\n// node1(v)\n//   node2(v)\n//   node3(v)\n// node4\n//   node5(v)\n// node6\n//   node7(v)\n//     node8(v)\n//   node9\n\nvar allTopCheckedList = tree.getTopCheckedList(); // ['node1', 'node5', 'node7']\nvar descendantsTopCheckedList = tree.getTopCheekedList('node6'); // ['node7']"}],"name":"getTopCheckedList","longname":"Tree#getTopCheckedList","kind":"function","scope":"instance","___id":"T000002R000120","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getTopCheckedList","signature":"<span class=\"signature\">(parentId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Whether the node is checked\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @returns {boolean} True if node is indeterminate\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.check(nodeId);\n     * console.log(tree.isChecked(nodeId)); // true\n     */","meta":{"range":[11474,11566],"filename":"checkbox.js","lineno":415,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001024","name":"isChecked","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Whether the node is checked</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>True if node is indeterminate</p>"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.check(nodeId);\nconsole.log(tree.isChecked(nodeId)); // true"}],"name":"isChecked","longname":"Tree#isChecked","kind":"function","scope":"instance","___id":"T000002R000114","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isChecked","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Whether the node is indeterminate\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @returns {boolean} True if node is indeterminate\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.check(nodeId);\n     * console.log(tree.isIndeterminate(nodeId)); // false\n     */","meta":{"range":[11911,12015],"filename":"checkbox.js","lineno":430,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001036","name":"isIndeterminate","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Whether the node is indeterminate</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>True if node is indeterminate</p>"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.check(nodeId);\nconsole.log(tree.isIndeterminate(nodeId)); // false"}],"name":"isIndeterminate","longname":"Tree#isIndeterminate","kind":"function","scope":"instance","___id":"T000002R000115","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isIndeterminate","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Whether the node is leaf\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     * @returns {boolean} True if the node is leaf.\r\n     */","meta":{"range":[30757,30879],"filename":"tree.js","lineno":989,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004408","name":"isLeaf","type":"FunctionExpression"},"vars":{"node":"Tree#isLeaf~node"},"shortpath":"file"},"description":"<p>Whether the node is leaf</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>True if the node is leaf.</p>"}],"name":"isLeaf","longname":"Tree#isLeaf","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000461","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isLeaf","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Whether the node is unchecked or not\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @returns {boolean} True if node is unchecked.\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.uncheck(nodeId);\n     * console.log(tree.isUnchecked(nodeId)); // true\n     */","meta":{"range":[12357,12453],"filename":"checkbox.js","lineno":445,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100001048","name":"isUnchecked","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Whether the node is unchecked or not</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>True if node is unchecked.</p>"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.uncheck(nodeId);\nconsole.log(tree.isUnchecked(nodeId)); // true"}],"name":"isUnchecked","longname":"Tree#isUnchecked","kind":"function","scope":"instance","___id":"T000002R000116","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isUnchecked","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Move a node to new parent\r\n     * - If 'isSilent' is not true, it redraws the tree\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     * @param {string} newParentId - New parent id\r\n     * @param {boolean} [isSilent] - If true, it doesn't redraw children\r\n     * @example\r\n     * tree.move(myNodeId, newParentId); // mode node with redrawing\r\n     * tree.move(myNodeId, newParentId, true); // move node without redrawing\r\n     */","meta":{"range":[28192,28374],"filename":"tree.js","lineno":904,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004264","name":"move","type":"FunctionExpression"},"vars":{"this.isMovingNode":"Tree#isMovingNode"},"shortpath":"file"},"description":"<p>Move a node to new parent</p>\n<ul>\n<li>If 'isSilent' is not true, it redraws the tree</li>\n</ul>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"},{"type":{"names":["string"]},"description":"<p>New parent id</p>","name":"newParentId"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't redraw children</p>","name":"isSilent"}],"examples":[{"caption":"","code":"tree.move(myNodeId, newParentId); // mode node with redrawing\rtree.move(myNodeId, newParentId, true); // move node without redrawing"}],"name":"move","longname":"Tree#move","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000451","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"move","signature":"<span class=\"signature\">(nodeId, newParentId, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Open node\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     */","meta":{"range":[22984,23249],"filename":"tree.js","lineno":738,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004037","name":"open","type":"FunctionExpression"},"vars":{"node":"Tree#open~node","state":"Tree#open~state"},"shortpath":"file"},"description":"<p>Open node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"name":"open","longname":"Tree#open","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000434","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"open","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Refresh tree or node's children\r\n     * @api\r\n     * @param {string} [nodeId] - TreeNode id to refresh\r\n     */","meta":{"range":[25185,25298],"filename":"tree.js","lineno":819,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004185","name":"refresh","type":"FunctionExpression"},"vars":{"nodeId":"Tree#refresh~nodeId"},"shortpath":"file"},"description":"<p>Refresh tree or node's children</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"optional":true,"description":"<p>TreeNode id to refresh</p>","name":"nodeId"}],"name":"refresh","longname":"Tree#refresh","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000445","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"refresh","signature":"<span class=\"signature\">(nodeId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Remove a node with children.\r\n     * - If 'isSilent' is not true, it redraws the tree\r\n     * @api\r\n     * @param {string} nodeId - Node id to remove\r\n     * @param {boolean} [isSilent] - If true, it doesn't redraw children\r\n     * @example\r\n     * tree.remove(myNodeId); // remove node with redrawing\r\n     * tree.remove(myNodeId, true); // remove node without redrawing\r\n     */","meta":{"range":[27639,27728],"filename":"tree.js","lineno":889,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004250","name":"remove","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Remove a node with children.</p>\n<ul>\n<li>If 'isSilent' is not true, it redraws the tree</li>\n</ul>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id to remove</p>","name":"nodeId"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't redraw children</p>","name":"isSilent"}],"examples":[{"caption":"","code":"tree.remove(myNodeId); // remove node with redrawing\rtree.remove(myNodeId, true); // remove node without redrawing"}],"name":"remove","longname":"Tree#remove","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000450","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"remove","signature":"<span class=\"signature\">(nodeId, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Remove node data\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     * @param {string|Array} names - Names of properties\r\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\r\n     * @example\r\n     * tree.setNodeData(nodeId, 'foo'); // auto refresh\r\n     * tree.setNodeData(nodeId, 'foo', true); // not refresh\r\n     */","meta":{"range":[22283,22401],"filename":"tree.js","lineno":712,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003997","name":"removeNodeData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Remove node data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"},{"type":{"names":["string","Array"]},"description":"<p>Names of properties</p>","name":"names"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"examples":[{"caption":"","code":"tree.setNodeData(nodeId, 'foo'); // auto refresh\rtree.setNodeData(nodeId, 'foo', true); // not refresh"}],"name":"removeNodeData","longname":"Tree#removeNodeData","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000431","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"removeNodeData","signature":"<span class=\"signature\">(nodeId, names, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Reset click timer\r\n     */","meta":{"range":[20267,20383],"filename":"tree.js","lineno":644,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003904","name":"resetClickTimer","type":"FunctionExpression"},"vars":{"this.clickTimer":"Tree#clickTimer"},"shortpath":"file"},"description":"<p>Reset click timer</p>","name":"resetClickTimer","longname":"Tree#resetClickTimer","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000423","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"resetClickTimer","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Search node ids by passing the predicate check or matching data\r\n     * @api\r\n     * @param {Function|Object} predicate - Predicate or data\r\n     * @param {Object} [context] - Context of predicate\r\n     * @returns {Array.<string>} Node ids\r\n     * @example\r\n     * // search from predicate\r\n     * var leafNodeIds = tree.search(function(node, nodeId) {\r\n     *     return node.isLeaf();\r\n     * });\r\n     * console.log(leafNodeIds); // ['tui-tree-node-3', 'tui-tree-node-5']\r\n     *\r\n     * // search from data\r\n     * var specialNodeIds = tree.search({\r\n     *     isSpecial: true,\r\n     *     foo: 'bar'\r\n     * });\r\n     * console.log(specialNodeIds); // ['tui-tree-node-5', 'tui-tree-node-10']\r\n     * console.log(tree.getNodeData('tui-tree-node-5').isSpecial); // true\r\n     * console.log(tree.getNodeData('tui-tree-node-5').foo); // 'bar'\r\n     */","meta":{"range":[29254,29534],"filename":"tree.js","lineno":932,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004292","name":"search","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Search node ids by passing the predicate check or matching data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["function","Object"]},"description":"<p>Predicate or data</p>","name":"predicate"},{"type":{"names":["Object"]},"optional":true,"description":"<p>Context of predicate</p>","name":"context"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>Node ids</p>"}],"examples":[{"caption":"","code":"// search from predicate\rvar leafNodeIds = tree.search(function(node, nodeId) {\r    return node.isLeaf();\r});\rconsole.log(leafNodeIds); // ['tui-tree-node-3', 'tui-tree-node-5']\r\r// search from data\rvar specialNodeIds = tree.search({\r    isSpecial: true,\r    foo: 'bar'\r});\rconsole.log(specialNodeIds); // ['tui-tree-node-5', 'tui-tree-node-10']\rconsole.log(tree.getNodeData('tui-tree-node-5').isSpecial); // true\rconsole.log(tree.getNodeData('tui-tree-node-5').foo); // 'bar'"}],"name":"search","longname":"Tree#search","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000454","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"search","signature":"<span class=\"signature\">(predicate, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Select node if the feature-\"Selectable\" is enabled.\n     * @api\n     * @memberOf Tree.prototype\n     * @requires Selectable\n     * @param {string} nodeId - Node id\n     * @example\n     * tree.select('tui-tree-node-3');\n     */","meta":{"range":[2394,4461],"filename":"selectable.js","lineno":96,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100002484","name":"select","type":"FunctionExpression"},"vars":{"tree":"Tree#select~tree","prevElement":"Tree#select~prevElement","nodeElement":"Tree#select~nodeElement","selectedClassName":"Tree#select~selectedClassName","prevNodeId":"Tree#select~prevNodeId","this.prevNodeId":"Tree#select#prevNodeId"},"shortpath":"file"},"description":"<p>Select node if the feature-&quot;Selectable&quot; is enabled.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","requires":["module:Selectable"],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.select('tui-tree-node-3');"}],"name":"select","longname":"Tree#select","kind":"function","scope":"instance","___id":"T000002R000262","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"select","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Set data properties of a node\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     * @param {object} data - Properties\r\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\r\n     * @exmaple\r\n     * tree.setNodeData(nodeId, {foo: 'bar'}); // auto refresh\r\n     * tree.setNodeData(nodeId, {foo: 'bar'}, true); // not refresh\r\n     */","meta":{"range":[21787,21898],"filename":"tree.js","lineno":698,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100003981","name":"setNodeData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Set data properties of a node</p>","tags":[{"originalTitle":"api","title":"api","text":""},{"originalTitle":"exmaple","title":"exmaple","text":"tree.setNodeData(nodeId, {foo: 'bar'}); // auto refresh\rtree.setNodeData(nodeId, {foo: 'bar'}, true); // not refresh","value":"tree.setNodeData(nodeId, {foo: 'bar'}); // auto refresh\rtree.setNodeData(nodeId, {foo: 'bar'}, true); // not refresh"}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"},{"type":{"names":["object"]},"description":"<p>Properties</p>","name":"data"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"setNodeData","longname":"Tree#setNodeData","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000430","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setNodeData","signature":"<span class=\"signature\">(nodeId, data, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Sort all nodes\r\n     * @api\r\n     * @param {Function} comparator - Comparator for sorting\r\n     * @param {boolean} [isSilent] - If true, it doesn't redraw tree\r\n     * @example\r\n     * // Sort with redrawing tree\r\n     * tree.sort(function(nodeA, nodeB) {\r\n     *     var aValue = nodeA.getData('text'),\r\n     *         bValue = nodeB.getData('text');\r\n     *\r\n     *     if (!bValue || !bValue.localeCompare) {\r\n     *         return 0;\r\n     *     }\r\n     *     return bValue.localeCompare(aValue);\r\n     * });\r\n     *\r\n     * // Sort, but not redraw tree\r\n     * tree.sort(function(nodeA, nodeB) {\r\n     *     var aValue = nodeA.getData('text'),\r\n     *         bValue = nodeB.getData('text');\r\n     *\r\n     *     if (!bValue || !bValue.localeCompare) {\r\n     *         return 0;\r\n     *     }\r\n     *     return bValue.localeCompare(aValue);\r\n     * }, true);\r\n     */","meta":{"range":[24898,25047],"filename":"tree.js","lineno":807,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004163","name":"sort","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Sort all nodes</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["function"]},"description":"<p>Comparator for sorting</p>","name":"comparator"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't redraw tree</p>","name":"isSilent"}],"examples":[{"caption":"","code":"// Sort with redrawing tree\rtree.sort(function(nodeA, nodeB) {\r    var aValue = nodeA.getData('text'),\r        bValue = nodeB.getData('text');\r\r    if (!bValue || !bValue.localeCompare) {\r        return 0;\r    }\r    return bValue.localeCompare(aValue);\r});\r\r// Sort, but not redraw tree\rtree.sort(function(nodeA, nodeB) {\r    var aValue = nodeA.getData('text'),\r        bValue = nodeB.getData('text');\r\r    if (!bValue || !bValue.localeCompare) {\r        return 0;\r    }\r    return bValue.localeCompare(aValue);\r}, true);"}],"name":"sort","longname":"Tree#sort","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000444","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"sort","signature":"<span class=\"signature\">(comparator, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n     * Toggle node\r\n     * @api\r\n     * @param {string} nodeId - Node id\r\n     */","meta":{"range":[23716,23999],"filename":"tree.js","lineno":768,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004119","name":"toggle","type":"FunctionExpression"},"vars":{"node":"Tree#toggle~node","state":"Tree#toggle~state"},"shortpath":"file"},"description":"<p>Toggle node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"name":"toggle","longname":"Tree#toggle","kind":"function","memberof":"Tree","scope":"instance","___id":"T000002R000440","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"toggle","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Toggle node checking\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.toggleCheck(nodeId);\n     */","meta":{"range":[10973,11142],"filename":"checkbox.js","lineno":396,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100000999","name":"toggleCheck","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Toggle node checking</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.toggleCheck(nodeId);"}],"name":"toggleCheck","longname":"Tree#toggleCheck","kind":"function","scope":"instance","___id":"T000002R000113","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"toggleCheck","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n     * Uncheck node\n     * @api\n     * @memberOf Tree.prototype\n     * @param {string} nodeId - Node id\n     * @example\n     * var nodeId = 'tui-tree-node-3';\n     * tree.uncheck(nodeId);\n     */","meta":{"range":[10613,10750],"filename":"checkbox.js","lineno":381,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100000980","name":"uncheck","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Uncheck node</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"memberof":"Tree","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"var nodeId = 'tui-tree-node-3';\ntree.uncheck(nodeId);"}],"name":"uncheck","longname":"Tree#uncheck","kind":"function","scope":"instance","___id":"T000002R000112","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"uncheck","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"Tree.html\">Tree</a>#"]}]},{"comment":"/**\r\n * Tree model\r\n * @constructor TreeModel\r\n * @param {Array} data - Data\r\n * @param {Object} options - Options for defaultState and nodeIdPrefix\r\n **/","meta":{"range":[412,566],"filename":"treeModel.js","lineno":18,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{},"shortpath":"file"},"description":"<p>Tree model</p>","kind":"class","name":"TreeModel","params":[{"type":{"names":["Array"]},"description":"<p>Data</p>","name":"data"},{"type":{"names":["Object"]},"description":"<p>Options for defaultState and nodeIdPrefix</p>","name":"options"}],"longname":"TreeModel","scope":"global","___id":"T000002R000484","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"TreeModel","signature":"<span class=\"signature\">(data, options)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\r\n     * Create node\r\n     * @param {object} nodeData - Datum of node\r\n     * @param {string} parentId - Parent id\r\n     * @returns {TreeNode} TreeNode\r\n     */","meta":{"range":[2632,2909],"filename":"treeModel.js","lineno":102,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004801","name":"_createNode","type":"FunctionExpression"},"vars":{"node":"TreeModel#_createNode~node","nodeData":"TreeModel#_createNode~nodeData"},"shortpath":"file"},"description":"<p>Create node</p>","params":[{"type":{"names":["object"]},"description":"<p>Datum of node</p>","name":"nodeData"},{"type":{"names":["string"]},"description":"<p>Parent id</p>","name":"parentId"}],"returns":[{"type":{"names":["TreeNode"]},"description":"<p>TreeNode</p>"}],"name":"_createNode","longname":"TreeModel#_createNode","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000503","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_createNode","signature":"<span class=\"signature\">(nodeData, parentId)</span><span class=\"type-signature\"> &rarr; {<a target=\"body\" href=\"TreeNode.html\">TreeNode</a>}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Set model with tree data\r\n     * @param {Array} data - Tree data\r\n     */","meta":{"range":[1527,1713],"filename":"treeModel.js","lineno":63,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004698","name":"_setData","type":"FunctionExpression"},"vars":{"root":"TreeModel#_setData~root","rootId":"TreeModel#_setData~rootId","this.treeHash[undefined]":"TreeModel#_setData#treeHash[undefined]"},"shortpath":"file"},"description":"<p>Set model with tree data</p>","params":[{"type":{"names":["Array"]},"description":"<p>Tree data</p>","name":"data"}],"name":"_setData","longname":"TreeModel#_setData","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000492","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"_setData","signature":"<span class=\"signature\">(data)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Add node(s).\r\n     * - If the parentId is falsy, the node will be appended to rootNode.\r\n     * - The update event will be fired with parent node.\r\n     * @param {Array|object} data - Raw-data\r\n     * @param {string} parentId - Parent id\r\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\r\n     * @returns {Array.<string>} New added node ids\r\n     */","meta":{"range":[6282,6601],"filename":"treeModel.js","lineno":247,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005093","name":"add","type":"FunctionExpression"},"vars":{"parent":"TreeModel#add~parent","ids":"TreeModel#add~ids","data":"TreeModel#add~data"},"shortpath":"file"},"description":"<p>Add node(s).</p>\n<ul>\n<li>If the parentId is falsy, the node will be appended to rootNode.</li>\n<li>The update event will be fired with parent node.</li>\n</ul>","params":[{"type":{"names":["Array","object"]},"description":"<p>Raw-data</p>","name":"data"},{"type":{"names":["string"]},"description":"<p>Parent id</p>","name":"parentId"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"returns":[{"type":{"names":["Array.<string>"]},"description":"<p>New added node ids</p>"}],"name":"add","longname":"TreeModel#add","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000529","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"add","signature":"<span class=\"signature\">(data, parentId, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Whether a node is a ancestor of another node.\r\n     * @param {string} containerId - Id of a node that may contain the other node\r\n     * @param {string} containedId - Id of a node that may be contained by the other node\r\n     * @returns {boolean} Whether a node contains another node\r\n     */","meta":{"range":[9055,9390],"filename":"treeModel.js","lineno":341,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005343","name":"contains","type":"FunctionExpression"},"vars":{"parentId":"TreeModel#contains~parentId","isContained":"TreeModel#contains~isContained"},"shortpath":"file"},"description":"<p>Whether a node is a ancestor of another node.</p>","params":[{"type":{"names":["string"]},"description":"<p>Id of a node that may contain the other node</p>","name":"containerId"},{"type":{"names":["string"]},"description":"<p>Id of a node that may be contained by the other node</p>","name":"containedId"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether a node contains another node</p>"}],"name":"contains","longname":"TreeModel#contains","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000547","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"contains","signature":"<span class=\"signature\">(containerId, containedId)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Traverse this tree iterating over all descendants of a node.\r\n     * @param {Function} iteratee - Iteratee function\r\n     * @param {string} parentId - Parent node id\r\n     * @param {object} [context] - Context of iteratee\r\n     */","meta":{"range":[10898,11397],"filename":"treeModel.js","lineno":405,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005485","name":"each","type":"FunctionExpression"},"vars":{"stack":"TreeModel#each~stack","nodeId":"TreeModel#each~nodeId","node":"TreeModel#each~node","context":"TreeModel#each~context"},"shortpath":"file"},"description":"<p>Traverse this tree iterating over all descendants of a node.</p>","params":[{"type":{"names":["function"]},"description":"<p>Iteratee function</p>","name":"iteratee"},{"type":{"names":["string"]},"description":"<p>Parent node id</p>","name":"parentId"},{"type":{"names":["object"]},"optional":true,"description":"<p>Context of iteratee</p>","name":"context"}],"name":"each","longname":"TreeModel#each","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000560","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"each","signature":"<span class=\"signature\">(iteratee, parentId, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Traverse this tree iterating over all nodes.\r\n     * @param {Function} iteratee - Iteratee function\r\n     * @param {object} [context] - Context of iteratee\r\n     */","meta":{"range":[10451,10641],"filename":"treeModel.js","lineno":391,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005459","name":"eachAll","type":"FunctionExpression"},"vars":{"context":"TreeModel#eachAll~context","":null},"shortpath":"file"},"description":"<p>Traverse this tree iterating over all nodes.</p>","params":[{"type":{"names":["function"]},"description":"<p>Iteratee function</p>","name":"iteratee"},{"type":{"names":["object"]},"optional":true,"description":"<p>Context of iteratee</p>","name":"context"}],"name":"eachAll","longname":"TreeModel#eachAll","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000558","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"eachAll","signature":"<span class=\"signature\">(iteratee, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Get child ids\r\n     * @param {string} nodeId - Node id\r\n     * @returns {Array.<string>|undefined} Child ids\r\n     */","meta":{"range":[3457,3629],"filename":"treeModel.js","lineno":135,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004866","name":"getChildIds","type":"FunctionExpression"},"vars":{"node":"TreeModel#getChildIds~node"},"shortpath":"file"},"description":"<p>Get child ids</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["Array.<string>","undefined"]},"description":"<p>Child ids</p>"}],"name":"getChildIds","longname":"TreeModel#getChildIds","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000510","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getChildIds","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {Array.&lt;string>|undefined}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Get children\r\n     * @param {string} nodeId - Node id\r\n     * @returns {Array.<TreeNode>|undefined} children\r\n     */","meta":{"range":[3053,3313],"filename":"treeModel.js","lineno":119,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004835","name":"getChildren","type":"FunctionExpression"},"vars":{"childIds":"TreeModel#getChildren~childIds","":null},"shortpath":"file"},"description":"<p>Get children</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["Array.<TreeNode>","undefined"]},"description":"<p>children</p>"}],"name":"getChildren","longname":"TreeModel#getChildren","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000508","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getChildren","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {Array.&lt;<a target=\"body\" href=\"TreeNode.html\">TreeNode</a>>|undefined}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Get the number of nodes\r\n     * @returns {number} The number of nodes\r\n     */","meta":{"range":[3734,3807],"filename":"treeModel.js","lineno":148,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004888","name":"getCount","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get the number of nodes</p>","returns":[{"type":{"names":["number"]},"description":"<p>The number of nodes</p>"}],"name":"getCount","longname":"TreeModel#getCount","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000512","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getCount","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Get depth from node id\r\n     * @param {string} id - A node id to find\r\n     * @returns {number|undefined} Depth\r\n     */","meta":{"range":[4452,4821],"filename":"treeModel.js","lineno":178,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004942","name":"getDepth","type":"FunctionExpression"},"vars":{"node":"TreeModel#getDepth~node","depth":"TreeModel#getDepth~depth","parent":"TreeModel#getDepth~parent"},"shortpath":"file"},"description":"<p>Get depth from node id</p>","params":[{"type":{"names":["string"]},"description":"<p>A node id to find</p>","name":"id"}],"returns":[{"type":{"names":["number","undefined"]},"description":"<p>Depth</p>"}],"name":"getDepth","longname":"TreeModel#getDepth","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000516","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getDepth","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"> &rarr; {number|undefined}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Get last depth\r\n     * @returns {number} The last depth\r\n     */","meta":{"range":[3898,4105],"filename":"treeModel.js","lineno":156,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004899","name":"getLastDepth","type":"FunctionExpression"},"vars":{"depths":"TreeModel#getLastDepth~depths","":null},"shortpath":"file"},"description":"<p>Get last depth</p>","returns":[{"type":{"names":["number"]},"description":"<p>The last depth</p>"}],"name":"getLastDepth","longname":"TreeModel#getLastDepth","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000513","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getLastDepth","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Find node\r\n     * @param {string} id - A node id to find\r\n     * @returns {TreeNode|undefined} Node\r\n     */","meta":{"range":[4240,4305],"filename":"treeModel.js","lineno":169,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004932","name":"getNode","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Find node</p>","params":[{"type":{"names":["string"]},"description":"<p>A node id to find</p>","name":"id"}],"returns":[{"type":{"names":["TreeNode","undefined"]},"description":"<p>Node</p>"}],"name":"getNode","longname":"TreeModel#getNode","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000515","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNode","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"> &rarr; {<a target=\"body\" href=\"TreeNode.html\">TreeNode</a>|undefined}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Get node data (all)\r\n     * @param {string} nodeId - Node id\r\n     * @returns {object|undefined} Node data\r\n     */","meta":{"range":[10089,10260],"filename":"treeModel.js","lineno":377,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005437","name":"getNodeData","type":"FunctionExpression"},"vars":{"node":"TreeModel#getNodeData~node"},"shortpath":"file"},"description":"<p>Get node data (all)</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"returns":[{"type":{"names":["object","undefined"]},"description":"<p>Node data</p>"}],"name":"getNodeData","longname":"TreeModel#getNodeData","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000556","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeData","signature":"<span class=\"signature\">(nodeId)</span><span class=\"type-signature\"> &rarr; {object|undefined}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Return prefix of node id\r\n     * @returns {string} Prefix\r\n     */","meta":{"range":[1356,1427],"filename":"treeModel.js","lineno":55,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004691","name":"getNodeIdPrefix","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return prefix of node id</p>","returns":[{"type":{"names":["string"]},"description":"<p>Prefix</p>"}],"name":"getNodeIdPrefix","longname":"TreeModel#getNodeIdPrefix","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000491","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getNodeIdPrefix","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Return parent id of node\r\n     * @param {string} id - Node id\r\n     * @returns {string|undefined} Parent id\r\n     */","meta":{"range":[4964,5128],"filename":"treeModel.js","lineno":201,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004995","name":"getParentId","type":"FunctionExpression"},"vars":{"node":"TreeModel#getParentId~node"},"shortpath":"file"},"description":"<p>Return parent id of node</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"id"}],"returns":[{"type":{"names":["string","undefined"]},"description":"<p>Parent id</p>"}],"name":"getParentId","longname":"TreeModel#getParentId","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000523","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getParentId","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"> &rarr; {string|undefined}</span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Move a node to new parent's child\r\n     * @param {string} nodeId - Node id\r\n     * @param {string} newParentId - New parent id\r\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\r\n     */","meta":{"range":[7966,8736],"filename":"treeModel.js","lineno":311,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005240","name":"move","type":"FunctionExpression"},"vars":{"node":"TreeModel#move~node","originalParent":"TreeModel#move~originalParent","originalParentId":"TreeModel#move~originalParentId","newParent":"TreeModel#move~newParent","newParentId":"TreeModel#move~newParentId"},"shortpath":"file"},"description":"<p>Move a node to new parent's child</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"},{"type":{"names":["string"]},"description":"<p>New parent id</p>","name":"newParentId"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"move","longname":"TreeModel#move","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000538","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"move","signature":"<span class=\"signature\">(nodeId, newParentId, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Remove a node with children.\r\n     * - The update event will be fired with parent node.\r\n     * @param {string} id - Node id to remove\r\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\r\n     */","meta":{"range":[5383,5871],"filename":"treeModel.js","lineno":216,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005017","name":"remove","type":"FunctionExpression"},"vars":{"node":"TreeModel#remove~node","parent":"TreeModel#remove~parent","":null},"shortpath":"file"},"description":"<p>Remove a node with children.</p>\n<ul>\n<li>The update event will be fired with parent node.</li>\n</ul>","params":[{"type":{"names":["string"]},"description":"<p>Node id to remove</p>","name":"id"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"remove","longname":"TreeModel#remove","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000525","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"remove","signature":"<span class=\"signature\">(id, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Remove node data\r\n     * @param {string} id - Node id\r\n     * @param {string|Array} names - Names of properties\r\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\r\n     */","meta":{"range":[7327,7719],"filename":"treeModel.js","lineno":287,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005182","name":"removeNodeData","type":"FunctionExpression"},"vars":{"node":"TreeModel#removeNodeData~node"},"shortpath":"file"},"description":"<p>Remove node data</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"id"},{"type":{"names":["string","Array"]},"description":"<p>Names of properties</p>","name":"names"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"removeNodeData","longname":"TreeModel#removeNodeData","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000536","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"removeNodeData","signature":"<span class=\"signature\">(id, names, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Set data properties of a node\r\n     * @param {string} id - Node id\r\n     * @param {object} props - Properties\r\n     * @param {boolean} [isSilent] - If true, it doesn't trigger the 'update' event\r\n     */","meta":{"range":[6831,7095],"filename":"treeModel.js","lineno":267,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005143","name":"setNodeData","type":"FunctionExpression"},"vars":{"node":"TreeModel#setNodeData~node"},"shortpath":"file"},"description":"<p>Set data properties of a node</p>","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"id"},{"type":{"names":["object"]},"description":"<p>Properties</p>","name":"props"},{"type":{"names":["boolean"]},"optional":true,"description":"<p>If true, it doesn't trigger the 'update' event</p>","name":"isSilent"}],"name":"setNodeData","longname":"TreeModel#setNodeData","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000534","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setNodeData","signature":"<span class=\"signature\">(id, props, isSilent<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]},{"comment":"/**\r\n     * Sort nodes\r\n     * @param {Function} comparator - Comparator function\r\n     */","meta":{"range":[9495,9947],"filename":"treeModel.js","lineno":356,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005381","name":"sort","type":"FunctionExpression"},"vars":{"":null},"shortpath":"file"},"description":"<p>Sort nodes</p>","params":[{"type":{"names":["function"]},"description":"<p>Comparator function</p>","name":"comparator"}],"name":"sort","longname":"TreeModel#sort","kind":"function","memberof":"TreeModel","scope":"instance","___id":"T000002R000552","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"sort","signature":"<span class=\"signature\">(comparator)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeModel.html\">TreeModel</a>#"]}]},{"comment":"/**\n * TreeNode\n * @Constructor TreeNode\n * @param {Object} nodeData - Node data\n * @param {string} [parentId] - Parent node id\n */","meta":{"range":[337,468],"filename":"treeNode.js","lineno":18,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{},"shortpath":"file"},"description":"<p>TreeNode</p>","kind":"class","name":"TreeNode","params":[{"type":{"names":["Object"]},"description":"<p>Node data</p>","name":"nodeData"},{"type":{"names":["string"]},"optional":true,"description":"<p>Parent node id</p>","name":"parentId"}],"longname":"TreeNode","scope":"global","___id":"T000002R000581","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"TreeNode","signature":"<span class=\"signature\">(nodeData, parentId<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":[],"methods":[{"comment":"/**\n     * Add child id\n     * @param {string} id - Child node id\n     */","meta":{"range":[3684,3850],"filename":"treeNode.js","lineno":176,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005849","name":"addChildId","type":"FunctionExpression"},"vars":{"childIds":"TreeNode#addChildId~childIds"},"shortpath":"file"},"description":"<p>Add child id</p>","params":[{"type":{"names":["string"]},"description":"<p>Child node id</p>","name":"id"}],"name":"addChildId","longname":"TreeNode#addChildId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000609","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"addChildId","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get all data\n     * @api\n     * @returns {Object} Data\n     */","meta":{"range":[4304,4382],"filename":"treeNode.js","lineno":207,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005901","name":"getAllData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get all data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["Object"]},"description":"<p>Data</p>"}],"name":"getAllData","longname":"TreeNode#getAllData","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000613","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getAllData","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Object}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get id list of children\n     * @api\n     * @returns {Array.<number>} Id list of children\n     */","meta":{"range":[3529,3599],"filename":"treeNode.js","lineno":168,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005839","name":"getChildIds","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get id list of children</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["Array.<number>"]},"description":"<p>Id list of children</p>"}],"name":"getChildIds","longname":"TreeNode#getChildIds","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000608","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getChildIds","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {Array.&lt;number>}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get data\n     * @api\n     * @param {string} name - Property name of data\n     * @returns {*} Data\n     */","meta":{"range":[4155,4219],"filename":"treeNode.js","lineno":198,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005891","name":"getData","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Property name of data</p>","name":"name"}],"returns":[{"type":{"names":["*"]},"description":"<p>Data</p>"}],"name":"getData","longname":"TreeNode#getData","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000612","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getData","signature":"<span class=\"signature\">(name)</span><span class=\"type-signature\"> &rarr; {*}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get id\n     * @api\n     * @returns {string} Node id\n     */","meta":{"range":[2848,2898],"filename":"treeNode.js","lineno":134,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005805","name":"getId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get id</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>Node id</p>"}],"name":"getId","longname":"TreeNode#getId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000602","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getId","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get parent id\n     * @api\n     * @returns {string} Parent node id\n     */","meta":{"range":[2994,3056],"filename":"treeNode.js","lineno":143,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005812","name":"getParentId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get parent id</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>Parent node id</p>"}],"name":"getParentId","longname":"TreeNode#getParentId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000603","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getParentId","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Get state\n     * @api\n     * @returns {string} state ('opened' or 'closed')\n     */","meta":{"range":[2710,2766],"filename":"treeNode.js","lineno":125,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005798","name":"getState","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Get state</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["string"]},"description":"<p>state ('opened' or 'closed')</p>"}],"name":"getState","longname":"TreeNode#getState","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000601","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"getState","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Return true if this node has a provided child id.\n     * @api\n     * @param {string} id - Node id\n     * @returns {boolean} - Whether this node has a provided child id.\n     */","meta":{"range":[5051,5132],"filename":"treeNode.js","lineno":238,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005961","name":"hasChild","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return true if this node has a provided child id.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"id"}],"returns":[{"type":{"names":["boolean"]},"description":"<ul>\n<li>Whether this node has a provided child id.</li>\n</ul>"}],"name":"hasChild","longname":"TreeNode#hasChild","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000617","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"hasChild","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Return whether this node is leaf.\n     * @api\n     * @returns {boolean} Node is leaf or not.\n     */","meta":{"range":[5255,5325],"filename":"treeNode.js","lineno":247,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005975","name":"isLeaf","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return whether this node is leaf.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Node is leaf or not.</p>"}],"name":"isLeaf","longname":"TreeNode#isLeaf","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000618","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isLeaf","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Return whether this node is root.\n     * @api\n     * @returns {boolean} Node is root or not.\n     */","meta":{"range":[5448,5523],"filename":"treeNode.js","lineno":256,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005986","name":"isRoot","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Return whether this node is root.</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Node is root or not.</p>"}],"name":"isRoot","longname":"TreeNode#isRoot","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000619","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"isRoot","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Remove child id\n     * @param {string} id - Child node id\n     */","meta":{"range":[3938,4027],"filename":"treeNode.js","lineno":188,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005878","name":"removeChildId","type":"FunctionExpression"},"shortpath":"file"},"description":"<p>Remove child id</p>","params":[{"type":{"names":["string"]},"description":"<p>Child node id</p>","name":"id"}],"name":"removeChildId","longname":"TreeNode#removeChildId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000611","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"removeChildId","signature":"<span class=\"signature\">(id)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Remove data\n     * @api\n     * @param {...string} names - Names of data\n     */","meta":{"range":[4704,4852],"filename":"treeNode.js","lineno":226,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005938","name":"removeData","type":"FunctionExpression"},"vars":{"":null},"shortpath":"file"},"description":"<p>Remove data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"variable":true,"description":"<p>Names of data</p>","name":"names"}],"name":"removeData","longname":"TreeNode#removeData","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000616","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"removeData","signature":"<span class=\"signature\">(&hellip;names)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Replace childIds\n     * @param {Array.<number>} childIds - Id list of children\n     */","meta":{"range":[3332,3410],"filename":"treeNode.js","lineno":159,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005829","name":"replaceChildIds","type":"FunctionExpression"},"vars":{"this._childIds":"TreeNode#replaceChildIds#_childIds"},"shortpath":"file"},"description":"<p>Replace childIds</p>","params":[{"type":{"names":["Array.<number>"]},"description":"<p>Id list of children</p>","name":"childIds"}],"name":"replaceChildIds","longname":"TreeNode#replaceChildIds","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000606","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"replaceChildIds","signature":"<span class=\"signature\">(childIds)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Set data\n     * @api\n     * @param {Object} data - Data for adding\n     */","meta":{"range":[4479,4602],"filename":"treeNode.js","lineno":216,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005915","name":"setData","type":"FunctionExpression"},"vars":{"data":"TreeNode#setData~data"},"shortpath":"file"},"description":"<p>Set data</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["Object"]},"description":"<p>Data for adding</p>","name":"data"}],"name":"setData","longname":"TreeNode#setData","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000614","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setData","signature":"<span class=\"signature\">(data)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Set parent id\n     * @param {string} parentId - Parent node id\n     */","meta":{"range":[3149,3223],"filename":"treeNode.js","lineno":151,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005819","name":"setParentId","type":"FunctionExpression"},"vars":{"this._parentId":"TreeNode#setParentId#_parentId"},"shortpath":"file"},"description":"<p>Set parent id</p>","params":[{"type":{"names":["string"]},"description":"<p>Parent node id</p>","name":"parentId"}],"name":"setParentId","longname":"TreeNode#setParentId","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000604","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setParentId","signature":"<span class=\"signature\">(parentId)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Set state\n     * @api\n     * @param {string} state - State of node ('closed', 'opened')\n     */","meta":{"range":[2484,2604],"filename":"treeNode.js","lineno":115,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005775","name":"setState","type":"FunctionExpression"},"vars":{"state":"TreeNode#setState~state","this._state":"TreeNode#setState#_state"},"shortpath":"file"},"description":"<p>Set state</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"params":[{"type":{"names":["string"]},"description":"<p>State of node ('closed', 'opened')</p>","name":"state"}],"name":"setState","longname":"TreeNode#setState","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000598","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setState","signature":"<span class=\"signature\">(state)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]},{"comment":"/**\n     * Toggle state\n     * @api\n     */","meta":{"range":[2181,2366],"filename":"treeNode.js","lineno":102,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100005746","name":"toggleState","type":"FunctionExpression"},"vars":{"this._state":"TreeNode#toggleState#_state"},"shortpath":"file"},"description":"<p>Toggle state</p>","tags":[{"originalTitle":"api","title":"api","text":""}],"name":"toggleState","longname":"TreeNode#toggleState","kind":"function","memberof":"TreeNode","scope":"instance","___id":"T000002R000595","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"toggleState","signature":"<span class=\"signature\">()</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"TreeNode.html\">TreeNode</a>#"]}]}],"externals":[],"events":[{"comment":"/**\r\n         * @api\r\n         * @event Tree#afterDraw\r\n         * @param {string} nodeId - Node id\r\n         * @example\r\n         * tree.on('afterDraw', function(nodeId) {\r\n         *     if (tree.isMovingNode) {\r\n         *         console.log('isMovingNode');\r\n         *     }\r\n         *     console.log('afterDraw: ' + nodeId);\r\n         * });\r\n         */","meta":{"range":[17269,17631],"filename":"tree.js","lineno":532,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"afterDraw","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.on('afterDraw', function(nodeId) {\r    if (tree.isMovingNode) {\r        console.log('isMovingNode');\r    }\r    console.log('afterDraw: ' + nodeId);\r});"}],"memberof":"Tree","longname":"Tree#event_afterDraw","scope":"instance","___id":"T000002R000407","___s":true,"attribs":"","id":"event_afterDraw","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n         * @api\r\n         * @event Tree#beforeDraw\r\n         * @param {string} nodeId - Node id\r\n         * @example\r\n         * tree.on('beforeDraw', function(nodeId) {\r\n         *     if (tree.isMovingNode) {\r\n         *         console.log('isMovingNode');\r\n         *     }\r\n         *     console.log('beforeDraw: ' + nodeId);\r\n         * });\r\n         */","meta":{"range":[16512,16877],"filename":"tree.js","lineno":508,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"beforeDraw","params":[{"type":{"names":["string"]},"description":"<p>Node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.on('beforeDraw', function(nodeId) {\r    if (tree.isMovingNode) {\r        console.log('isMovingNode');\r    }\r    console.log('beforeDraw: ' + nodeId);\r});"}],"memberof":"Tree","longname":"Tree#event_beforeDraw","scope":"instance","___id":"T000002R000401","___s":true,"attribs":"","id":"event_beforeDraw","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n         * @api\n         * @event Tree#beforeSelect\n         * @param {string} nodeId - Selected node id\n         * @param {string} prevNodeId - Previous selected node id\n         * @param {Element|undefined} target - Target element\n         * @example\n         * tree\n         *  .enableFeature('Selectable')\n         *  .on('beforeSelect', function(nodeId, prevNodeId, target) {\n         *      console.log('selected node: ' + nodeId);\n         *      console.log('previous selected node: ' + prevNodeId);\n         *      console.log('target element: ' + target);\n         *      return false; // It cancels \"select\"\n         *      // return true; // It fires \"select\"\n         *  });\n         */","meta":{"range":[2796,3499],"filename":"selectable.js","lineno":110,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"beforeSelect","params":[{"type":{"names":["string"]},"description":"<p>Selected node id</p>","name":"nodeId"},{"type":{"names":["string"]},"description":"<p>Previous selected node id</p>","name":"prevNodeId"},{"type":{"names":["Element","undefined"]},"description":"<p>Target element</p>","name":"target"}],"examples":[{"caption":"","code":"tree\n .enableFeature('Selectable')\n .on('beforeSelect', function(nodeId, prevNodeId, target) {\n     console.log('selected node: ' + nodeId);\n     console.log('previous selected node: ' + prevNodeId);\n     console.log('target element: ' + target);\n     return false; // It cancels \"select\"\n     // return true; // It fires \"select\"\n });"}],"memberof":"Tree","longname":"Tree#event_beforeSelect","scope":"instance","___id":"T000002R000273","___s":true,"attribs":"","id":"event_beforeSelect","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n             * @api\n             * @event Tree#check\n             * @param {string} nodeId - Checked node id\n             * @example\n             * tree.on('check', function(nodeId) {\n             *     console.log('checked: ' + nodeId);\n             * });\n             */","meta":{"range":[6327,6603],"filename":"checkbox.js","lineno":228,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"check","params":[{"type":{"names":["string"]},"description":"<p>Checked node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.on('check', function(nodeId) {\n    console.log('checked: ' + nodeId);\n});"}],"memberof":"Tree","longname":"Tree#event_check","scope":"instance","___id":"T000002R000084","___s":true,"attribs":"","id":"event_check","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\r\n         * @api\r\n         * @event Tree#move\r\n         * @param {{nodeId: string, originalParentId: string, newParentId: string}} treeEvent - Tree event\r\n         * @example\r\n         * tree.on('move', function(treeEvent) {\r\n         *     var nodeId = treeEvent.nodeId,\r\n         *         originalParentId = treeEvent.originalParentId,\r\n         *         newParentId = treeEvent.newParentId;\r\n         *\r\n         *     console.log(nodeId, originalParentId, newParentId);\r\n         * });\r\n         */","meta":{"range":[8366,8874],"filename":"tree.js","lineno":244,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"move","params":[{"type":{"names":["Object"]},"description":"<p>Tree event</p>","name":"treeEvent"}],"examples":[{"caption":"","code":"tree.on('move', function(treeEvent) {\r    var nodeId = treeEvent.nodeId,\r        originalParentId = treeEvent.originalParentId,\r        newParentId = treeEvent.newParentId;\r\r    console.log(nodeId, originalParentId, newParentId);\r});"}],"memberof":"Tree","longname":"Tree#event_move","scope":"instance","___id":"T000002R000319","___s":true,"attribs":"","id":"event_move","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n             * @api\n             * @event Tree#select\n             * @param {string} nodeId - Selected node id\n             * @param {string} prevNodeId - Previous selected node id\n             * @param {Element|undefined} target - Target element\n             * @example\n             * tree\n             *  .enableFeature('Selectable')\n             *  .on('select', function(nodeId, prevNodeId, target) {\n             *      console.log('selected node: ' + nodeId);\n             *      console.log('previous selected node: ' + prevNodeId);\n             *      console.log('target element: ' + target);\n             *  });\n             */","meta":{"range":[3705,4346],"filename":"selectable.js","lineno":131,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"select","params":[{"type":{"names":["string"]},"description":"<p>Selected node id</p>","name":"nodeId"},{"type":{"names":["string"]},"description":"<p>Previous selected node id</p>","name":"prevNodeId"},{"type":{"names":["Element","undefined"]},"description":"<p>Target element</p>","name":"target"}],"examples":[{"caption":"","code":"tree\n .enableFeature('Selectable')\n .on('select', function(nodeId, prevNodeId, target) {\n     console.log('selected node: ' + nodeId);\n     console.log('previous selected node: ' + prevNodeId);\n     console.log('target element: ' + target);\n });"}],"memberof":"Tree","longname":"Tree#event_select","scope":"instance","___id":"T000002R000274","___s":true,"attribs":"","id":"event_select","ancestors":["<a href=\"Tree.html\">Tree</a>#"]},{"comment":"/**\n             * @api\n             * @event Tree#uncheck\n             * @param {string} nodeId - Unchecked node id\n             * @example\n             * tree.on('uncheck', function(nodeId) {\n             *     console.log('unchecked: ' + nodeId);\n             * });\n             */","meta":{"range":[6697,6981],"filename":"checkbox.js","lineno":239,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{},"shortpath":"file"},"tags":[{"originalTitle":"api","title":"api","text":""}],"kind":"event","name":"uncheck","params":[{"type":{"names":["string"]},"description":"<p>Unchecked node id</p>","name":"nodeId"}],"examples":[{"caption":"","code":"tree.on('uncheck', function(nodeId) {\n    console.log('unchecked: ' + nodeId);\n});"}],"memberof":"Tree","longname":"Tree#event_uncheck","scope":"instance","___id":"T000002R000086","___s":true,"attribs":"","id":"event_uncheck","ancestors":["<a href=\"Tree.html\">Tree</a>#"]}],"globals":[{"comment":"/**\n * Make class names\n * @param {string} prefix - Prefix of class name\n * @param {Array.<string>} keys - Keys of class names\n * @returns {object.<string, string>} Class names map\n */","meta":{"range":[200,369],"filename":"defaultOption.js","lineno":9,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/consts","code":{"id":"astnode100000003","name":"makeClassNames","type":"FunctionDeclaration","paramnames":["prefix","keys"]},"vars":{"obj":"makeClassNames~obj","":null},"shortpath":"file"},"description":"<p>Make class names</p>","params":[{"type":{"names":["string"]},"description":"<p>Prefix of class name</p>","name":"prefix"},{"type":{"names":["Array.<string>"]},"description":"<p>Keys of class names</p>","name":"keys"}],"returns":[{"type":{"names":["object.<string, string>"]},"description":"<p>Class names map</p>"}],"name":"makeClassNames","longname":"makeClassNames","kind":"function","scope":"global","___id":"T000002R000002","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"makeClassNames","signature":"<span class=\"signature\">(prefix, keys)</span><span class=\"type-signature\"> &rarr; {object.&lt;string, string>}</span>","ancestors":[]},{"comment":"/**\r\n * Set abstract apis to tree prototype\r\n * @param {string} featureName - Feature name\r\n * @param {object} feature - Feature\r\n */","meta":{"range":[33270,33644],"filename":"tree.js","lineno":1070,"path":"/Users/nhnent/Desktop/work/component-tree/src/js","code":{"id":"astnode100004505","name":"setAbstractAPIs","type":"FunctionDeclaration","paramnames":["featureName","feature"]},"vars":{"messageName":"setAbstractAPIs~messageName","apiList":"setAbstractAPIs~apiList","":null},"shortpath":"file"},"description":"<p>Set abstract apis to tree prototype</p>","params":[{"type":{"names":["string"]},"description":"<p>Feature name</p>","name":"featureName"},{"type":{"names":["object"]},"description":"<p>Feature</p>","name":"feature"}],"name":"setAbstractAPIs","longname":"setAbstractAPIs","kind":"function","scope":"global","___id":"T000002R000469","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setAbstractAPIs","signature":"<span class=\"signature\">(featureName, feature)</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n * Checkbox tri-states\n */","meta":{"range":[285,302],"filename":"checkbox.js","lineno":19,"path":"/Users/nhnent/Desktop/work/component-tree/src/js/features","code":{"id":"astnode100000153","name":"STATE_CHECKED","type":"Literal","value":1},"shortpath":"file"},"description":"<p>Checkbox tri-states</p>","name":"STATE_CHECKED","longname":"STATE_CHECKED","kind":"member","scope":"global","___id":"T000002R000031","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"STATE_CHECKED","ancestors":[],"signature":"<span class=\"type-signature\"></span>"}],"mixins":[],"modules":[],"namespaces":[],"interfaces":[],"tutorials":[{"name":"check","longname":"check","title":"Checkbox","exp":"Checkbox"},{"name":"default","longname":"default","title":"Default, Draggable, Selectable","exp":"Default, Draggable, Selectable"},{"name":"depthLabel","longname":"depthLabel","title":"Custom_DepthLabel","exp":"Custom_DepthLabel"},{"name":"selectableNodes","longname":"selectableNodes","title":"Selectable, Editable","exp":"Selectable, Editable"}]})