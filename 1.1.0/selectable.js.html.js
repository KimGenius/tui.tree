tui.util.defineNamespace("fedoc.content", {});
fedoc.content["selectable.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>'use strict';\n\nvar util = require('./util');\n\n/**\n * Set the tree selectable\n * @constructor\n * @param {Tree} tree - Tree\n */\nvar Selectable = tui.util.defineClass(/** @lends Selectable.prototype */{/*eslint-disable*/\n    init: function(tree) { /*eslint-enable*/\n        this.tree = tree;\n        this.selectedClassName = tree.classNames.selectedClass;\n        this.tree.on('singleClick', this.onSingleClick, this);\n        this.tree.on('doubleClick', this.onSingleClick, this);\n        this.tree.on('afterDraw', this.onAfterDraw, this);\n    },\n\n    /**\n     * Disable this module\n     */\n    destroy: function() {\n        var nodeElement = this.getPrevElement();\n        util.removeClass(nodeElement, this.selectedClassName);\n        this.tree.off(this);\n    },\n\n    /**\n     * Custom event handler \"singleClick\"\n     * @param {MouseEvent} event - Mouse event\n     */\n    onSingleClick: function(event) {\n        var tree = this.tree,\n            target = util.getTarget(event),\n            nodeId = tree.getNodeIdFromElement(target),\n            prevElement = this.getPrevElement(),\n            nodeElement = document.getElementById(nodeId),\n            selectedClassName = this.selectedClassName;\n\n        if (!nodeId) {\n            return;\n        }\n\n        util.removeClass(prevElement, selectedClassName);\n        util.addClass(nodeElement, selectedClassName);\n\n        /**\n         * @api\n         * @event Tree#select\n         * @example\n         * tree\n         *  .enableFeature('Selectable')\n         *  .on('select', function(nodeId) {\n         *      console.log('selected node: ' + nodeId);\n         *  });\n         */\n        tree.fire('select', nodeId);\n        this.prevNodeId = nodeId;\n    },\n\n    /**\n     * Get previous selected node element\n     * @returns {HTMLElement} Node element\n     */\n    getPrevElement: function() {\n        return document.getElementById(this.prevNodeId);\n    },\n\n    /**\n     * Custom event handler - \"afterDraw\"\n     */\n    onAfterDraw: function() {\n        var nodeElement = document.getElementById(this.prevNodeId);\n\n        if (nodeElement) {\n            util.addClass(nodeElement, this.selectedClassName);\n        }\n    }\n});\n\nmodule.exports = Selectable;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"